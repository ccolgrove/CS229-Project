<?xml version="1.0"?><api><query><pages><page pageid="546083" ns="0" title="Processing (programming language)"><revisions><rev xml:space="preserve">{{Infobox programming language
| name                   = Processing
| logo                   = [[Image:Processing_Logo_Clipped.svg|180px|Processing logo]]
| paradigm               = [[object-oriented programming|object-oriented]]
| year                   = {{start date and age|2001}}
| designers              = [[C.E.B. Reas|Casey Reas]], Benjamin Fry
| latest_release_version = 1.5.1
| latest_release_date    = {{start date and age|2011|05|15}}
| typing                 = [[strong typing|strong]]
| influenced_by          = [[Design By Numbers (programming language)|Design By Numbers]],  [[Java (programming language)|Java]], [[OpenGL]], [[PostScript]], [[C (programming language)|C]]
| operating_system       = [[Cross-platform]]
| license                = [[GPL]], [[LGPL]]
| website                = {{URL|www.processing.org}}
| file_ext               = .pde
}}
'''Processing''' is an [[open-source software|open source]] [[programming language]] and [[integrated development environment]] (IDE) built for the electronic arts and visual design communities with the purpose of teaching the basics of [[computer programming]] in a visual context, and to serve as the foundation for electronic sketchbooks. The project was initiated in 2001 by [[C.E.B. Reas|Casey Reas]] and [[Benjamin Fry]], both formerly of the Aesthetics and Computation Group at the [[MIT Media Lab]]. One of the stated aims of Processing is to act as a tool to get non-programmers started with programming, through the instant gratification of visual feedback. The language builds on the  [[Java (programming language)|Java programming language]], but uses a simplified syntax and graphics programming model.

==Features==
[[Image:Processing-1.2.1.png|thumb|The Processing IDE]]
Processing includes a &quot;sketchbook&quot;, a minimal alternative to an [[integrated development environment]] (IDE) for organizing projects.

Every Processing sketch is actually a subclass of the &lt;code&gt;[http://processing.googlecode.com/svn/trunk/processing/build/javadoc/core/processing/core/PApplet.html PApplet]&lt;/code&gt; Java-class which implements most of the Processing language's features.

When programming in Processing, all additional classes defined will be treated as inner classes when the code is translated into pure Java before compiling. This means that the use of static variables and methods in classes is prohibited unless you explicitly tell Processing that you want to code in pure Java mode.

===Hello World===
While the Java-like command
&lt;source lang=&quot;java&quot;&gt;
println(&quot;Hello World!&quot;);
&lt;/source&gt;
is a valid [[Hello World program]] in Processing, the following code is a better example of the look and feel of the language.

&lt;source lang=&quot;java&quot;&gt;
void setup() {
 // define the window size &amp; enable anti-aliasing
 size(200, 200);
 smooth();
 // Set &quot;ink&quot; color, font, and alignment for rendering text.
 fill(0);  // Black
 // setup the font (system default sans serif)
 textFont(createFont(&quot;SansSerif&quot;,18));
 textAlign(CENTER);
 noLoop();  // draw() executes only once
}

void draw() {
 // Draw text to screen using the previously set font.
 text(&quot;Hello World!&quot;, width/2, height/2);
}&lt;/source&gt;

===United States presidential election map===
[[File:Processing-sketch jun11a.png|thumb|Output of the following example]]
The next example shows a map of the results of the [[United States presidential election, 2008|2008 USA presidential election]]. Blue denotes states won by [[Barack Obama]], and red denotes those won by [[John McCain]]. (Note:  this map does not show the [[Electoral College (United States)#Congressional_District_Method|Nebraska district in which Obama won an elector]].)
{{clear}}
&lt;source lang=&quot;java&quot;&gt;
PShape usa;
PShape state;
String [] Obama  = { &quot;HI&quot;, &quot;RI&quot;, &quot;CT&quot;, &quot;MA&quot;, &quot;ME&quot;, &quot;NH&quot;, &quot;VT&quot;, &quot;NY&quot;, &quot;NJ&quot;,
	 &quot;FL&quot;, &quot;NC&quot;, &quot;OH&quot;, &quot;IN&quot;, &quot;IA&quot;, &quot;CO&quot;, &quot;NV&quot;, &quot;PA&quot;, &quot;DE&quot;, &quot;MD&quot;, &quot;MI&quot;,
	 &quot;WA&quot;, &quot;CA&quot;, &quot;OR&quot;, &quot;IL&quot;, &quot;MN&quot;, &quot;WI&quot;, &quot;DC&quot;, &quot;NM&quot;, &quot;VA&quot; };

String [] McCain = { &quot;AK&quot;, &quot;GA&quot;, &quot;AL&quot;, &quot;TN&quot;, &quot;WV&quot;, &quot;KY&quot;, &quot;SC&quot;, &quot;WY&quot;, &quot;MT&quot;,
	 &quot;ID&quot;, &quot;TX&quot;, &quot;AZ&quot;, &quot;UT&quot;, &quot;ND&quot;, &quot;SD&quot;, &quot;NE&quot;, &quot;MS&quot;, &quot;MO&quot;, &quot;AR&quot;, &quot;OK&quot;,
	 &quot;KS&quot;, &quot;LA&quot; };

void setup() {
  size(950, 600);
  // The file Blank_US_Map.svg can be found at Wikimedia Commons
  usa = loadShape(&quot;http://upload.wikimedia.org/wikipedia/commons/3/32/Blank_US_Map.svg&quot;);
  smooth(); // Improves the drawing quality of the SVG
  noLoop();
}

void draw() {
  background(255);
  // Draw the full map
  shape(usa, 0, 0);
  // Blue denotes states won by Obama
  statesColoring(Obama , color(0, 0, 255));
  // Red  denotes states won by McCain
  statesColoring(McCain, color(255, 0, 0));
  // Save the map as image
  saveFrame(&quot;map output.png&quot;);
}

void statesColoring(String[] states, int c){
  for (int i = 0; i &lt; states.length; ++i) {
    PShape state = usa.getChild(states[i]);
    // Disable the colors found in the SVG file
    state.disableStyle();
    // Set our own coloring
    fill(c);
    noStroke();
    // Draw a single state
    shape(state, 0, 0);
  }
}
&lt;/source&gt;

==Related projects==
===Design By Numbers===
Processing was based on the original work done on [[Design By Numbers (programming language)|Design By Numbers]] project in MIT. It shares many of the same ideas and is a direct child of that experiment.
===Wiring, Arduino, and Fritzing===
Processing has spawned another project, [[Wiring_(development_platform)|Wiring]], which uses the Processing IDE together with a simplified version of the [[C++ (programming language)|C++ programming language]] as a way to teach artists how to program [[microcontroller]]s. There are now two separate hardware projects, Wiring and [[Arduino]], using the Wiring environment and language.
[[Fritzing]] is another software environment of the same sort, which helps designers and artists to document their interactive prototypes and to take the step from physical prototyping to actual product.

===Mobile Processing===
Another spin-off project, [http://mobile.processing.org/ Mobile Processing] by Francis Li, allows software written using the Processing language and environment to run on Java powered mobile devices.
===Processing.js===
{{main|Processing.js}}
In 2008, [[John Resig]] ported Processing to [[JavaScript]] using the [[Canvas (HTML element)|Canvas element]] for rendering,&lt;ref&gt;[http://ejohn.org/blog/processingjs/ John Resig - Processing.js&lt;!-- Bot generated title --&gt;]&lt;/ref&gt; allowing Processing to be used in modern web browsers without the need for a Java plugin. Since then, the open source community including students at [[Seneca College]] have taken over the project.

===iProcessing===
iProcessing was built to help people develop native [[iPhone]] applications using the Processing language. It is an integration of the [[Processing.js]] library and a Javascript application framework for iPhone.

===Spde===
Spde (standing for Scala Processing Development Environment) replaces Processing's reduced Java syntax and custom preprocessor with the off-the-shelf [[Scala (programming language)|Scala]] language which also [[JVM languages|runs on]] the [[Java platform]] and enforces some of the same restrictions such as disallowing [[Static method|static]]s, while also allowing more concise code, and supporting [[functional programming]].&lt;ref&gt;http://technically.us/spde/About&lt;/ref&gt;&lt;ref&gt;http://technically.us/code/x/runaway-processing/&lt;/ref&gt;&lt;ref&gt;http://technically.us/code/x/flocking-with-spde/&lt;/ref&gt;&lt;ref&gt;http://processing.org/discourse/yabb2/YaBB.pl?num=1219975973&lt;/ref&gt;

===Processing in Clojure===
clj-processing is a wrapper for Processing in the [[Clojure]] language, a [[Lisp (programming language)|Lisp]] that [[JVM languages|runs on]] the [[Java platform]].&lt;ref&gt;http://github.com/rosado/clj-processing&lt;/ref&gt;&lt;ref&gt;http://processing.org/&lt;/ref&gt;

===Processing Monsters===
Processing Monsters is a project by Lukas Vojir intended to help people learn the language in an entertaining fashion.  The &quot;monsters&quot; are simple graphical programs that are only black and white and are mouse reactive.  As of May 3, 2010, there are 70 monsters featured on Vojir's site.&lt;ref&gt;[http://www.rmx.cz/monsters/ Processing Monsters, by Lukas Vojir]&lt;/ref&gt;

==Awards==
In 2005 Reas and Fry won the prestigious Golden Nica award from [[Ars Electronica]] in its Net Vision category for their work on Processing.

Ben Fry won the [http://cooperhewitt.org/nda/awards/interaction-design 2011 National Design Award] given by the Smithsonian Cooper-Hewitt National Design Museum on the category og Interaction Design. The award statement says:

&quot;Drawing on a background in graphic design and computer science, Ben Fry pursues a long-held fascination with visualizing data. As Principal of Fathom Information Design in Boston, Fry develops software, printed works, installations, and books that depict and explain topics from the human genome to baseball salaries to the evolution of text documents. With Casey Reas, he founded the Processing Project, an open-source programming environment for teaching computational design and sketching interactive-media software. It provides artists and designers with accessible means of working with code while encouraging engineers and computer scientists to think about design concepts.&quot;

==License==
The [[Integrated development environment|IDE]] is licensed under the [[GNU General Public License]].

Processing's 'core' libraries, the code included in exported applications and applets, is licensed under the [[GNU Lesser General Public License]], allowing the programmer to release their original code with their license of choice.

==Name==
Originally, Processing had the URL at proce55ing.org, because the &quot;processing&quot; domain was taken. Eventually, however, Reas and Fry acquired the domain. Although the name had a combination of letters and numbers, it was still pronounced &quot;processing&quot;. They do not prefer the environment being referred to as &quot;Proce55ing.&quot; But, despite the name change, Processing still uses the term &quot;p5&quot; sometimes as a shortened name. However, they specifically use &quot;p5&quot; and not &quot;p55&quot;.

==See also==
{{Portal|Free software}}
* [[NodeBox]]
* [[OpenFrameworks]]
* [[JavaFX]]

==Footnotes==
&lt;references/&gt;

==References==
{{Refbegin}}
*{{citation
| first1 = Andrew
| last1 = Glassner
| title = Processing for Visual Artists: How to Create Expressive Images and Interactive Art
| date = August 9, 2010
| edition = 1st
| publisher = A K Peters/CRC Press
| pages = 955
| isbn = 1568817169
| url = http://www.crcpress.com/ecommerce_product/product_detail.jsf?isbn=9781568817163
}}
*{{citation
| first1 = Casey
| last1 = Reas
| first2 = Ben
| last2 = Fry
| title = Getting Started with Processing
| date = June 17, 2010
| edition = 1st
| publisher = Make
| pages = 208
| isbn = 144937980X
| url =
}}
*{{citation
| first = Joshua
| last = Noble
| title = Programming Interactivity: A Designer's Guide to Processing, Arduino, and Openframeworks
| date = July 21, 2009
| edition = 1st
| publisher = [[O'Reilly Media]]
| pages = 736
| isbn = 0596154143
| url = http://oreilly.com/catalog/9780596154141/
}}
*{{citation
| first = Kostas
| last = Terzidis
| title = Algorithms for Visual Design Using the Processing Language
| date = May 11, 2009
| edition = 1st
| publisher = [[John Wiley &amp; Sons|Wiley]]
| pages = 384
| isbn = 0470375485
| url = http://www.wiley.com/WileyCDA/WileyTitle/productCd-0470375485.html
}}
*{{citation
| first1 = Casey
| last1 = Reas
| first2 = Ben
| last2 = Fry
| first3 = John
| last3 = Maeda
| title = Processing: A Programming Handbook for Visual Designers and Artists
| date = September 30, 2007
| edition = 1st
| publisher = The MIT Press
| pages = 736
| isbn = 0262182629
| url = http://mitpress.mit.edu/catalog/item/default.asp?ttype=2&amp;tid=11251
}}
*{{citation
| first = Ben
| last = Fry
| title = Visualizing Data
| date = January 11, 2008
| edition = 1st
| publisher = [[O'Reilly Media]]
| pages = 382
| isbn = 0596514557
| url = http://oreilly.com/catalog/9780596514556/
}}
*{{citation
| first = Ira
| last = Greenberg
| title = Processing: Creative Coding and Computational Art (Foundation)
| date = May 28, 2007
| edition = 1st
| publisher = friends of ED
| pages = 840
| isbn = 159059617X
| url = http://friendsofed.com/book.html?isbn=159059617X
}}
*{{citation
| first = Daniel
| last = Shiffman
| title = Learning Processing: A Beginner's Guide to Programming Images, Animation, and Interaction
| date = August 19, 2008
| edition = 1st
| publisher = Morgan Kaufmann
| pages = 450
| isbn = 0123736021
| url = http://www.learningprocessing.com/
}}
*{{citation
| first    = Robert
| last     = Faludi
| date      = January 4, 2011
| title     = Building Wireless Sensor Networks: with ZigBee, XBee, Arduino, and Processing
| edition   = 1st
| publisher = [[O'Reilly Media]]
| pages     = 320
| isbn      = 978-0-596-80774-0
| url       = http://faludi.com/bwsn
}}
{{Refend}}

==External links==
*{{official website|www.processing.org}}
*http://www.processingjs.org/
*http://www.processinghacks.com/
*http://www.openprocessing.org/
*http://www.processingblogs.org/ {{dead link|date=November 2011}}
*http://ejohn.org/blog/processingjs/
*http://groups.google.com/group/processingjs
*http://hyper-metrix.com/processing/docs
*[http://luckylarry.co.uk/category/programming/processing/ Working with Processing and Arduino]
*[http://www.generative-gestaltung.de Website (german) to the book (soon in english) with nice source-codes and examples]

[[Category:Animation software]]
[[Category:Computer graphics]]
[[Category:Java programming language family]]
[[Category:Object-oriented programming languages]]
[[Category:Cross-platform software]]
[[Category:Educational programming languages]]
[[Category:Free development toolkits and libraries]]
[[Category:Java platform]]

[[ar:Ø¨Ø±ÙØ³ÙØ³ÙØ¬]]
[[ca:Processing]]
[[de:Processing]]
[[es:Processing]]
[[fr:Processing]]
[[ko:íë¡ì¸ì± (íë¡ê·¸ëë° ì¸ì´)]]
[[it:Processing]]
[[nl:Processing]]
[[ja:Processing]]
[[no:Processing]]
[[pl:Processing]]
[[pt:Processing (linguagem de programaÃ§Ã£o)]]
[[ru:Processing]]
[[fi:Processing]]</rev></revisions></page></pages></query></api>
