<?xml version="1.0"?><api><query><pages><page pageid="1551363" ns="0" title="Init"><revisions><rev xml:space="preserve">{{lowercase|title=init}}
'''init''' (short for ''initialization'') is a program for [[Unix]]-based computer [[operating system]]s that [[spawn (computing)|spawn]]s all other processes.  It runs as a [[daemon (computer software)|daemon]] and typically has [[process identifier|PID]] 1. The [[boot loader]] starts the [[kernel]] and the kernel starts init. If one were to delete init without a replacement, the system would encounter a [[kernel panic]] on the next reboot.

The functionality diverged, in Unix systems such as [[Unix System III|System III]] and [[UNIX System V|System V]], from the functionality provided by the init in [[Research Unix]] and its [[Berkeley Software Distribution|BSD]] derivatives. The usage on most [[Linux distribution]]s is compatible with System V, but some distributions, such as [[Arch Linux|Arch]], use a BSD-style and others, such as [[Gentoo Linux|Gentoo]], have their own customized version.

Several replacements for init have been written which attempt to address design limitations such as [[systemd]] or [[Upstart]], used by [[Ubuntu (operating system)|Ubuntu]]&lt;ref&gt;{{cite web|url=http://help.ubuntu.com/community/KnowThyUbuntu |title=Know Thy Ubuntu |publisher=Help.ubuntu.com |date=2009-08-07 |accessdate=2011-06-13}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.linuxquestions.org/questions/ubuntu-63/since-we-have-no-etcinittab-506281/ |title=since we have no /etc/inittab |publisher=Linuxquestions.org |date=30 November 2006 |accessdate=2011-06-13}}&lt;/ref&gt; and some other Linux distributions.&lt;ref&gt;{{cite web|url=http://linuxplanet.com/linuxplanet/reports/6366/1/ |title=Upstart Plans to Ease Linux Management&amp;nbsp;â Streamlining the init Processes | work = Reports |publisher=LinuxPlanet |date=2007-03-08 |accessdate=2011-06-13}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://www.netsplit.com/2006/08/26/upstart-in-universe/ |title=Upstart in Universe | first = Scott James | last = Remnant |publisher=Netsplit.com |date=2006-08-26 |accessdate=2011-06-13}}&lt;/ref&gt;

== SysV-style ==

System V init examines the &lt;code&gt;/etc/inittab&lt;/code&gt; file for an &lt;code&gt;:initdefault:&lt;/code&gt; entry, which tells init whether there is a default [[runlevel]]. If there is no default runlevel, then the user is dumped to a system console, where a runlevel must be entered manually.

=== Runlevels ===

The [[runlevel]]s in [[UNIX System V|System V]] describe certain states of a machine, characterized by the processes run. There are generally 8 runlevels. These are the runlevels 0 to 6 and ''S'' or ''s'', which are aliased to the same runlevel. Of these eight, 3 are so-called &quot;reserved&quot; runlevels:

: 0. Halt
: 1. [[Single user mode]]
: 6. Reboot

Aside from runlevels 0, 1, and 6, every Unix and Unix-like system treats runlevels a little differently. The common denominator is the &lt;code&gt;/etc/inittab&lt;/code&gt; file, which defines what each runlevel does (if they do anything at all).

=== Default runlevels ===

{| class=&quot;wikitable&quot;
|-
! Operating System
! Default runlevel
|-
| [[AIX operating system|AIX]]
| 2
|-
| [[Arch Linux]]
| 3
|-
| [[CentOS]]
| 3 or 5
|-
| [[Debian]]
| 2&lt;ref name=&quot;drl&quot;&gt;{{cite web|url=http://www.debianadmin.com/debian-and-ubuntu-linux-run-levels.html |title=Debian and Ubuntu Linux Run Levels |publisher=Debianadmin.com |date=2009-04-02 |accessdate=2011-06-13}}&lt;/ref&gt;
|-
| [[Gentoo Linux]]
| 3&lt;ref&gt;{{cite web|url=http://www.gentoo.org/doc/en/handbook/handbook-x86.xml?part=2&amp;chap=4 |title=Initscripts | work = Gentoo Linux Documentation | publisher=Gentoo.org |date=2011-03-02 |accessdate=2011-06-13}}&lt;/ref&gt;
|-
| [[HP-UX]]
| 3
|-
| [[Mac OS X]]
| 3
|-
| [[Mandriva Linux]]
| 5
|-
| [[Red Hat Linux]] / [[Fedora (operating system)|Fedora Core]]
| 3 or 5
|-
| [[Slackware Linux]]
| 3
|-
| [[Solaris Operating System|Solaris]]
| 3&lt;ref&gt;{{cite web|url=http://docs.sun.com/app/docs/doc/817-1985/6mhm8o5ru |title=Oracle Documentation |publisher=Docs.sun.com |date=2010-09-07 |accessdate=2011-06-13}}&lt;/ref&gt;
|-
| [[SUSE Linux]]
| 5&lt;ref&gt;[http://www.novell.com/documentation/sles10/pdfdoc/sles_admin/sles_admin.pdf ]{{dead link|date=June 2011}}&lt;/ref&gt;
|-
| [[Ubuntu (operating system)|Ubuntu (Server and Desktop)]]
| 2&lt;ref name=&quot;drl&quot; /&gt;
|}

On the Linux distributions defaulting to runlevel 5 in the table above, runlevel 5 is a multiuser graphical environment running the [[X Window System]], usually with a [[X display manager (program type)|display manager]]. However, in the [[Solaris Operating System|Solaris]] operating system, runlevel 5 is typically reserved to shut down and automatically power off the machine.

On most systems users can check the current runlevel with either of the following commands:
:&lt;code&gt;$ runlevel&lt;/code&gt;
:&lt;code&gt;$ [[who (Unix)|who]] -r&lt;/code&gt;

The current runlevel is typically changed by [[superuser|root]] running the &lt;code&gt;telinit&lt;/code&gt; or &lt;code&gt;init&lt;/code&gt; commands. The default runlevel is set in the &lt;code&gt;/etc/inittab&lt;/code&gt; file with the &lt;code&gt;:initdefault:&lt;/code&gt; entry.

== BSD-style ==

[[Berkeley Software Distribution|BSD]] init runs the initialization [[shell script]] located in &lt;code&gt;/etc/rc&lt;/code&gt;, then launches [[getty (Unix)|getty]] on text-based terminals or a [[windowing system]] such as [[X Window System|X]] on graphical terminals under the control of &lt;code&gt;/etc/ttys&lt;/code&gt;.  There are no runlevels; the &lt;code&gt;/etc/rc&lt;/code&gt; file determines what programs are run by init.  The advantage of this system is that it is simple and easy to edit manually.  However, new software added to the system may require changes to existing files that risk producing an unbootable system.  To mitigate against this, BSD variants have long supported a site-specific &lt;code&gt;/etc/rc.local&lt;/code&gt; file that is run in a sub-shell near the end of the boot sequence.

A fully modular system was introduced with [[NetBSD]] 1.5 and ported to [[FreeBSD]] 5.0 and successors.  This system executes scripts in the &lt;code&gt;/etc/rc.d&lt;/code&gt; directory.  Unlike System V's script ordering, which is derived from the filename of each script, this system uses explicit dependency tags placed within each script.&lt;ref&gt;{{cite web | url = http://aplawrence.com/Basics/unix-startup-scripts-2.html | title = Unix and Linux startup scripts, Part 2 | author = Andrew Smallshaw | date = 7 December 2009 }}&lt;/ref&gt;  The order in which scripts are executed is determined by the ''rcorder'' script based on the requirements stated in these tags.

== Replacements for init ==

Various efforts have been made to replace the traditional init daemons with something better, including:
* [[GoboLinux#Boot system|BootScripts]] in [[GoboLinux]]
* [[DEMONS]], a modification of the init start process by [[KahelOS]], where daemons are started only when the DE (desktop environment) started.
* [[eINIT]], a full replacement of init designed to start processes [[asynchronous]]ly, but with the potential of doing it without shell-scripts
* [[Initng]], a full replacement of init designed to start processes [[asynchronous]]ly
* [[launchd]], a replacement for init introduced in [[Mac OS X v10.4]] (it launches SystemStarter to run old-style &lt;nowiki&gt;'rc.local'&lt;/nowiki&gt; and SystemStarter processes)
* Mudur, an init replacement written in [[Python (programming language)|Python]] and designed to start process [[asynchronous]]ly in use by the [[Pardus (operating system)|Pardus]] Linux distribution.&lt;ref&gt;{{cite web|url=http://www.pardus.org.tr/eng/projects/comar/SpeedingUpLinuxWithPardus.html |title=Speeding Up Linux: One Step Further With Pardus Pardus | author = GÃ¼rer Ãzen, GÃ¶rkem Ãetin |publisher=Pardus.org.tr |date= |accessdate=2011-06-13}}&lt;/ref&gt;
* OpenRC, the default init system for [[Gentoo Linux]]
* [[runit]], a [[cross-platform]] full replacement for init with parallel starting of services
* [[Service Management Facility]], a complete full replacement/redesign of init from the ground up in [[Solaris Operating System|Solaris]] starting with Solaris 10
* [[systemd]], a full replacement for init with parallel starting of services, reduced shell overhead and other features, used by [[List of Fedora versions#Fedora 15|Fedora 15]].
* [[SystemStarter]], a process spawner started by the BSD-style init in [[Mac OS X]] prior to [[Mac OS X v10.4]]
* [[Upstart]], a full replacement of init designed to start processes [[asynchronous]]ly initiated by [[Ubuntu (operating system)|Ubuntu]]

== See also ==
* [[pidof]]

== References ==

{{refs}}

== External links ==

* [http://www.freebsd.org/cgi/man.cgi?query=init&amp;apropos=0&amp;sektion=0&amp;manpath=FreeBSD+6.2-stable&amp;format=html FreeBSD init man page]
* [http://arxiv.org/abs/0706.2748 Paper summarizing Unix init schemes]
* [http://www.sun.com/bigadmin/content/selfheal/smf-quickstart.html smf and milestones in Solaris 10]

[[Category:Unix process and task management-related software]]

[[cs:Init]]
[[de:Init]]
[[es:Init]]
[[eu:Init]]
[[fa:Ø§ÛÙÛØª]]
[[fr:Init]]
[[it:Init]]
[[ja:Init]]
[[pl:Init]]
[[pt:Init]]
[[ru:Init]]
[[fi:Init]]
[[uk:Init]]
[[zh:Init]]</rev></revisions></page></pages></query></api>
