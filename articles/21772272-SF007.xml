<?xml version="1.0"?><api><query><pages><page pageid="21772272" ns="0" title="RPM Package Manager"><revisions><rev xml:space="preserve">{{Infobox software
| name                   = RPM Package Manager (RPM)
&lt;!-- Project has forked.  Should have either none, or all, logos represented here
| logo                   = [[File:RPM Logo.svg|200px]]
--&gt;
| screenshot             =
| caption                =
| collapsible            =
| author                 = [[Red Hat]]
| developer              = Community&lt;ref&gt;{{Cite web|title=RPM -- plans, goals, etc.|url=https://www.redhat.com/archives/fedora-announce-list/2006-December/msg00003.html|publisher=Max Spevack &lt;mspevack redhat com&gt;|accessdate=2011-01-20}}&lt;/ref&gt;
| released               =
| latest release version = 4.9.0
| latest release date    = {{release date|2011|03|02}}
| latest preview version =
| latest preview date    =
| frequently updated     =
| programming language   =
| operating system       = [[GNU/Linux]], [[Unix-like]]
| platform               =
| size                   =
| language               =
| status                 =
| genre                  = [[Package management system|Package management]]
| license                = [[GNU General Public License]]
| website                = http://rpm.org/ http://rpm5.org/
}}

'''RPM Package Manager''' ('''RPM''') is a [[package management system]].&lt;ref name=&quot;max&quot;&gt;{{Cite web|title=Maximum RPM: Taking the Red Hat Package Manager to the Limit|url=http://rpm.org/max-rpm/s1-rpm-file-format-rpm-file-format.html|publisher=rpm.org|accessdate=2010-11-22}}&lt;/ref&gt; The name RPM variously refers to the &lt;tt&gt;.rpm&lt;/tt&gt; [[file format]], files in this format, [[software]] packaged in such files, and the package manager itself. RPM was intended primarily for [[GNU/Linux distributions]]; the file format is the baseline package format of the [[Linux Standard Base]].

Originally developed by Ethan &quot;E$&quot; Cohen at [[Red Hat]] for [[Red Hat Linux]], RPM is now used by many [[GNU/Linux distribution]]s. It has also been ported to some other [[operating system]]s, such as [[Novell NetWare]] (as of version 6.5 SP3) and [[AIX operating system|IBM's AIX]] as of version 4.

Whereas an RPM typically contains the compiled version of the software, an '''SRPM''' contains either the source code corresponding to that RPM or the scripts of a non-compiled software package.

Originally standing for '''Red Hat Package Manager''', RPM now stands for &quot;RPM Package Manager&quot;, a [[recursive acronym]].

== Features ==
For a [[system administrator]] performing software installation and maintenance, the use of package management rather than manual building has advantages such as simplicity, consistency and the ability for these processes to be automated and non-interactive.

A typical RPM [[Software repository|repository]] (the place where the packages are made available publicly) contains thousands of free applications.

Features of RPM include:
* RPM packages can be cryptographically verified with [[GNU Privacy Guard|GPG]] and [[MD5]]
* Original source archive(s) (e.g. &lt;tt&gt;.tar.gz&lt;/tt&gt;, &lt;tt&gt;.tar.bz2&lt;/tt&gt;) are included in SRPMs, making verification easier
* PatchRPMs and DeltaRPMs, the RPM equivalent of a [[Patch (computing)|patch]] file, can incrementally update RPM-installed software
* Automatic build-time dependency evaluation.

== Local operations ==
Packages may come from within a particular distribution (for example [[Red Hat Linux]]) or be built for it by other parties (for example RPM Fusion for Fedora).&lt;ref&gt;{{Cite web|title=RPM Fusion|url=http://rpmfusion.org//|publisher=rpmfusion.org|accessdate=2010-11-22}}&lt;/ref&gt; Circular dependencies among mutually dependent RPMs (so-called &quot;[[dependency hell]]&quot;) can be problematic;&lt;ref&gt;{{cite web|title=An Analysis of RPM Validation Drift|url=http://www.usenix.org/event/lisa02/tech/full_papers/hart/hart.pdf|publisher=USENIX Association|accessdate=2011-03-15}}&lt;/ref&gt; in such cases a single installation command needs to specify all the relevant packages.

=== Front ends ===
There are several front ends to RPM that ease the process of obtaining and installing RPMs and in resolving their dependencies. These include:
* [[Yellow dog Updater, Modified|yum]] used in [[Fedora (operating system)|Fedora]], [[CentOS]]-5, [[Red Hat Enterprise Linux]] 5 and above, [[Scientific Linux]], [[Yellow Dog Linux]] and [[Oracle Linux]].
* [[up2date]] used in [[Red Hat Enterprise Linux]] and [[CentOS]] (CentOS-3 and CentOS-4).
* [[Synaptic Package Manager]] used in [[PCLinuxOS]]
* [[Zypper]] used in [[MeeGo]]&lt;ref&gt;http://wiki.meego.com/Zypper&lt;/ref&gt;, [[openSUSE]] and [[SUSE Linux distributions|SUSE Linux Enterprise]]
* [[urpmi]] used in [[Mandriva Linux]] and [[Mageia]]
* [[apt-rpm]], a port of Debian's [[Advanced Packaging Tool]] (APT) is used in [[Ark Linux]]&lt;ref&gt;http://www.arklinux.org/?q=node/53#rpm&lt;/ref&gt;
* [[Smart Package Manager]], used in Unity Linux, available for many distributions including [[Fedora (operating system)|Fedora]]

=== Local RPM installation database ===
Working behind the scenes of the package manager is the RPM database, stored in &lt;code&gt;/var/lib/rpm&lt;/code&gt;. It uses [[Berkeley DB]] as its back-end. It consists of a single database (&lt;code&gt;Packages&lt;/code&gt;) containing all of the meta information of the installed rpms. Multiple databases are created for indexing purposes, replicating data to speed up queries. The database is used to keep track of all files that are changed and created when a user (using RPM) installs a package, thus enabling the user (via RPM) to reverse the changes and remove the package later. If the database gets corrupted (which is possible if the RPM client is [[kill (Unix)|kill]]ed), the index databases can be recreated with the &lt;code&gt;rpm --rebuilddb&lt;/code&gt; command.&lt;ref&gt;{{Cite web|title=Repair an RPM database safely|url=http://www.oldrpm.org/hintskinks/repairdb/|publisher=|accessdate=2011-11-11}}&lt;/ref&gt;

== Description ==
Whilst the RPM format is the same across different [[Linux distribution]]s, the detailed conventions and guidelines may vary across them.

=== Package filename and label ===
An RPM is delivered in a single file, normally in the format:
:&lt;tt&gt;&lt;name&gt;-&lt;version&gt;-&lt;release&gt;.&lt;architecture&gt;.rpm&lt;/tt&gt;
such as:
: &lt;tt&gt;libgnomeuimm-2.0-2.0.0-3.i386.rpm&lt;tt&gt;

Source code may also be distributed in RPM packages; the architecture part is specified as &lt;tt&gt;&lt;src&gt;&lt;/tt&gt;:
:&lt;tt&gt;libgnomeuimm-2.0-2.0.0-3.src.rpm&lt;/tt&gt;

RPMs with the &lt;tt&gt;noarch.rpm&lt;/tt&gt; extension refer to packages which do not depend on a certain computer's architecture. These include graphics and text for another program to use, and programs written in interpreted programming languages such as [[Python (programming language)|Python]] programs and [[shell script]]s.

The RPM contents also include a ''package label'', which contains the following pieces of information:
* the software name
* the software version (the version taken from original &quot;upstream&quot; source of the software)
* the package release (the number of times the package has been rebuilt using the same version of the software). This field is also often used for indicating the specific distribution the package is intended for by appending strings like &quot;mdv&quot; (formerly, &quot;mdk&quot;) ([[Mandriva Linux]]), &quot;mga&quot; ([[Mageia]]), &quot;fc4&quot; ([[Fedora (operating system)|Fedora Core]] 4), &quot;rhl9&quot; (Red Hat Linux 9), &quot;suse100&quot; ([[SUSE Linux]] 10.0) etc.
* the architecture the package was built for (i386, i686, athlon, ppc, etc.)

The package label does not necessarily need to match the name of the file.

=== Library packaging ===
Libraries are distributed in two separate packages for each version. One contains the precompiled code for use at run-time, while the second one contains the related development files such as headers, etc. Those packages have &quot;-devel&quot; appended to their name field. The system administrator should ensure that the versions of the binary and development packages match.

=== Format ===
The format is binary and consists of four sections:&lt;ref name=&quot;max&quot;/&gt;
* The lead identifies the file as an RPM file and contains some obsolete headers.
* The signature which can be used to ensure integrity and/or authenticity
* The header contains [[metadata]] including package name, version, architecture, file list, etc..
* A file archive, which usually is in [[cpio]] format, compressed with [[gzip]]. The &lt;tt&gt;rpm2cpio&lt;/tt&gt; tool enables retrieval of the cpio file without needing to install the RPM package.&lt;ref&gt;{{Cite web|title=Supplemental Packaging Software|url=http://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/RPM_Guide/ch-extra-packaging-tools.html#id461860|publisher=Fedora Project|accessdate=2011-11-11}}&lt;/ref&gt;
** More recent versions of RPM can also use [[bzip2]], [[lzma]] or [[xz]] compression.
** RPM 5.0 format supports using [[xar (archiver)|xar]] for archiving.

=== SPEC file ===
The &quot;Recipe&quot; for creating an RPM package is a spec file. Spec files end in the &quot;.spec&quot; suffix and contain the package name, version, RPM revision number, steps to build, install, and clean a package, and a changelog. Multiple packages can be built from a single RPM spec file, if desired. RPM packages are created from RPM spec files using the rpmbuild tool.

Spec files are usually distributed within SRPM files, which contain the spec file packaged along with the source code.

=== SRPM ===
A typical RPM is pre-compiled software ready for direct installation.  The corresponding source code can also be distributed. This is done in an SRPM, which also includes the &quot;SPEC&quot; file describing the software and how it is built. The SRPM also allows the user to compile, and perhaps modify, the code itself.

A software package may contain only scripts that are architecture-independent. In such a case only an SRPM may be available; this is still an installable RPM.

== Forks ==
{{As of|2010|6}}, there are two versions of RPM in development&amp;nbsp;â one led by the Fedora Project and Red Hat, and the other by a separate group led by a previous [[Software maintainer|maintainer]] of RPM, a former employee of Red Hat.

=== RPM.org ===
The ''rpm.org'' community's first major code revision was in July 2007; version 4.8 was released in January 2010, and 4.9 in March 2011.

This version is used by distributions such as [[Fedora (operating system)|Fedora]], [[Red Hat Enterprise Linux]], SUSE's [[openSUSE]] and [[SUSE Linux Enterprise]], [[CentOS]] and formerly [[Mandriva]] (only for 2009.0 - 2010.2).

=== RPM v5 ===
The RPM maintainer since 1999, Jeff Johnson, continued development efforts together with participants from several other distributions. RPM version 5 was released in May 2007.

This version is used by distributions such as [[Unity Linux]], [[Wind River Linux]] and [[cAos Linux]], and also by the [[OpenPKG]] project which provides packages for other common UNIX-platforms. [[Mandriva]] has currently switched to it for their development branch, with 2011.0 becoming its first release using it &lt;ref&gt;{{Citation |last1= Bodnar |first1= Ladislav |first2= Jesse |last2= Smith |title= DistroWatch Weekly |url= http://distrowatch.com/weekly.php?issue=20101122#news |accessdate= 2010-11-22 |date= 2010-11-22 |publisher= [[DistroWatch]] |lastauthoramp=yes }}&lt;/ref&gt;. [[ArkLinux]] also announced intention to move to RPM5 for its next release.

== See also ==
{{Portal|Free software}}

* [[Autopackage]] - a &quot;complementary&quot; package management system
* [[Delta ISO]] - an ISO image which contains RPM Package Manager files
* [[dpkg]] - package management system used by Debian and its derivatives
* [[List of Linux distributions#RPM-based|List of Linux distributions]]
* [[Portage (software)|Portage]] - package management system used by Gentoo
* [[FreeBSD Ports|Ports and Packages]] - FreeBSD's package management system
* [[pkg-config]] - queries libraries to compile software from its source code
* [[pkgsrc]] - package management system focusing on NetBSD, but available for Solaris, Linux, Darwin (Mac OS X), FreeBSD, OpenBSD, IRIX, BSD/OS, AIX, Interix (Microsoft Windows Services for Unix), DragonFlyBSD, OSF/1, HP-UX, QNX, and Haiku

== References ==
{{Reflist}}

== External links ==
* [http://docs.fedoraproject.org/en-US/Fedora_Draft_Documentation/0.1/html/RPM_Guide/ Red Hat RPM Guide] from the Fedora project.
* [http://rpm.org/ RPM.org project home page]
* [http://rpm5.org/ RPM5 Package Manager homepage]
* [http://packman.linux.is/ RPM and DPKG command reference]
* [http://redhatmagazine.com/2007/02/08/the-story-of-rpm/ The story of RPM] by Matt Frye in [http://www.redhatmagazine.com/ Red Hat Magazine]
* [http://www.digitalprognosis.com/linuxtips/fun-with-rpm-and-custom-query-strings-on-redhat-linux-or-any-rpm-based-distribution/ Advanced RPM query strings]
* [http://msamir.net/tag/rpm/ Video tutorials for Building and Patching the RPMs]
* [http://grahams.free-online.co.uk/RPMNotes.html RPM Notes - Building RPMs the easy way]

{{Red Hat}}
{{Archive formats}}
{{Linux}}

{{DEFAULTSORT:Rpm Package Manager}}
[[Category:Archive formats]]
[[Category:Free package management systems]]
[[Category:Linux package management-related software]]
[[Category:Red Hat]]

[[ar:ÙØ¯ÙØ± Ø­Ø²Ù Ø¢Ø± Ø¨Ù Ø¥Ù]]
[[ca:Sistema de paquets rpm]]
[[cs:RPM Package Manager]]
[[da:RPM Package Manager]]
[[de:RPM Package Manager]]
[[es:RPM Package Manager]]
[[eu:RPM]]
[[fr:RPM Package Manager]]
[[ko:RPM í¨í¤ì§ ë§¤ëì ]]
[[id:RPM Package Manager]]
[[it:RPM Package Manager]]
[[ml:à´àµ¼.à´ªà´¿.à´à´. à´ªà´¾à´àµà´àµà´àµ à´®à´¾à´¨àµà´àµ¼]]
[[ms:RPM Package Manager]]
[[nl:RPM Package Manager]]
[[ja:RPM Package Manager]]
[[no:RPM Package Manager]]
[[uz:RPM]]
[[pl:RPM Package Manager]]
[[pt:RPM (Linux)]]
[[ru:RPM]]
[[simple:RPM Package Manager]]
[[sk:RPM]]
[[fi:RPM Package Manager]]
[[sv:Red Hat Package Manager]]
[[uk:RPM]]
[[zh:RPMå¥ä»¶ç®¡çå¡]]</rev></revisions></page></pages></query></api>
