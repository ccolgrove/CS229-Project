<?xml version="1.0"?><api><query><redirects><r from="UPnP AV media server" to="Universal Plug and Play" tofragment="UPnP AV media server" /></redirects><pages><page pageid="183365" ns="0" title="Universal Plug and Play"><revisions><rev xml:space="preserve">{{refimprove|date=October 2011}}

'''Universal Plug and Play''' ('''UPnP''') is a set of [[networking protocol]]s for primarily residential networks without enterprise class devices that permits networked [[Peripheral device|device]]s, such as personal computers, printers, Internet gateways, [[Wi-Fi]] access points and mobile devices to seamlessly discover each other's presence on the network and establish functional [[network service]]s for data sharing, communications, and entertainment. The UPnP technology is promoted by the [[UPnP Forum]].

The concept of UPnP is an extension of [[plug-and-play]], a technology for dynamically attaching devices directly to a computer, although UPnP is not directly related to the earlier plug-and-play technology. UPnP devices are &quot;plug-and-play&quot; in that when connected to a network they automatically establish working configurations with other devices.

==Overview==
The UPnP architecture allows device-to-device networking of [[personal computer]]s, networked [[home appliance]]s, [[consumer electronics]] devices and [[wireless]] devices. It is a distributed, open architecture protocol based on established standards such as the [[Internet Protocol Suite]] (TCP/IP), [[HTTP]], [[XML]], and [[SOAP (protocol)|SOAP]]. UPnP ''control points'' are devices which use UPnP protocols to control UPnP devices.&lt;ref&gt;{{cite web |url=http://msdn.microsoft.com/en-us/library/ms898948.aspx |title=Using the UPnP Control Point API |publisher=Microsoft |accessdate=2011-03-02}}&lt;/ref&gt;

The UPnP architecture supports [[zero configuration networking]].  A UPnP compatible device from any vendor can dynamically join a network, obtain an IP address, announce its name, convey its capabilities upon request, and learn about the presence and capabilities of other devices. [[Dynamic Host Configuration Protocol]] (DHCP) and [[Domain Name System]] (DNS) servers are optional and are only used if they are available on the network. Devices can disconnect from the network automatically without leaving [[state (computer science)|state]] information.

UPnP was published as a 73-part [[International standard|International Standard]], ISO/IEC 29341, in December, 2008.&lt;ref&gt;[[International Electrotechnical Commission]], 2008-12-09. Retrieved on 2009-05-07.&lt;/ref&gt;&lt;ref&gt;[[International Organization for Standardization]] [http://www.iso.org/iso/pressrelease.htm?refid=Ref1185 &quot;ISO/IEC standard on UPnP device architecture makes networking simple and easy&quot;], 2008-12-10. Retrieved on 2009-05-07.&lt;/ref&gt;&lt;ref&gt;[[UPnP Forum]] [http://www.upnp.org/news/documents/UPnPForum_02052009.pdf &quot;UPnP Specifications Named International Standard for Device Interoperability for IP-based Network Devices&quot;], 2009-02-05. Retrieved on 2009-05-07.&lt;/ref&gt;

Other UPnP features include:
; Media and device independence: UPnP technology can run on many media that support IP including [[Ethernet]], [[FireWire]], IR ([[IrDA]]), home wiring ([[G.hn]]) and RF ([[Bluetooth]], [[Wi-Fi]]). No special [[device driver]] support is necessary; common network protocols are used instead.
; [[User interface]] (UI) Control: UPnP architecture enables devices to present a user interface through a [[web browser]] (see [[UPnP#Presentation|Presentation]] below).
; [[Operating system]] and [[programming language]] independence: Any operating system and any programming language can be used to build UPnP products. UPnP does not specify or constrain the design of an [[API]] for applications running on control points; OS vendors may create APIs that suit their customer's needs.{{Clarify|date=March 2011}}&lt;!--too many buzzwords. is this really notable or can we stop at OS independence?--&gt;
; Programmatic control: UPnP architecture also enables conventional application programmatic control.{{Clarify|date=March 2011}}&lt;!--need a definition for ''programmatic control''--&gt;
; Extensibility: Each UPnP product can have device-specific services layered on top of the basic architecture. In addition to combining services defined by UPnP Forum in various ways, vendors can define their own device and service types, and can extend standard devices and services with vendor-defined actions, state variables, data structure elements, and variable values.

==Protocol==
UPnP uses 1900 UDP port and 2869 [[Transmission Control Protocol|TCP]] port. &lt;ref&gt;http://support.microsoft.com/kb/886257&lt;/ref&gt;

=== Addressing ===
The foundation for UPnP networking is IP addressing. Each device must implement a DHCP client and search for a DHCP server when the device is first connected to the network. If no DHCP server is available, the device must assign itself an address. The process by which a UPnP device assigns itself an address is known within the UPnP Device Architecture as [[AutoIP]]. In UPnP Device Architecture Version 1.0,&lt;ref&gt;[[UPnP Forum]], [http://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.0.pdf UPnP Device Architecture version 1.0], 2008-04-24&lt;/ref&gt; AutoIP is defined within the specification itself; in UPnP Device Architecture Version 1.1,&lt;ref&gt;[[UPnP Forum]], [http://www.upnp.org/specs/arch/UPnP-arch-DeviceArchitecture-v1.1.pdf UPnP Device Architecture version 1.1], 2008-10-15&lt;/ref&gt; AutoIP references [[Internet Engineering Task Force|IETF]] RFC 3927.&lt;ref&gt;[[Stuart Cheshire|Cheshire, S.]], ''et al'', [http://www.ietf.org/rfc/rfc3927.txt IETF RFC 3927], &quot;Dynamic Configuration of IPv4 Link-Local Addresses&quot;, May 2005&lt;/ref&gt; If during the DHCP transaction, the device obtains a domain name, for example, through a DNS server or via [[DNS forwarding]], the device should use that name in subsequent network operations; otherwise, the device should use its IP address.

===Discovery===
Given an IP address, the first step in UPnP networking is discovery. The UPnP discovery protocol is known as the [[Simple Service Discovery Protocol]] (SSDP). When a device is added to the network, SSDP allows that device to advertise its services to control points on the network. Similarly, when a control point is added to the network, SSDP allows that control point to search for devices of interest on the network. The fundamental exchange in both cases is a discovery message containing a few essential specifics about the device or one of its services, for example, its type, identifier, and a pointer to more detailed information.

=== Description ===
After a control point has discovered a device, the control point still knows very little about the device. For the control point to learn more about the device and its capabilities, or to interact with the device, the control point must retrieve the device's description from the [[URL]] provided by the device in the discovery message. The UPnP description for a device is expressed in [[XML]] and includes vendor-specific, manufacturer information like the model name and number, [[serial number]], manufacturer name, URLs to vendor-specific web sites, etc. The description also includes a list of any embedded devices or services, as well as URLs for control, eventing, and presentation. For each service, the description includes a list of the [[command (computing)|command]]s, or ''actions'', to which the service responds, and parameters, or ''arguments'', for each action; the description for a service also includes a list of [[Variable (programming)|variables]]; these variables model the state of the service at [[Run time (program lifecycle phase)|run time]], and are described in terms of their data type, range, and event characteristics.

=== Control ===
Having retrieved a description of the device, the control point can send actions to a device's service. To do this, a control point sends a suitable control message to the control URL for the service (provided in the device description). Control messages are also expressed in XML using the [[SOAP (protocol)|Simple Object Access Protocol]] (SOAP). Much like [[function call]]s, the service returns any action-specific values in response to the control message. The effects of the action, if any, are modeled by changes in the variables that describe the run-time state of the service.

=== Event notification ===
An additional capability of UPnP networking is [[event notification]], or ''eventing''. The event notification protocol defined in the UPnP Device Architecture is known as [[General Event Notification Architecture]] (GENA). A UPnP description for a service includes a list of actions the service responds to and a list of variables that model the state of the service at run time. The service publishes updates when these variables change, and a control point may subscribe to receive this information. The service publishes updates by sending event messages. Event messages contain the names of one or more state variables and the current value of those variables. These messages are also expressed in XML. A special initial event message is sent when a control point first subscribes; this event message contains the names and values for all ''evented'' variables and allows the subscriber to initialize its model of the state of the service. To support scenarios with multiple control points, eventing is designed to keep all control points equally informed about the effects of any action. Therefore, all subscribers are sent all event messages, subscribers receive event messages for all &quot;evented&quot; variables that have changed, and event messages are sent no matter why the state variable changed (either in response to a requested action or because the state the service is modeling changed).

=== Presentation ===
The final step in UPnP networking is presentation. If a device has a URL for presentation, then the control point can retrieve a page from this URL, load the page into a [[web browser]], and depending on the capabilities of the page, allow a user to control the device and/or view device status. The degree to which each of these can be accomplished depends on the specific capabilities of the presentation page and device.

==UPnP AV standards==
{{cleanup|section|date=March 2011}}
UPnP AV is an audio and video extension of UPnP. On 12 July 2006 the [[UPnP Forum]] announced the release of version 2 of the UPnP Audio and Video specifications,&lt;ref&gt;[http://www.upnp.org/news/documents/AV2_PR20060712.pdf UPnP AV v2]&lt;/ref&gt; with new MediaServer version 2.0 and MediaRenderer version 2.0 classes. These enhancements are created by adding capabilities to the [[UPnP AV media server|MediaServer]] and MediaRenderer device classes that allow a higher level of interoperability between MediaServers and MediaRenderers from different manufacturers. Some of the early devices complying with these standards were marketed by [[Philips]] under the [[Streamium]] brand name.

The UPnP AV standards have been referenced in specifications published by other organizations including [[Digital Living Network Alliance]] Networked Device Interoperability Guidelines,&lt;ref&gt;[[Digital Living Network Alliance]], [http://www.dlna.org/industry/certification/guidelines DLNA Networked Device Interoperability Guidelines], 2006-10&lt;/ref&gt; [[International Electrotechnical Commission]] IEC 62481-1,&lt;ref&gt;[[International Electrotechnical Commission]], [http://www.iec.ch/cgi-bin/procgi.pl/www/iecwww.p?wwwlang=E&amp;wwwprog=cat-det.p&amp;progdb=db1&amp;wartnum=038283 IEC 62481-1],&quot;Digital living network alliance (DLNA) home networked device interoperability guidelines - Part 1: Architecture and protocols&quot;, 2007-08-30&lt;/ref&gt; and [[CableLabs|Cable Television Laboratories]] [[OpenCable]] Home Networking Protocol.&lt;ref&gt;[[CableLabs|Cable Television Laboratories]], [http://www.cablelabs.com/specifications/OC-SP-HNP-I01-060630.pdf OpenCable Home Networking Protocol], 2006-06-30&lt;/ref&gt;

==UPnP AV components==

===Media server===
A '''{{visible anchor|UPnP AV media server}}''' is the UPnP-server (a 'master' device) that provides media library information and streams media-data (like audio/video/picture/files) to UPnP-clients on the network. It is a computer system or a similar digital appliance that stores digital media, such as photographs, movies, or music and shares these with other devices.  

UPnP AV media servers provide a service to UPnP AV client devices, so called ''control points'', for browsing the media content of the server and request the media server to deliver a file to the control point for playback.

UPnP media servers are available for most [[operating system]]s and many hardware-platforms. UPnP AV media servers can either be categorized as [[software]]-based or [[hardware]]-based. Software-based UPnP AV media servers can be run on [[Personal computer|PC]]. Hardware-based UPnP AV media servers may run on any [[network-attached storage]] (NAS) devices or any specific hardware for delivering media, such as a [[digital video recorder]] (DVR). As of May 2008, there were more software-based UPnP AV media servers than there were hardware-based servers.

===Other components===
*'''UPnP MediaServer ControlPoint''' - which is the UPnP-client (a 'slave' device) that can auto-detect UPnP-servers on the network to browse and stream media/data-files from them.
*'''UPnP MediaRenderer DCP''' - which is a 'slave' device that can render (play) content.
*'''UPnP RenderingControl DCP''' - control MediaRenderer settings; volume, brightness, RGB, sharpness, and more).
*'''UPnP Remote User Interface (RUI) client/server''' - which sends/receives control-commands between the UPnP-client and UPnP-server over network, (like record, schedule, play, pause, stop, etc.).
**'''Web4CE (CEA 2014) for UPnP Remote UI&lt;ref&gt;{{cite web | url = http://www.ce.org/Standards/browseByCommittee_2757.asp | title = Web4CE (CEA 2014) for UPnP Remote UI (www.ce.org/standards)}}&lt;/ref&gt;''' - CEA-2014 standard designed by '''[[Consumer Electronics Association]]'s R7 Home Network Committee'''. [[Web page|Web]]-based [[Protocol (computing)|Protocol]] and [[Software framework|Framework]] for Remote User Interface on UPnP [[Computer networking|Networks]] and the [[Internet]] (Web4CE). This standard allows a UPnP-capable home network device to provide its [[User interface|interface]] (display and control options) as a [[web page]] to display on any other device connected to the home network. That means that you can control a [[Computer networking|home networking]] device through any [[Web browser|web-browser]]-based communications method for [[Consumer Electronics Association|CE devices]] on a UPnP home network using [[ethernet]] and a special version of [[HTML]] called [[CE-HTML]].
*'''QoS (Quality of Service)''' - is an important (but not mandatory) service function for use with UPnP AV (Audio and Video). [[Quality of Service|QoS (Quality of Service)]] refers to control mechanisms that can provide different priority to different users or data flows, or guarantee a certain level of performance to a data flow in accordance with requests from the application program. Since UPnP AV is mostly to deliver [[streaming media]] that is often [[near real-time]] or real-time audio/video data which it is critical to be delivered within a specific time or the stream is interrupted. [[Quality of Service|QoS (Quality of Service)]] guarantees are especially important if the network capacity is limited, for example public networks, like the [[internet]].
**[[Quality of Service|QoS (Quality of Service)]] for UPnP consist of '''Sink Device''' (client-side/front-end) and '''Source Device''' (server-side/back-end) service functions. With [[Class (computer science)|classes]] such as; '''Traffic Class''' that indicates the kind of traffic in the traffic stream, (for example, audio or video). '''Traffic Identifier (TID)''' which identifies data packets as belonging to a unique traffic stream. '''Traffic Specification (TSPEC)''' which contains a set of parameters that define the characteristics of the traffic stream, (for example operating requirement and scheduling).''' Traffic Stream (TS)''' which is a unidirectional flow of data that originates at a source device and terminates at one or more sink device(s).
*'''[[Remote Access (UPnP)|Remote Access]]''' - defines methods for connecting UPnP device sets that are not in the same multicast domain.

==NAT traversal==
One solution for [[NAT traversal]], called the [[Internet Gateway Device Protocol]] (IGD Protocol), is implemented via UPnP. Many [[router (computing)|router]]s and [[firewall (computing)|firewall]]s expose themselves as Internet Gateway Devices, allowing any local UPnP control point to perform a variety of actions, including retrieving the external IP address of the device, enumerate existing port mappings, and add or remove port mappings. By adding a port mapping, a UPnP controller behind the IGD can enable traversal of the IGD from an external address to an internal client.

==Future developments==
{{cleanup|section|date=March 2011}}
UPnP continues to be actively developed.  In the fall of 2008, the UPnP Forum ratified the successor to UPnP 1.0, UPnP 1.1.&lt;ref&gt;{{cite web | url = http://ieeexplore.ieee.org/Xplore/login.jsp?url=/iel5/30/30482/01405701.pdf?temp=x | title = UPnP 1.1 - designing for performance &amp; compatibility (Consumer Electronics, IEEE Transactions on)}}&lt;/ref&gt; See &lt;ref&gt;http://www.upnp.org/resources/documents.asp&lt;/ref&gt; for documents describing the published standard.

The [[Devices Profile for Web Services|DPWS]] standard was a candidate successor to UPnP, but UPnP 1.1 was selected by the Forum.

The UPnP Internet Gateway Device (IGD)&lt;ref&gt;{{cite web | url = http://www.upnp.org/standardizeddcps/igd.asp | title = UPnP InternetGateway:1}}&lt;/ref&gt; standard has a WANIPConnection service that contains a competing solution known as [[NAT Port Mapping Protocol|NAT-PMP]], which is an [[IETF]] draft introduced by [[Apple Inc.]] in 2005. However, NAT-PMP is focused only on NAT traversal. Version 2 of IGD is currently under development; additional details are available from.&lt;ref&gt;{{cite web | url = http://www.upnp.org/resources/documents/UPnPIGD2vsIGD1d10032009.pdf | title = UPnP Forum Gateway Working Committee: IGD:2 Improvements over IGD:1}}&lt;/ref&gt;

==See also==
*[[Comparison of UPnP AV media servers]]
*[[Devices Profile for Web Services]]
*[[Digital Living Network Alliance]] (DLNA)
*[[List of UPnP AV media servers and clients]]
*[[UPnP AV media server]]
*[[Zeroconf]]

== References ==
{{Reflist}}
{{Use dmy dates|date=March 2011}}

==Books==
* Golden G. Richard: &lt;cite&gt;Service and Device Discovery : Protocols and Programming&lt;/cite&gt;, McGraw-Hill Professional, ISBN 0-07-137959-2
* Michael Jeronimo, Jack Weast: &lt;cite&gt;UPnP Design by Example: A Software Developer's Guide to Universal Plug and Play&lt;/cite&gt;, Intel Press, ISBN 0-9717861-1-9

== External links ==
{{External links|date=July 2010}}
* [http://upnp.org/standardizeddcps/default.asp UPnP Forum Universal Plug and Play Device Standards]
* [http://www.upnp-database.info/ upnp-database.info] Community-based database of UPnP/AV Devices.
* [http://knowledge.forestblue.nl/ch3snas_english.htm CH3SNAS &amp; DNS-323 Hacking] - How to use the commonly used CH3SNAS and DNS-323 NAS as a download/media server

===Documentation===
* [http://www.iso.org/iso/catalogue_detail?csnumber=52674 ISO/IEC 29341]
* [http://www.UPnP.org/resources/upnpresources.zip UPnP Forum's single file of UPnP documents]
* [http://www.upnp.org UPnP Forum]
* [http://www.dlna.org DLNA (Digital Living Network Alliance)]
* [http://developer.java.sun.com/developer/technicalArticles/jini/JiniVision/jiniology.html The Jini, Vision]
* [http://www.microsoft.com/whdc/device/netattach/upnp/default.mspx Microsoft WHDC UPnP webpage &amp; links]
* [http://www.microsoft.com/technet/prodtechnol/winxppro/evaluate/upnpxp.mspx Universal Plug and Play in Windows XP]
* [http://www.knoxscape.com/Upnp/NAT.htm Programmatically Controlling a UPnP-Capable Firewall] is a document providing some basic information about coding UPnP software controllers (VBScript example source code included).
* [http://www.upnp-hacks.org Hacking with UPnP]
* [http://www.last100.com/2008/05/27/dlna-certified/ DLNA certified: how your computer, cellphone, games console, media streamer and other devices can play nicely together]
* [http://www.calsoftlabs.com/whitepapers/upnp-devices.html Universal Plug and Play ]

=== News ===
* [http://www.kb.cert.org/vuls/id/347812 Vulnerability Note VU#347812 - UPnP enabled by default in multiple devices] at United States Department of Homeland Security - Computer Emergency Readiness Team (Wednesday, 9 April 2008).
* [http://www.theinquirer.net/default.aspx?article=38860 Security firm predicts Microsoft Windows UPnP exploit by the end of the week] at The Inquirer (Wednesday, 11 April 2007).
* [http://www.microsoft.com/athome/security/update/bulletins/200704.mspx Microsoft security updates for April 2007] to fix the above [[Microsoft Windows]] UPnP security issue.
* [http://www.gnucitizen.org/blog/hacking-the-interwebs How to use Flash and UPnP to punch holes in most home firewalls] at GNUCITIZEN (Saturday, 12 January 2008).
* [http://support.microsoft.com/kb/2467023 Microsoft Windows update KB2467023] which includes fixes for UPnP issues (Tuesday, 8 February 2011).


{{DEFAULTSORT:Universal Plug And Play}}
[[Category:Network protocols]]
[[Category:Windows administration]]
[[Category:Windows communication and services]]
[[Category:Digital media]]
[[Category:Mobile content]]
[[Category:Servers]]
[[Category:Media servers]]

[[ar:Ø¯Ø¹Ù Ø§ÙØªØ±ÙÙØ¨ ÙØ§ÙØªØ´ØºÙÙ Ø§ÙØ¹Ø§ÙÙÙ]]
[[ca:Universal Plug and Play]]
[[cs:Universal Plug and Play]]
[[da:Universal Plug and Play]]
[[de:Universal Plug and Play]]
[[es:Universal Plug and Play]]
[[fr:Universal Plug and Play]]
[[ko:ì ëë²ì¤ íë¬ê·¸ ì¤ íë ì´]]
[[it:Universal Plug and Play]]
[[lt:Universal Plug and Play]]
[[hu:Universal Plug and Play]]
[[nl:UPnP]]
[[ja:Universal Plug and Play]]
[[no:UPnP]]
[[pl:UPnP]]
[[pt:Universal Plug and Play]]
[[ru:UPnP]]
[[fi:UPnP]]
[[sv:UPnP]]
[[tr:UPnP]]
[[uk:UPnP]]
[[zh:UPnP]]</rev></revisions></page></pages></query></api>
