<?xml version="1.0"?><api><query><redirects><r from="Semi-free software" to="Proprietary software" tofragment="semi-free" /></redirects><pages><page pageid="18934886" ns="0" title="Proprietary software"><revisions><rev xml:space="preserve">{{wiktionary|proprietary}}
'''Proprietary software''' is computer software [[software license|licensed]] under exclusive legal right of the copyright holder.  The [[licensee]] is given the right to use the software under certain conditions, while restricted from other uses, such as modification, further distribution, or [[reverse engineering]].&lt;ref&gt;{{cite web | url=http://www.apple.com/legal/itunes/appstore/dev/stdeula/ | title=Apple - Legal - Licensed Application End User License Agreement | quote=You may not copy (except as expressly permitted by this license and the Usage Rules), decompile, reverse engineer, disassemble, attempt to derive the source code of, modify, or create derivative works of the Licensed Application. | accessdate=2011-10-25}}&lt;/ref&gt;

Complementary terms include [[free software]], licensed by the owner under more permissive terms, and [[public domain software]], which is not subject to copyright and can be used for any purposes. Proponents of [[free and open source software]] use ''proprietary'' or ''non-free'' to describe software that is not free or open source.&lt;ref&gt;{{cite web | url=http://www.gnu.org/philosophy/categories.html#ProprietarySoftware | title=Categories of Free and Nonfree Software - GNU Project - Free Software Foundation (FSF) | quote=Proprietary software is another name for nonfree software. | accessdate=2011-10-25}}&lt;/ref&gt;

== Software becoming proprietary ==
Until the late 1960s computers&amp;mdash;huge and expensive [[Mainframe computer|mainframe]] machines in specially [[Air conditioning|air-conditioned]] computer rooms&amp;mdash;were usually supplied on a [[leasing]] rather than purchase basis.&lt;ref&gt;{{Cite book
|author=Paul E.Ceruzzi
|title=A history of modern computing
|accessdate=2010-11-12
|year=2003
|publisher=[[MIT Press]]
|isbn=0-262-53203-4
|pages=445
|page=128
|quote=''Although IBM agreed to sell its machines as part of a Consent Decree effective January 1956, leasing continued to be its preferred way of doing business''
|postscript=&lt;!-- Bot inserted parameter. Either remove it; or change its value to &quot;.&quot; for the cite to end in a &quot;.&quot;, as necessary. --&gt;{{inconsistent citations}}}}&lt;/ref&gt;&lt;ref&gt;{{cite web
| url=http://www.leasegenie.com/History_of_Leasing.html
| title=History of Leasing
|publisher=leasegenie.com
| quote=''In the 1960s, IBM and Xerox recognized that substantial sums could be made from the financing of their equipment. The leasing of computers and office equipment that occurred then was a significant contribution to leasings growth, since many companies were exposed to equipment leasing for the first time when they leased such equipment''
| accessdate=2010-11-12}}&lt;/ref&gt; Service and all software available were usually supplied by manufacturers without separate charge until 1969. Software source code was usually provided. Users who developed software often made it available, without charge. Customers who purchased expensive mainframe [[computer hardware|hardware]] did not pay separately for software.

In 1969 IBM led an industry change by [[History of IBM#1969: Antitrust.2C the Unbundling of software and services|starting to charge separately for (mainframe) software]] and services, and ceasing to supply source code.&lt;ref&gt;{{cite web
| url=http://www-03.ibm.com/ibm/history/history/decade_1960.html
| title=http://www-03.ibm.com/ibm/history/history/decade_1960.html
|publisher=[[IBM]]
| quote=''Rather than offer hardware, services and software exclusively in packages, marketers &quot;unbundled&quot; the components and offered them for sale individually. Unbundling gave birth to the multibillion-dollar software and services industries, of which IBM is today a world leader''
| accessdate=2010-11-12}}&lt;/ref&gt;

== Legal basis ==

{{see|Software law|Software copyright|Software patent}}
{{see also|Software patents and free software}}

Most software is covered by [[software copyright|copyright]] which, along with [[contract|contract law]], [[software patent|patents]], and [[trade secret]]s, provides legal basis for its owner to establish exclusive rights.&lt;ref name=&quot;liberman&quot;&gt;{{cite journal
|last=Liberman
|first=Michael
|title=Overreaching Provisions in Software License Agreements
|journal=[[Richmond Journal of Law and Technology]]
|volume=1
|year=1995
|page=4
|url=http://jolt.richmond.edu/v1i1/liberman.html
|accessdate=November 29, 2011
}}&lt;/ref&gt;

A software vendor delineates the specific terms of use in an [[software license agreement#End-user_license_agreement|end-user license agreement]] (EULA). The user may agree to this contract in writing, interactively, called [[clickwrap|clickwrap licensing]], or by opening the box containing the software, called [[shrink wrap license|shrink wrap licensing]]. License agreements are usually [[standard form contract|not negotiable]].

[[Software patent]]s grant exclusive rights to algorithms, software features, or other [[patentable subject matter]]. Laws on software patents vary by jurisdiction and are a matter of [[software patent debate|ongoing debate]]. Vendors sometimes grant patent rights to the user in the license agreement.&lt;ref name=&quot;tysver&quot;&gt;{{cite web
  | author = Daniel A. Tysver
  | publisher = Bitlaw.com
  | title = Why Protect Software Through Patents
  | date = 2008-11-23
  | url = http://www.bitlaw.com/software-patent/why-patent.html
  | accessdate = 2009-06-03
  | quote = In connection with software, an issued patent may prevent others from utilizing a certain algorithm (such as the GIF image compression algorithm) without permission, or may prevent others from creating software programs that perform a function in a certain way.  In connection with computer software, copyright law can be used to prevent the total duplication of a software program, as well as the copying of a portion of software code.}}&lt;/ref&gt;
For example, the [[algorithm]] for creating, or encoding, [[MP3]]s [[MP3#Licensing_and_patent_issues|is patented]]; [[LAME]] is an MP3 encoder which is open source but illegal to use without obtaining a license for the algorithm it contains.

Proprietary software vendors usually regard source code as a [[trade secret]].&lt;ref&gt;{{Cite journal
  | first = S.
  | last = Donovan
  | title = Patent, copyright and trade secret protection for software
  | journal = Potentials, IEEE
  | volume = 13
  | issue = 3
  | year = 1994
  | pages = 20
  | quote = Essentially there are only three ways to protect computer software under the law: patent it, register a copyright for it, or keep it as a trade secret.
  | doi = 10.1109/45.310923
  | postscript = &lt;!-- Bot inserted parameter. Either remove it; or change its value to &quot;.&quot; for the cite to end in a &quot;.&quot;, as necessary. --&gt;{{inconsistent citations}}}}&lt;/ref&gt;

=== Limitations ===

License agreements do not override applicable [[copyright|copyright law]] or [[contract|contract law]]. Provisions that conflict may not be enforceable.{{citation needed|date=August 2011}}

Some vendors say that software licensing is not a sale, and that limitations of copyright like the [[first-sale doctrine]] do not apply. The EULA for [[Microsoft Windows]] states that the software is licensed, not sold.&lt;ref&gt;{{cite web
  | author = [[Microsoft Corporation]]
  | title =  End-User License Agreement for Microsoft Software: Microsoft Windows XP Professional Edition Service Pack 2
  | page = Page 3
  | date = 2005-04-01
  | url = http://www.microsoft.com/about/legal/useterms/
  | format = PDF
  | accessdate = 2009-04-29
}}&lt;/ref&gt;

== Exclusive rights ==

The owner of proprietary software exercises certain [[exclusive right]]s over the software. Commonly, the owner restricts use, inspection of source code, modification of source code, and redistribution.{{citation needed|date=August 2011}} &lt;!-- Does this honestly need a citation? This sentence merely summarizes the following section, and says absolutely nothing controversial. --&gt;

=== Use of the software ===

{{See|Copy protection|Damaged good|Price discrimination}}

Vendors typically limit the number of computers on which software can be used, and prohibit the user from installing the software on extra computers. Restricted use is sometimes enforced through a technical measure, such as [[product activation]], a [[product key]] or serial number, a [[dongle|hardware key]], or [[copy protection]].

Vendors may also distribute versions that remove particular features, or versions which allow only certain fields of endeavor, such as non-commercial, educational, or non-profit use.

Use restrictions vary by license:
* [[Windows Vista Starter]] is restricted to running a maximum of three concurrent applications.
* The retail edition of [[Microsoft Office 2007#Editions|Microsoft Office Home and Student 2007]] is limited to non-commercial use on up three devices in one household.
* [[Windows XP]] can be installed on one computer, and limits the number of network file sharing connections to 10.&lt;ref&gt;{{cite web
  | author = [[Microsoft Corporation]]
  | title =  End-User License Agreement for Microsoft Software: Microsoft Windows XP Professional Edition Service Pack 2
  | page = Page 1
  | date = 2005-04-01
  | url = http://www.microsoft.com/about/legal/useterms/
  | format = PDF
  | accessdate = 2009-04-29
  | quote = You may install, use, access, display and run one copy of the Software on a single computer, such as a workstation, terminal or other device (âWorkstation Computerâ). The Software may not be used by more than two (2) processors at any one time on any single Workstation Computer. ... You may permit a maximum of ten (10) computers or other electronic devices (each a 'Device') to connect to the Workstation Computer to utilize one or more of the following services of the Software: File Services, Print Services, Internet Information Services, Internet Connection Sharing and telephony services.}}&lt;/ref&gt; The [[Windows XP Home Edition|Home Edition]] disables features present in Windows XP Professional.
* Many [[Adobe]] licenses are limited to one user, but allow the user to install a second copy on a home computer or laptop.&lt;ref&gt;{{cite
	|title = Adobe Software License Agreement
	|author = Adobe Systems
	|authorlink = Adobe Systems
	|url = http://www.adobe.com/products/eulas/pdfs/gen_wwcombined_20091001_1604.pdf
	|accessdate = 2010-06-09
	}}&lt;/ref&gt;
* [[iWork|iWork '09]], Apple's productivity suite, is available in a five-user family pack, for use on up to five computers in a household.

=== Inspection and modification of source code ===

{{See also2|[[Open source]]|[[Damaged good#Anti-features|Anti-features]]}}

Vendors typically distribute proprietary software in [[compiler|compiled]] form, usually the [[machine code|machine language]] understood by the computer's [[central processing unit]]. They typically retain the [[source code]], or human-readable version of the software, written in a [[high-level programming language|higher level programming language]].&lt;ref&gt;{{Cite journal
  | first = Ira V.
  | last = Heffan
  | title = Copyleft: Licensing Collaborative Works in the Digital Age
  | journal = Stanford Law Review
  | volume = 49
  | year = 1997
  | pages = 1490
  | url = http://www.open-bar.org/docs/copyleft.pdf
  | quote = Under the proprietary software model, most software developers withhold their source code from users.
  | postscript = &lt;!--None--&gt;}}&lt;/ref&gt; This scheme is often referred to as ''closed source''.&lt;ref name=&quot;dwheeler&quot;&gt;{{cite web
  | author = David A. Wheeler
  | title = Free-Libre / Open Source Software (FLOSS) is Commercial Software
  | date = 2009-02-03
  | url = http://www.dwheeler.com/essays/commercial-floss.html
  | accessdate = 2009-06-03}}&lt;/ref&gt;

By withholding source code, the software producer prevents the user from understanding how the software works and from changing how it works.&lt;ref&gt;{{cite book
  | last = Margolis
  | first = Philip E.
  | title = Webster's Computer &amp; Internet Dictionary
  | publisher = Random House
  | year = 1999
  | location = 
  | pages = 452
  | quote = [P]roprietary is the opposite of open. A proprietary design or technique is one that is owned by a company. It also implies that the company has not divulged specifications that would allow other companies to duplicate the product.
  | isbn = 0375703519}}&lt;/ref&gt; This practice is denounced by some critics, who argue that users should be able to study and change the software they use, for example, to remove secret or malicious features, or look for security vulnerabilities. Richard Stallman says that proprietary software commonly contains &quot;malicious features, such as spying on the users, restricting the users, back doors, and imposed upgrades.&quot;&lt;ref&gt;&lt;!-- Is this the same as the long-standing FSF.org page at http://www.gnu.org/philosophy/open-source-misses-the-point.html? --&gt;{{cite journal
 |url=http://portal.acm.org/citation.cfm?doid=1516046.1516058
 |title=Viewpoint: Why &quot;open source&quot; misses the point of free software
 |first=Richard
 |last=Stallman
 |authorlink=Richard Stallman
 |journal=[[Communications of the ACM]]
 |publisher=[[ACM]]
 |volume=52
 |issue=6
 |month=June
 |year=2009
 |doi=10.1145/1516046.1516058
 |pages=31&amp;ndash;33
 |accessdate=2010-03-08
}}&lt;/ref&gt; Some proprietary software vendors say that retaining the source code makes their software more secure, because the widely available code for open-source software makes it easier to identify [[vulnerability (computing)|security vulnerabilities]]. &lt;ref&gt;{{cite news| url=http://news.bbc.co.uk/2/hi/business/4602325.stm | work=BBC News | first=Steve | last=Kingstone | title=Brazil adopts open-source software | date=2005-06-02}}&lt;/ref&gt; Open source proponents pejoratively call this [[security through obscurity]], and say that wide availability results in increased scrutiny of the source code, making open source software more secure.&lt;ref&gt;http://www.technewsworld.com/story/57085.html?wlc=1276053152&lt;/ref&gt;

While most proprietary software is closed-source, some vendors distribute the source code or otherwise make it available to customers. The source code is covered by a [[non-disclosure agreement]] or a license that allows, for example, study and modification, but not redistribution. The text-based email client [[Pine (e-mail client)|Pine]] and certain implementations of [[Secure Shell]] are distributed with proprietary licenses that make the source code available.

Some governments fear that proprietary software may include [[software bug|defects]] or [[malware|malicious features]] which would compromise sensitive information. In 2003 Microsoft established a Government Security Program (GSP) to allow governments to view source code and Microsoft security documentation, of which the [[Government of the People's Republic of China|Chinese government]] was an early participant.&lt;ref&gt;http://news.cnet.com/Governments-to-see-Windows-code/2100-1006_3-980666.html&lt;/ref&gt;&lt;ref name=&quot;china&quot;&gt;http://news.cnet.com/2100-1007-990526.html&lt;/ref&gt; The program is part of Microsoft's broader [[shared source|Shared Source Initiative]] which provides source code access for some products. The Reference Source License (Ms-RSL) and Limited Public License (Ms-LPL) are proprietary software licenses where the source code is made available.

Software vendors sometimes use [[obfuscated code]] to impede users who would [[reverse engineer]] the software. This is particularly common with certain [[programming language]]s. For example, the [[Java bytecode|bytecode]] for programs written in [[Java (programming language)|Java]] can be easily [[decompiler|decompiled]] to somewhat usable code,{{citation needed|date=November 2010}} and the source code for programs written in [[scripting language]]s such as [[PHP]] or [[JavaScript]] is available at [[run time (program lifecycle phase)|run time]].&lt;ref&gt;{{cite web
  | author = Tony Patton 
  | title =  Protect your JavaScript with obfuscation
  | date = 2008-11-21
  | url = http://blogs.techrepublic.com.com/programming-and-development/?p=762
  | accessdate = 2009-06-12
  | quote = While the Web promotes the sharing of such code, there are times when you or a client may not want to share their JavaScript code. This may be due to the sensitive nature of data within the code, proprietary calculations, or any other scenario.}}&lt;/ref&gt;

=== Redistribution ===

{{see|Shareware}}
{{See also|Freely redistributable software}}

Proprietary software vendors usually prohibit users from sharing the software with others.{{citation needed|date=December 2010|comment=needs source for 'usually'}} Another unique license is required for another party to use the software.

In the case of proprietary software with source code available, the vendor may also prohibit customers from distributing their modifications to the source code.

&lt;!-- Keep consistent with definition at [[shareware]]. --&gt;
[[Shareware]] is closed-source software whose owner encourages redistribution at no cost, but which the user sometimes must pay to use after a trial period. The fee usually allows use by a single user or computer. In some cases, software features are restricted during or after the trial period, a practice sometimes called [[damaged good|crippleware]].

== Interoperability with software and hardware ==
{{Further|[[Interoperability#Software|Interoperability of software]]}}

=== Proprietary file formats and protocols ===

{{see|Proprietary format|Proprietary protocol}}

Often, proprietary software stores its data using [[proprietary file format]]s and communicates using [[proprietary protocol]]s controlled by the vendor. Most proprietary formats and protocols are secret and incompatible with other software. Their use may be restricted by [[trade secret]] or [[patent]] rights.

=== Proprietary APIs ===

A proprietary [[application programming interface]] (API) is a [[software library]] interface &quot;specific to one device or, more likely to a number of devices within a particular manufacturer's product range.&quot;&lt;ref name=&quot;techworld&quot;&gt;http://features.techworld.com/applications/471/apis-what-they-are-and-what-theyre-for/&lt;/ref&gt;  The motivation for using a proprietary API can be [[vendor lock-in]] or because standard APIs do not support the device's functionality.&lt;ref name=&quot;techworld&quot;/&gt;

The [[European Commission]], in its March 24, 2004 decision on Microsoft's business practices,&lt;ref&gt;{{cite web |url=http://ec.europa.eu/comm/competition/antitrust/cases/decisions/37792/en.pdf |title=Commission Decision of 24.03.2004 relating to a proceeding under Article 82 of the EC Treaty (Case COMP/C-3/37.792 Microsoft) |date=March 24, 2004 |publisher=[[European Commission]] |format=PDF |accessdate=June 17, 2009}}&lt;/ref&gt; quotes, in paragraph 463, Microsoft general manager for [[C++]] development Aaron Contorer as stating in a February 21, 1997 internal Microsoft memo drafted for [[Bill Gates]]:

:The Windows API is so broad, so deep, and so functional that most ISVs would be crazy not to use it. And it is so deeply embedded in the source code of many Windows apps that there is a huge switching cost to using a different operating system instead.

Early versions of the [[iOS SDK|iPhone SDK]] were covered by a [[non-disclosure agreement]]. The agreement forbade independent developers from discussing the content of the interfaces. Apple discontinued the NDA in October 2008.&lt;ref name=&quot;nda&quot;&gt;{{cite web
|last=Wilson
|first=Ben
|title=Apple Drops NDA for Released iPhone Software
|publisher=CNET Reviews
|url=http://reviews.cnet.com/8301-19512_7-10115774-233.html
|date=2008-10-01
|accessdate=2010-12-17
}}
&lt;/ref&gt;

=== Vendor lock-in ===
{{see|Vendor lock-in}}

A dependency on the future versions and upgrades for a proprietary software package can create ''vendor lock-in'', entrenching a monopoly position.&lt;ref&gt;{{cite web
 | author = The Linux Information Project
 | title = Vendor Lock-in Definition
 | date = 2006-04-29
 | url = http://www.linfo.org/vendor_lockin.html
 | accessdate = 2009-06-11
 | quote = Vendor lock-in, or just lock-in, is the situation in which customers are dependent on a single manufacturer or supplier for some product [...]  This dependency is typically a result of standards that are controlled by the vendor [...] It can grant the vendor some extent of monopoly power [...] The best way for an organization to avoid becoming a victim of vendor lock-in is to use products that conform to free, industry-wide standards. Free standards are those that can be used by anyone and are not controlled by a single company. In the case of computers, this can usually be accomplished by using free software rather than proprietary software (i.e., commercial software).}}&lt;/ref&gt;

=== Software limited to certain hardware configurations ===
Proprietary software may also have licensing terms that limit the usage of that software to a specific set of hardware. [[Apple]] has such a licensing model for [[Mac OS X]], an operating system which is limited to Apple hardware, both by licensing and various design decisions. This licensing model has been affirmed by the [[United States Court of Appeals]].&lt;ref&gt;{{cite web
 | author = Apple wins key battle against Psystar over Mac clones
 | title = Apple court victory over Pystar
 | date = 2011-09-29
 | url = http://news.cnet.com/8301-13506_3-20113365-17/apple-wins-key-battle-against-psystar-over-mac-clones/
 | accessdate = 2011-09-30}}&lt;/ref&gt;

== Legal meanings and licensing ==
The founder of free software movement, [[Richard Stallman]], sometimes uses the term &quot;user-subjugating software&quot;&lt;ref&gt;{{cite mailing list
  |url=http://gcc.gnu.org/ml/gcc/2009-02/msg00275.html
  |title=Re: GCC and the Visual Basic programmer....
  |date=February 17, 2009
  |mailinglist=gcc@gcc.gnu.org
  |first=Richard
  |last=Stallman
  |authorlink=Richard Stallman 
  |accessdate=September 24, 2009
}}&lt;/ref&gt; to describe proprietary software, while [[Eben Moglen]] sometimes talks of &quot;unfree software&quot;. The term &quot;non-free&quot; is often used by [[Debian]] developers to describe any software whose license does not comply with [[Debian Free Software Guidelines]], and they use &quot;proprietary software&quot; specifically for non-free software that provides no source code.  The [[Open Source Initiative]] uses the terms &quot;proprietary software&quot; and &quot;closed source software&quot; interchangeably.&lt;ref&gt;{{cite web
 | author = Russell Nelson
 | title = Who speaks for the Open Source Community?
 | date = 2008-03-14
 | url = http://www.opensource.org/node/272
 | accessdate = 2008-06-11
 | quote = When we, the open source community, want to make an agreement with the proprietary software vendors, who do we talk to?}}&lt;/ref&gt;&lt;ref&gt;{{cite web
 | author = Russell Nelson
 | title = Patent owners and Open Source
 | date = 2008-03-24
 | url = http://www.opensource.org/node/279
 | accessdate = 2009-06-11
 | quote = The purpose of closed-source software is to give you ownership over the code.}}&lt;/ref&gt;

{{Anchor|semi-free}}
''Semi-free software'', as defined by the [[Free Software Foundation]], is software that is not [[free software]], but comes with permission for individuals to use, copy, distribute, and modify either for non-profit purposes only or with the prohibition to redistribute modified copies or derived works.&lt;ref&gt;[http://www.gnu.org/philosophy/categories.html#semi-freeSoftware Semi-free software], definition by the Free Software Foundation&lt;/ref&gt;  Such software is also rejected by the [[Open Source Initiative]] and [[Debian]].  [[Pretty Good Privacy|PGP]] and the video game [[Angband (video game)|Angband]] are examples of semi-free programs.  The Free Software Foundation classifies semi-free software as non-free software, but draws a distinction between semi-free software and proprietary software.

[[Free software licence]]s use the same laws used by proprietary software, but to preserve the rights to use, copy and modify the software.  This technique is used with [[copyleft]], but with other software as well.&lt;ref&gt;{{cite web
 | url = http://www.fsf.org/licensing/licenses/why-assign.html
 | title = Why the FSF gets copyright assignments from contributors
 | author = Eben Moglen
 | date = 2005-02-12
 | accessdate = 2009-06-26
 | quote = Under US copyright law, which is the law under which most free software programs have historically been first published, [...] only the copyright holder or someone having assignment of the copyright can enforce the license.}}&lt;/ref&gt;  Free software companies and projects are also joining into [[patent pool]]s like the [[Patent Commons]] and the [[Open Invention Network]].  See [[software patents and free software]].

&quot;Proprietary software&quot; is not synonymous with &quot;commercial software&quot;,&lt;ref name=&quot;rosen2004&quot;&gt;{{cite book
  | last = Rosen
  | first = Lawrence
  | authorlink = Lawrence Rosen
  | title = Open Source Licensing
  | publisher = Prentice Hall
  | year = 2004
  | location = Upper Saddle River
  | pages = 52, 255, 259
  | url = http://rosenlaw.com/oslbook.htm
  | isbn = 978-0131487871 }}&lt;/ref&gt;&lt;ref name=&quot;pennington2008&quot;&gt;{{cite web
  | author = Havoc Pennington
  | title = Debian Tutorial
  | date = 2008-03-02
  | url = http://www.debian.org/doc/manuals/debian-tutorial/
  | accessdate = 2009-06-04
  | quote = It is important to distinguish commercial software from proprietary software. Proprietary software is non-free software, while commercial software is software sold for money.}}&lt;/ref&gt; though the industry commonly confuses the term,&lt;ref&gt;{{cite web
  | author = Cynthia Keeshan
  | publisher = [[Microsoft Corporation]], Canada
  | title = The Software Ecosystem
  | date = 2009-04-30
  | url = http://www.microsoft.com/canada/media/ecosystem.mspx
  | accessdate = 2009-04-30
  | quote = ''Commercial software'' companies develop and distribute proprietary software to generate revenue. (original emphasis)}}&lt;/ref&gt;
&lt;ref&gt;
{{cite web
  | author = Vinod Valloppillil, [[Microsoft Corporation]]
  | publisher = Eric S. Raymond
  | title =  Halloween Document 1
  | work = [[Microsoft Halloween documents leak]]
  | date = 2006-10-12
  | url = http://www.catb.org/~esr/halloween/halloween1.html
  | accessdate = 2009-04-30
  | quote = Commercial software is classic Microsoft bread-and-butter. It must be purchased, may NOT be redistributed, and is typically only available as binaries to end users. (original emphasis)}}&lt;/ref&gt;
as does the [[free software community]].&lt;ref&gt;{{cite web
  | author = Russell McOrmond
  | title =  What is &quot;Commercial Software&quot;?
  | date = 2000-01-04
  | url = http://www.linuxtoday.com/news_story.php3?ltsn=2000-01-04-005-05-NW-SM/halloween1.html
  | accessdate = 2009-05-02}}&lt;/ref&gt;&lt;ref&gt;{{cite web
  | author = Michael K. Johnson
  | title = Licenses and Copyright
  | date = 1996-09-01
  | url = http://www.linuxjournal.com/article/1297
  | accessdate = 2009-06-16
  | quote = If you program for Linux, you do need to understand licensing, no matter if you are writing free software or commercial software.}}&lt;/ref&gt;

Proprietary software can be distributed at no cost or for a fee, and [[free software]] can be distributed at no cost or for a fee.&lt;ref name=&quot;jargon2003proprietary&quot;&gt;{{cite web
  | author = Eric S. Raymond
  | title = ''Proprietary'', Jargon File
  | date = 2003-12-29
  | url = http://www.catb.org/~esr/jargon/html/P/proprietary.html
  | accessdate = 2009-06-12
  | quote = Proprietary software should be distinguished from commercial software. It is possible for software to be commercial [...] without being proprietary. The reverse is also possible, for example in binary-only freeware.}}&lt;/ref&gt;  The difference is that whether or not proprietary software can be distributed, and what the fee would be, is at the proprietor's discretion.  With free software, anyone who has a copy can decide whether, and how much, to charge for a copy or related services.&lt;ref&gt;{{cite web
  | author = [[Free Software Foundation]]
  | title = Selling Free Software
  | date = 2008-12-31
  | url = http://www.gnu.org/philosophy/selling.html
  | accessdate = 2009-06-03}}&lt;/ref&gt;

Proponents of commercial proprietary software argue that requiring users to pay for software as a product increases funding or time available for the [[research and development]] of software. For example, [[Microsoft]] says that per-copy fees maximise the profitability of software development.&lt;ref&gt;{{cite web|url=http://www.microsoft.com/presspass/exec/craig/05-03sharedsource.mspx|title=The Commercial Software Model|month=May|year=2001|publisher=[[Microsoft]]|accessdate=2007-03-05}}&lt;/ref&gt;

Proprietary software is said to create greater commercial activity over free software, especially in regard to market revenues.&lt;ref&gt;{{cite web|
url=http://www.informit.com/articles/article.aspx?p=420290&amp;seqNum=3
|title=Open Source Versus Commercial Software: Why Proprietary Software is Here to Stay
|month=October
|year=2005
|publisher=Sams Publishing
|accessdate=2007-03-05}}&lt;/ref&gt;

If the proprietor of a software package should cease to exist, or decide to cease or limit production or support for a proprietary software package, recipients and users of the package may have no recourse if problems are found with the software.  Proprietors can fail to improve and support software because of business problems.&lt;ref&gt;{{cite web|url=http://www.linux.com/archive/feature/32277|title=What happens when a proprietary software company dies?|month=October|year=2003|publisher=NewsForge|accessdate=2007-03-05}}&lt;/ref&gt;  When no other vendor can provide support for the software, the ending of support for older or existing versions of a software package may be done to force users to upgrade and pay for newer versions; or migrate to either competing systems with longer support life cycles or to [[Free and open source software|FOSS]]-based systems.&lt;ref&gt;{{cite web|url=http://informationweek.com/news/showArticle.jhtml;jsessionid=GL4O5EZFOXYJGQSNDLPSKH0CJUNN2JVN?articleID=196700071|title=Microsoft Turns Up The Heat On Windows 2000 Users|month=December|year=2006|publisher=InformationWeek|accessdate=2008-09-16}}&lt;/ref&gt;

== Examples ==
Well known examples of proprietary software include [[Microsoft Windows]], [[Adobe Flash Player]], [[PlayStation 3|PS3]] OS, [[iTunes]], [[Adobe Photoshop]], [[Google Earth]], [[Mac OS X]], [[Skype]], [[WinRAR]], and some versions of [[Unix]].

Software distributions considered as proprietary may in fact incorporate a &quot;mixed source&quot; model including both free and non-free software in the same distribution.&lt;ref&gt;{{cite journal
  | last = Engelfriet
  | first = Arnoud
  | authorlink = 
  | coauthors = 
  | title = The best of both worlds
  | journal = Intellectual Asset Management (IAM)
  | volume = 
  | issue = 19
  | pages = 
  | publisher = Gavin Stewart
  | location = New Hibernia House, Winchester Walk, London Bridge, London SE1 9AG, United Kingdom
  | date = August/September 2006
  | url = http://www.iam-magazine.com/issues/article.ashx?g=64d0a423-1249-4de3-929c-91b57c15f702
  | doi = 
  | id = 
  | accessdate = 2008-05-19}}&lt;/ref&gt; Most if not all so-called proprietary [[UNIX]] distributions are mixed source software, bundling open source components like [[BIND]], [[Sendmail]], [[X Window System]], [[DHCP]], and others along with a purely proprietary [[Kernel (computer science)|kernel]] and system utilities.&lt;ref&gt;{{cite web
  | last = Loftus
  | first = Jack
  | authorlink = 
  | coauthors = 
  | title =  LinuxWorld: Managing mixed source software stacks
  | work = 
  | publisher = SearchEnterpriseLinux.com
  | date = 2007-02-19
  | url = http://searchenterpriselinux.techtarget.com/news/article/0,289142,sid39_gci1244277,00.html
  | doi = 
  | accessdate = }}
&lt;/ref&gt;&lt;ref&gt;{{cite web
  | last = Tan
  | first = Aaron
  | authorlink = 
  | coauthors = 
  | title = Novell: We're a 'mixed-source' company
  | work = 
  | publisher = CNET Networks, Inc
  | date = 2006-12-28
  | url = http://www.zdnetasia.com/news/software/0,39044164,61977995,00.htm
  | doi = 
  | accessdate = }}&lt;/ref&gt;

Some free software packages are also simultaneously available under proprietary terms.  Examples include [[MySQL]], [[Sendmail]] and ssh.  The original copyright holders for a work of free software, even copyleft free software, can use [[dual-licensing]] to allow themselves or others to redistribute proprietary versions.   Non-copyleft free software (i.e. software distributed under a permissive free software license or released to the public domain) allows anyone to make proprietary redistributions.&lt;ref name=&quot;rosenberg2000p109&quot;&gt;{{cite book
  | last = Rosenberg
  | first = Donald
  | title = Open Source: The Unauthorized White Papers
  | publisher = IDG
  | year = 2000
  | location = Foster City
  | pages = 109
  | url = http://www.stromian.com/Book/FrontMatter.html
  | isbn = 0-7645-4660-0 }}&lt;/ref&gt;&lt;ref name=&quot;fsfandpublicdomain&quot;&gt;{{cite web| title = Categories of Free and Non-Free Software - Free Software Foundation| url = http://www.fsf.org/licensing/essays/categories.html#PublicDomainSoftware}}&lt;/ref&gt;  Free software that depends on proprietary software is considered &quot;trapped&quot; by the Free Software Foundation.  This includes software written only for Microsoft Windows,&lt;ref&gt;{{cite web
 | url = http://www.gnu.org/licenses/gpl-faq.html#WindowsRuntimeAndGPL
 | title = Frequently Asked Questions about the GNU Licenses
 | author = Free Software Foundation
 | date = 2009-05-05
 | accessdate = 2009-06-25}}&lt;/ref&gt; or software that could only run on [[Java (programming language)|Java]], before it became free software.&lt;ref&gt;{{cite web
 | url = http://www.gnu.org/philosophy/java-trap.html
 | title = Free But Shackled - The Java Trap
 | author = Richard Stallman
 | date = 2004-04-12
 | accessdate = 2009-06-25}}&lt;/ref&gt;

Proprietary software that comes for no cost is called [[freeware]].&lt;!-- Keep consistent with definition at [[freeware]]. --&gt; Proprietary software which is no longer marketed by its owner and is used without permission by users is called [[abandonware]] and may include source code.  Some abandonware has the source code released to the public domain either by its author or copyright holder and is therefore free software, and no longer proprietary software.&lt;!-- Keep consistent with definition at [[abandonware]]. --&gt;

According to [[Jonathan Zittrain]], the emergence of &quot;closed devices&quot; and online applications, like the [[iPhone]], [[Facebook]] and [[Google apps]], have made the Internet become far more proprietary than early versions of [[Microsoft Windows]].&lt;ref&gt;{{cite web
  | author = Brian Braiker
  | title = A Killer Product: Will closed devices like Apple's iPhone murder the Web?
  | date = 2008-05-02
  | url = http://www.newsweek.com/id/135150
  | accessdate = 2009-06-16
  | quote = Through historical accident, we've ended up with a global network that pretty much allows anybody to communicate with anyone else at any time. Devices could be reprogrammed by them at any time, including code written by other people, so you don't have to be a nerd to get the benefits of reprogramming it. [But] this is an historical accident. Now, I see a movement away from that framework--even though it doesn't feel like a movement away. [For example,] an iPhone can only be changed by Steve Jobs or soon, with the software development kit, by programmers that he personally approves that go through his iPhone apps store. Or whimsical applications that run on the Facebook platform or the new Google apps. These are controllable by their vendors in ways that Bill Gates never dreamed of controlling Windows applications. [...] That's the ironic thing. Bill Gates is Mr. Proprietary. But for my purposes, even under the standard Windows operating system from 1990, 1991, you write the code, you can hand it to somebody else and they can run it. Bill Gates has nothing to say about it. So it's funny to think that by moving in Steve Jobs's direction it actually ends up far more proprietary.}}&lt;/ref&gt;

== See also ==
{{columns-list|2|
* [[Business software]]
* [[Commercial off-the-shelf]]
* [[Comparison of open source and closed source|Comparison of free software/open source vs. closed source]]
* [[Free and open source software]]
* [[List of proprietary software for Linux]]
* [[Proprietary hardware]]
* [[Proprietary protocol]]
* [[Retail software]]
* [[Software copyright]]
}}

== References ==
{{reflist|2}}

{{software distribution}}
{{FOSS}}

{{DEFAULTSORT:Proprietary Software}}
[[Category:Proprietary software]]
[[Category:Software licenses]]

[[ar:Ø¨Ø±ÙØ¬ÙØ§Øª Ø§Ø­ØªÙØ§Ø±ÙØ©]]
[[ca:Programari de propietat]]
[[cs:ProprietÃ¡rnÃ­ software]]
[[da:ProprietÃ¦r software]]
[[de:ProprietÃ¤re Software]]
[[es:Software propietario]]
[[eu:Software jabedun]]
[[fa:ÙØ±ÙâØ§ÙØ²Ø§Ø± Ø§Ø®ØªØµØ§ØµÛ]]
[[fr:Logiciel propriÃ©taire]]
[[ko:ì¬ì  ìíí¸ì¨ì´]]
[[id:Perangkat lunak milik perorangan]]
[[it:Software proprietario]]
[[hu:ZÃ¡rt forrÃ¡skÃ³d]]
[[ms:Perisian hak milik]]
[[nl:PropriÃ«taire software]]
[[ja:ãã­ãã©ã¤ã¨ã¿ãªã»ã½ããã¦ã§ã¢]]
[[no:ProprietÃ¦r programvare]]
[[mhr:ÐÐ·Ð° ÑÐ»ÑÐ°Ð½ ÐºÐ¾Ð¼Ð¿ÑÑÑÐµÑ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð¼Ðµ Ð²Ð¾ÑÐ°Ò¥Ð´ÑÑ]]
[[pl:ZamkniÄte oprogramowanie]]
[[pt:Software proprietÃ¡rio]]
[[ro:Software proprietar]]
[[ru:ÐÑÐ¾Ð¿ÑÐ¸ÐµÑÐ°ÑÐ½Ð¾Ðµ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð¼Ð½Ð¾Ðµ Ð¾Ð±ÐµÑÐ¿ÐµÑÐµÐ½Ð¸Ðµ]]
[[simple:Software hoarding]]
[[sk:ProprietÃ¡rny softvÃ©r]]
[[fi:Omisteinen ohjelmisto]]
[[sv:ProprietÃ¤r programvara]]
[[th:à¸à¸­à¸à¸à¹à¹à¸§à¸£à¹à¸à¸£à¸£à¸¡à¸ªà¸´à¸à¸à¸´à¹]]
[[tr:KapalÄ± kaynak]]
[[uk:ÐÐ»Ð°ÑÐ½Ð¸ÑÑÐºÐµ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð½Ðµ Ð·Ð°Ð±ÐµÐ·Ð¿ÐµÑÐµÐ½Ð½Ñ]]
[[zh:ä¸æè½¯ä»¶]]</rev></revisions></page></pages></query></api>
