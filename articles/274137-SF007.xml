<?xml version="1.0"?><api><query><pages><page pageid="274137" ns="0" title="SpamAssassin"><revisions><rev xml:space="preserve">{{Infobox software
| name                   = SpamAssassin
| logo                   = [[File:SpamAssassin logo.png|210px]]
| screenshot             = [[File:Reco spam.png|200px]]
| caption                = E-mail recognized as spam by SpamAssassin, here in the [[Novell Evolution]] email client.
| collapsible            = yes
| developer              = [[Apache Software Foundation]] [http://cvs.apache.org/viewcvs.cgi/spamassassin/trunk/CREDITS?root=Apache-SVN&amp;view=markup]
| status                 = Active
| latest release version =  3.3.2&lt;ref&gt;{{cite web | title=SpamAssassin: News and Announcements | accessdate=2011-08-09 |url = http://spamassassin.apache.org/news.html}}&lt;/ref&gt;
| latest release date    = {{release date|2011|06|16}}
| latest preview version =
| latest preview date    =
| operating system       = [[Cross-platform]]
| programming language   = [[Perl]]
| genre                  = [[Spam filter|Email spam filter]]
| license                = [[Apache License]] 2.0
| website                = http://spamassassin.apache.org
}}
'''SpamAssassin''' is a [[computer program]] released under the [[Apache License|Apache License 2.0]] used for [[e-mail spam]] [[anti-spam techniques (e-mail)|filtering]] based on content-matching rules.  It is now part of the [[Apache Foundation]].

SpamAssassin uses a variety of spam-detection techniques, that  includes [[Domain Name System|DNS]]-based and checksum-based spam detection, [[Bayesian spam filtering|Bayesian filtering]], external programs, blacklists and online databases.

The program can be integrated with the [[Mail transfer agent|mail server]] to automatically filter all mail for a site. It can also be run by individual users on their own mailbox and integrates with several [[mail user agent|mail programs]]. SpamAssassin is highly configurable; if used as a system-wide filter it can still be configured to support per-user preferences.

SpamAssassin was awarded the Linux New Media Award 2006 as the 'Best Linux-based Anti-spam Solution'.&lt;ref&gt;{{cite web |url=http://www.linux-magazine.com/issue/74/Linux_New_Media_Awards_2006.pdf |title=Linux New Media Awards 2006 |work=Linux Magazine |format=PDF |accessdate=2008-07-10}}&lt;/ref&gt;

==History==
SpamAssassin was created by Justin Mason who had maintained a number of patches against an earlier program named ''filter.plx'' by Mark Jeftovic, which in turn was begun in August [[1997]]. Mason rewrote all of Jeftovic's code from scratch and uploaded the resulting codebase to [[SourceForge|SourceForge.net]] on April 20, 2001. In summer 2004 the project became an [[Apache Software Foundation]] project and later officially renamed to ''Apache SpamAssassin''. The project involved algorithms developed in part by [[Gary Robinson]] and others.&lt;ref name=twsSep3&gt;{{cite web
 |author= The SpamAssassin Project
 |title= train SpamAssassin's Bayesian classifier
 |publisher= ''SpamAssassin website''
 |quote= Gary Robinson's f(x) and combining algorithms, as used in SpamAssassin
 |url= http://spamassassin.apache.org/full/3.2.x/doc/sa-learn.html
 |accessdate= 2010-09-18
}}&lt;/ref&gt;&lt;ref name=twsSep14xx&gt;{{cite news
 |title= Credits -- the Perl Programming Language -- Algorithms
 |publisher= ''Perl''
 |quote= Algorithms: The Bayesian-style text classifier used by SpamAssassin's BAYES rules is based on an approach outlined by Gary Robinson. Thanks, Gary!
 |date= 2010-09-18
 |url= http://cpansearch.perl.org/src/JMASON/Mail-SpamAssassin-3.2.5/CREDITS
 |accessdate= 2010-09-18
}}&lt;/ref&gt;&lt;ref name=twsSep14yy&gt;{{cite web
 |title= Installation
 |publisher= ''Ubuntu manuals''
 |quote= Gary Robinsonâs f(x) and combining algorithms, as used in SpamAssassin
 |date= 2010-09-18
 |url= http://manpages.ubuntu.com/manpages/gutsy/man1/sa-learn.1p.html
 |accessdate= 2010-09-18
}}&lt;/ref&gt;

==Methods of usage==
SpamAssassin is a [[Perl]]-based application (&lt;tt&gt;Mail::SpamAssassin&lt;/tt&gt; in [[CPAN]]) which is usually used to filter all incoming mail for one or several users. It can be run as a [[standalone software|standalone application]] or as a subprogram of another application (such as [[Milter]], [[SA-Exim]], [[Exiscan]], [[MailScanner]], [[MIMEDefang]], [[Amavis]]) or as a [[client (computing)|client]] (&lt;tt&gt;spamc&lt;/tt&gt;) that communicates with a [[daemon (computer software)|daemon]] (&lt;tt&gt;spamd&lt;/tt&gt;). The client/server or embedded mode of operation has performance benefits, but under certain circumstances may introduce additional security risks.

Typically either variant of the application is set up in a generic [[mail filter]] program, or it is called directly from a [[mail user agent]] that supports this, whenever new mail arrives. Mail filter programs such as [[procmail]] can be made to [[pipe (computing)|pipe]] all incoming mail through SpamAssassin with an adjustment to user's &lt;tt&gt;.procmailrc&lt;/tt&gt; file.

==Operation==
SpamAssassin comes with a large set of rules which are applied to determine whether an email is spam or not. Most rules are based on [[regular expression]]s that are matched against the body or header fields of the message, but SpamAssassin also employs a number of other spam-fighting techniques. The rules are called 'tests' in the SpamAssassin documentation.

Each test has a score value that will be assigned to a message if it matches the test's criteria. The scores can be positive or negative, with positive values indicating 'spam' and negative 'ham' (non-spam messages). A message is matched against all tests and SpamAssassin combines the results into a global score which is assigned to the message. The higher the score, the higher the probability that the message is spam.

SpamAssassin has an internal (configurable) score threshold to classify a message as spam. Usually a message will only be considered as spam if it matches multiple criteria; matching just a single test will not usually be enough to reach the threshold.

If SpamAssassin considers a message to be spam, it can be further rewritten. In the default configuration, the content of the mail is appended as a [[MIME]] attachment, with a brief excerpt in the message body, and a description of the tests which resulted in the mail being classified as spam. If the score is lower than the defined settings, by default the information about the passed tests and total score is still added to the email headers and can be used in post-processing for less severe actions, such as tagging the mail as suspicious.

SpamAssassin allows for a per-user configuration of its behaviour, even if installed as system-wide service; the configuration can be read from a file or a database.  In their configuration users can specify individuals whose emails are never considered spam, or change the scores for certain rules. The user can also define a list of languages which they want to receive mail in, and SpamAssassin then assigns a higher score to all mails that appear to be written in another language.

==Network-based filtering methods==
SpamAssassin also supports:
* [[DNSBL|DNS-based blackhole lists]] and [[DNSWL|DNS-based whitelists]]
* URI blacklists such as [[SURBL]] or URIBL.com which track spam websites
* checksum-based filters such as the [[Distributed Checksum Clearinghouse]]s, [[Vipul's Razor]] and the Cloudmark Authority plug-in (commercial)
* [[Hashcash]]
* [[Sender Policy Framework]] and [[DomainKeys Identified Mail]]

More methods can be added reasonably easily by writing a Perl plug-in for SpamAssassin.

==Bayesian filtering==
SpamAssassin by default tries to reinforce its own rules through [[Bayesian spam filtering|Bayesian filtering]], but Bayesian learning is most effective with actual user input. Typically, the user is expected to &quot;feed&quot; example spam mails ''and'' example &quot;ham&quot; (useful) mails to the filter, which can then learn the difference between the two. For this purpose, SpamAssassin provides the command-line tool &lt;tt&gt;sa-learn&lt;/tt&gt;, which can be instructed to learn a single mail or an entire mailbox as either ham or spam.

Typically, the user will move unrecognized spam to a separate folder for a while, and then run &lt;tt&gt;sa-learn&lt;/tt&gt; on the folder of non-spam and on the folder of spam separately. Alternatively, if the mail user agent supports it, &lt;tt&gt;sa-learn&lt;/tt&gt; can be called for individual emails. Regardless of the method used to perform the learning, SpamAssassin's Bayesian test will subsequently assign a higher score to e-mails that are similar to previously received spam (or, more precisely, to those emails that are different from ''non-spam'' in ways similar to previously received spam e-mails).

==Licensing==

SpamAssassin is [[free software|free]]/[[open source software]], licensed under the [[Apache License|Apache License 2.0]]. Versions prior to 3.0 are dual-licensed under the [[Artistic License]] and the [[GNU General Public License]].

==sa-compile==
sa-compile is a utility distributed with SpamAssassin as of version 3.2.0.  It compiles a SpamAssassin ruleset into a [[deterministic finite automaton]] that allows SpamAssassin to use processor power more efficiently.

==Testing SpamAssassin==

Most implementations of SpamAssassin will trigger on the [[GTUBE]], a 68 byte string similar to the antivirus [[EICAR test file]]. If this string is inserted in an RFC 2822 formatted message and passed through the SpamAssassin engine, SpamAssassin will trigger with a weight of 1000.

==References==
{{Reflist}}

==Bibliography==
{{Refbegin}}
*{{cite book
| first1    = Alistair
| last1     = McDonald
| title     = SpamAssassin: A Practical Guide to Integration and Configuration
| publisher = [[Packt|Packt Publishing]]
| edition   = 1st
| pages     = 240
| date      = September 27, 2004
| isbn      = 978-1904811121
| url       = http://www.packtpub.com/spamassassin/book
}}
*{{cite book
| first1    = Alan
| last1     = Schwartz
| title     = SpamAssassin
| publisher = [[O'Reilly Media]]
| edition   = 1st
| pages     = 207
| date      = July 2004
| isbn      = 978-0596007072
| url       = http://oreilly.com/catalog/9780596007072/
}}
{{Refend}}

==External links==
{{Portal|Free software}}
* [http://spamassassin.apache.org/ SpamAssassin official homepage]
* [http://wiki.apache.org/spamassassin/ SpamAssassin Wiki]
* [http://wiki.apache.org/spamassassin/RuleUpdates#head-b6f1953fb1dc659b7de160effffbe95e9e00d3b1 sa-update] Automatically updating SA
* [http://www.rulesemporium.com/ SpamAssassin Rules Emporium (SARE)] containing many very good rules for filtering with SA ([http://www.rulesemporium.com/ not updated any more] since early 2008).
* [http://saupdates.openprotect.com/ OpenProtect's SpamAssassin sa-update channel] to automatically update SA with the newest and best SARE rules (not updated any more, see above).
* [http://www.linuxnewmedia.com/Press/Press_Releases/Awards_2006 Linux New Media Awards 2006] showing that SpamAssassin received 69% of the vote for &quot;best Linux-based anti-spam solution.&quot;
* [http://razor.sourceforge.net/ Vipul's Razor (SourceForge)]
* [http://pyzor.sourceforge.net/ Pyzor (SourceForge)]
* [http://www.christopherlewis.com/ExchangeSpamAssassin.htm Exchange-SpamAssassin Sink]
* [http://www.nabble.com/forum/ViewPost.jtp?post=9428488&amp;framed=y Questions about sa-compile]

{{Apache}}

{{DEFAULTSORT:Spamassassin}}
[[Category:Spam filtering]]
[[Category:Perl software]]
[[Category:Free email software]]
[[Category:Free software programmed in Perl]]
[[Category:Spamming]]
[[Category:Cross-platform software]]

[[cs:SpamAssassin]]
[[de:SpamAssassin]]
[[fr:SpamAssassin]]
[[id:SpamAssassin]]
[[it:SpamAssassin]]
[[nl:SpamAssassin]]
[[ja:SpamAssassin]]
[[pl:SpamAssassin]]
[[pt:SpamAssassin]]
[[ru:SpamAssassin]]
[[sv:SpamAssassin]]
[[zh:SpamAssassin]]</rev></revisions></page></pages></query></api>
