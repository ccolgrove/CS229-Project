<?xml version="1.0"?><api><query><pages><page pageid="171527" ns="0" title="Autoconf"><revisions><rev xml:space="preserve">{{Infobox software
| name                   = Autoconf
| title                  = 
| logo                   = [[File:Heckert GNU white.svg|100px]]
| screenshot             = &lt;!-- [[File: ]] --&gt;
| caption                = 
| collapsible            = 
| author                 = [[David MacKenzie (programmer)|David Mackenzie]]
| developer              = [[GNU|The GNU Project]]
| released               = 1991&lt;!-- {{Start date|YYYY|MM|DD|df=yes/no}} --&gt;
| discontinued           = 
| latest release version = 2.68
| latest release date    = {{Start date and age|2010|09|22|df=yes/no}}
| latest preview version = 
| latest preview date    = &lt;!-- {{Start date and age|YYYY|MM|DD|df=yes/no}} --&gt;
| frequently updated     = &lt;!-- DO NOT include this parameter unless you know what it does --&gt;
| programming language   = 
| operating system       = [[Cross-platform]]
| platform               = 
| size                   = 
| language               = 
| status                 = 
| genre                  = [[Programming tool]]
| license                = [[GNU General Public License|GNU GPL]]
| website                = {{URL|http://www.gnu.org/software/autoconf/}}
}}
[[File:Autoconf-automake-process.svg|thumb|400px|Flow diagram of autoconf and [[automake]]. Note that &quot;configure.ac&quot; was named &quot;configure.in&quot; in early versions of autoconf.]]
'''GNU Autoconf''' is a tool for producing [[configure script (computing)|configure scripts]] for building, installing and packaging software on computer systems where a [[Bourne shell]] is available.

Autoconf is agnostic about the programming languages used, but it is often used for projects using [[C (programming language)|C]], [[C++]], [[Fortran]], Fortran 77, [[Erlang (programming language)|Erlang]] or [[Objective-C]].

A configure script configures a software package for [[installation (computer programs)|installation]] on a particular target system.  After running a series of tests on the target system the configure script generates [[header files]] and a [[makefile]] from templates, thus customizing the software package for the target system.  Together with [[Automake]] and [[Libtool]], Autoconf forms the [[GNU build system]]. It comprises several other tools, notably Autoheader.

== Usage overview ==
The developer specifies the desired behaviour of the configure script by writing a list of instructions in the [[GNU m4]] language in a file called &quot;configure.ac&quot;.  A library of pre-defined m4 [[macro (computer science)|macros]] is available to describe common configure script instructions.  Autoconf transforms the instructions in &quot;configure.ac&quot; into a portable configure script. The building system is not supposed to have autoconf installed: autoconf is needed only to build the configure script, that is usually shipped with the software.

=== configure.ac format ===
The GNU Autoconf manual suggests the following format for the configure.ac file:
; Autoconf requirements
: The AC_PREREQ(''version'') macro can be used to ensure that a recent enough version of the autoconf program is available to process the configure.ac file
; AC_INIT(''package'', ''version'', ''bug-report-address'')
: This macro is required in every configure.ac file.  It specifies the name and version of the software package for which to generate a configure script and the email address of the developer.
; information on the package
; checks for programs
; checks for libraries
; checks for header files
; checks for types
; checks for structures
; checks for compiler characteristics
; checks for library functions
; checks for system services
; AC_CONFIG_FILES([file...])
; AC_OUTPUT
&lt;!-- 
An example file is as follows:
&lt;source lang=&quot;text&quot;&gt;
AC_PREREQ([2.63])
AC_INIT([hello], [1.0], [developer@example.com])
&lt;/source&gt; --&gt;

== History ==
Autoconf was begun in the summer of 1991 by [[David MacKenzie (programmer)|David Mackenzie]] to support his work at the [[Free Software Foundation]].  In the subsequent years it grew to include enhancements from a variety of authors and became the most widely used build configuration system for writing portable free or open-source software.

== Approach ==
Autoconf is similar to the [[Metaconfig]] package used by [[Perl]].  The [[imake]] system formerly used by the [[X Window System]] (up to X11R6.9) is closely related, but has a different philosophy.

The Autoconf approach to [[Porting|portability]] is to test for [[feature (software design)|feature]]s, not for [[Software versioning|versions]]. For example, the native C compiler on SunOS 4 did not support [[C (programming language)|ISO C]]. However, it is possible for the user or administrator to have installed an ISO C-compliant compiler.  A pure version-based approach would not detect the presence of the ISO C compiler, but a feature-testing approach would be able to discover the ISO C compiler the user had installed. The rationale of this approach is to gain the following advantages:

* the configure script can get reasonable results on newer or unknown systems
* it allows [[system administrator|administrator]]s to customize their machines and have the configure script take advantage of the customizations
* there is no need to keep track of minute details of versions, patch numbers, etc., to figure out whether a particular feature is supported or not

==Criticism==
{{csection|date=September 2011}}

Autoconf is an old and mature product that, when properly used, provides a very simple interface even in complex cross-compiling scenarios.  However there is some criticism that states that Autoconf uses dated technologies, has a lot of legacy restrictions, and complicates simple scenarios unnecessarily for the author of ''configure.ac'' scripts. In particular, often cited weak points of Autoconf are:
* General complexity of used architecture, most projects use multiple repetitions.&lt;ref name=&quot;kde&quot;&gt;{{cite web
|title = Why the KDE project switched to CMake -- and how
|first = Alexander
|last = Neundorf
|date = 2006-06-21
|url = http://lwn.net/Articles/188693/
}}&lt;/ref&gt;
* Generated 'configure' is written in Unix shell and thus Makefile generation is slow. {{Citation needed|date=July 2010}} Some projects, such as KDE, tried to work around this issue by introducing distinct Makefile generators written in other languages.&lt;ref name=&quot;kde&quot;/&gt;
* Some people think that 'configure' scripts generated by autoconf provides only manual-driven command-line interface without any standardization.&lt;ref name=&quot;stop-insanity&quot;/&gt; While it is true that some developers do not respect common conventions, such conventions still exist and are widely used.&lt;ref name=&quot;gnu-coding&quot;&gt;{{cite web
|title = GNU Coding Standards
|url = http://www.gnu.org/prep/standards/standards.html
}}&lt;/ref&gt;
* M4 is unusual and unknown to many developers. Developers will need to learn it to extend autoconf with non-standard checks.&lt;ref name=&quot;stop-insanity&quot;&gt;{{cite web
|first = Andrew
|last = McCall
|title = Stop the autoconf insanity! Why we need a new build system
|url = http://freshmeat.net/articles/stop-the-autoconf-insanity-why-we-need-a-new-build-system
|date = 2003-06-21
}}&lt;/ref&gt;
* Weak backward and forward compatibility requires a wrapper script.&lt;ref name=&quot;autoconf 2.13&quot;&gt;{{cite web
|first = Thomas 
|last = Dickey 
|title = why i still use autoconf 2.13
|url = http://invisible-island.net/autoconf/autoconf.html
}}&lt;/ref&gt;
* Autoconf-generated scripts are usually large and rather complex. Although they produce extensive logging, debugging them can still be difficult.

Due to these limitations, some projects that used GNU Build System started to switch to other build systems:

* [[KDE]] project switched to [[CMake]], starting with KDE 4.&lt;ref name=&quot;kde&quot;/&gt;
* [[Scribus]] switched to [[CMake]].&lt;ref name=&quot;kde&quot;/&gt;
* [[Blender (software)|Blender]] switched to [[SCons]] on 2004-02-15.&lt;ref name=&quot;blender&quot;&gt;http://www.blender.org/development/release-logs/blender-233/build-systems/&lt;/ref&gt;

==See also==
{{Portal|Free software}}
* [[CMake]] Alternative build system
* [[Configure script]]
* [[GNU build system]]
* [[pkg-config]] Detecting package dependencies

==References==
{{Reflist}}

== External links ==

* {{official|http://www.gnu.org/software/autoconf/}}
* [http://www.gnu.org/software/ac-archive/ GNU Autoconf macro archive]
* [http://sources.redhat.com/autobook/ ''The Goat Book'' homepage (aka the Autobook)]
* [http://www.openismus.com/documents/linux/automake/automake.shtml Using Automake and Autoconf with C++]
* [http://www.openismus.com/documents/linux/using_libraries/using_libraries.shtml Using C/C++ libraries with Automake and Autoconf].
* [http://autotoolset.sourceforge.net/ Autotoolset home page]
* [http://www.freesoftwaremagazine.com/books/autotools_a_guide_to_autoconf_automake_libtool Autotools: A practitioner's guide to Autoconf, Automake and Libtool]
* [http://www.flameeyes.eu/autotools-mythbuster/ Autotools Mythbuster]
{{GNU}}

[[Category:Computer configuration]]
[[Category:GNU Project software]]
[[Category:Free development toolkits and libraries]]
[[Category:Free cross-platform software]]
[[Category:Build automation]]

[[ca:GNU Autoconf]]
[[de:GNU Build System#GNU Autoconf]]
[[fr:Autoconf]]
[[ko:Autoconf]]
[[pl:Autoconf]]
[[pt:Autoconf]]
[[ru:Autoconf]]
[[sv:Autoconf]]
[[zh:Autoconf]]</rev></revisions></page></pages></query></api>
