<?xml version="1.0"?><api><query><pages><page pageid="548682" ns="0" title="Dd (Unix)"><revisions><rev xml:space="preserve">{{original research|date=October 2011}}
{{lowercase|title=dd (Unix)}}{{manual|date=July 2011}}

In [[computing]], '''dd''' is a common [[Unix]] program whose primary purpose is the [[low-level]] copying and conversion of raw data. According to the manual page for Version 7 Unix,&lt;ref name=&quot;Unix-V7-man&quot;&gt;{{cite web | url=http://www.orangetide.com/Unix/V7/usr/man/man1/dd.1 | title=dd man page | author=Bell Laboratories | accessdate=2009-02-25 }}&lt;/ref&gt; it will &quot;convert and copy a file&quot;. It is used to copy a specified number of [[byte]]s or [[block (data storage)|block]]s, performing on-the-fly [[byte order]] conversions, as well as more esoteric [[EBCDIC]] to [[ASCII]] conversions.&lt;ref name=&quot;tfl-dd&quot;&gt;{{cite web | url=http://www.codecoffee.com/tipsforlinux/articles/036.html | title=How and when to use the dd command? | author=Sam Chessman | publisher=CodeCoffee | accessdate=2008-02-19 }}&lt;/ref&gt; It can also be used to copy regions of raw device files, for example backing up the [[boot sector]] of a [[hard disk]], or to read fixed amounts of data from special files like [[/dev/zero]] or [[/dev/random]].&lt;ref&gt;{{cite web | url=http://wiki.linuxquestions.org/wiki/Dd | title=Dd - LQWiki | publisher=LinuxQuestions.org | accessdate=2008-02-19 }}&lt;/ref&gt;

The name ''dd'' may stand for &quot;data&quot; or &quot;disk duplication&quot;. It is jokingly said to stand for &quot;disk destroyer&quot;, &quot;data destroyer&quot;, &quot;death and destruction&quot;, or &quot;delete data&quot;, since when used for low-level operations on hard disks, a small mistake, such as reversing the ''if'' and ''of'' (input and output) parameters, could result in the loss of some or all data on a disk.&lt;ref name=&quot;tfl-dd&quot; /&gt; 

The syntax of dd is likely inspired from [[Job_Control_Language#In-stream_input|DD]] found in [[IBM JCL]], and the command's syntax is meant to be reminiscent of this;&lt;ref name=&quot;jargon-dd&quot;&gt;{{cite web | url=http://www.catb.org/jargon/html/D/dd.html | title=dd | author=Eric S. Raymond | accessdate=2008-02-19 }}&lt;/ref&gt; in JCL, &quot;DD&quot; stands for Data Description.&lt;ref&gt;See this old discussion {{cite web | url=http://www.djmnet.org/lore/dd-origin.txt | title=The Unix &quot;dd&quot; command | publisher=alt.folklore.computers | accessdate=2011-07-05 }}&lt;/ref&gt;  The [[Jargon File]] states that it is rumored to have been based on IBM's [[Job Control Language|JCL]], and the syntax may have been a joke.&lt;ref name=&quot;jargon-dd&quot;/&gt;

==Usage==
The [[command line]] syntax of ''dd'' is significantly different from most other Unix programs, and because of its ubiquity it is resistant to recent attempts to enforce a common syntax for all command line tools.  Generally, ''dd'' uses an ''option''=''value'' format, whereas most Unix programs use either &lt;code&gt;-&lt;/code&gt;''option value'' or --''option''=''value'' format.  Also, the input is specified using the &quot;if&quot; (from ''input file'') option, while most programs simply take the name by itself. 

Usage varies across different [[operating system]]s.  Also, certain features of dd will depend on the computer system cababilities, such as dd's ability to implement an option for direct memory access. Sending a [[SIGINFO]] signal (or a USR1 signal on Linux) to a running ''dd'' process makes it print I/O statistics to [[Standard error stream|standard error]] and then continue copying. Dd can read [[standard input]] from the keyboard. When [[EOF]] (end of file) is read, dd will exit. Signals and EOF are determined by the software. For example, Unix tools ported to [[Windows]] vary as to the EOF: [[Cygwin]] uses &lt;ctrl-d&gt; (the usual, Unix EOF) and [[MKS Toolkit]] uses &lt;ctrl-z&gt; (the usual, Windows EOF).

In compliance with the [[Unix philosophy]], dd does one thing well.  Unlike a sophisticated and highly abstracted utility, dd has no algorithm other than in the low-level decisions of the user concerning how to vary the run options. Often the options are changed for each run of dd in a multi-step process to solve a computer problem.

==Output messages==
The GNU variant of ''dd'' as supplied with Linux does not describe the format of the messages displayed on stdout on completion, however these are described by other implementations e.g. that with BSD.

Each of the &quot;Records in&quot; and &quot;Records out&quot; lines shows the number of complete blocks transferred + the number of partial blocks, e.g. because the physical medium ended before a complete block was read.

==Block size==
[[Block (data storage)|Block]] size is a crucial operating factor.  Each run of dd will use one set of block sizes. There are [[disk sector|block]] sizes for input and output.  Block sizes can adapt dd to the realm of its application, and to the phase of an operation involving many runs of dd.  An input block size is '''ibs''', but '''bs''' will override ibs.  An output block size will depend on obs, and cbs, and '''sync''' will pad to comply with cbs.

For example, in data recovery in an area of errors on a hard drive, the most bytes will be recovered by using a small block size; for the greatest speed a large block size is chosen according to (a point of diminishing returns concerning) the system it runs on. If the transfer uses a network, dd can operate using a suitable block size depending on congestion levels.

Some implementations understand the letter ''x'' as a multiplication operator in the block size and count parameters:
 dd bs=2x80x18b if=/dev/fd0 of=floppy.image

where the &quot;b&quot; suffix indicates that the units are 512-byte blocks. Unix [[block devices]] use this as their allocation unit by default.

For the value of ''bs'' field, following decimal number can be suffixed:
: ''w'' means 2
: ''b'' means 512
: ''k'' means 1024
: ''M'' specifies multiplication by 1024&lt;sup&gt;2&lt;/sup&gt;
: ''G'' specifies multiplication by 1024&lt;sup&gt;3&lt;/sup&gt;

Hence &lt;code&gt;bs=2x80x18b&lt;/code&gt; means 2 Ã 80 Ã 18 Ã 512 = 1474560 which is the exact size of a 1440 KiB [[floppy disk]].

==Progress Information==
dd is a silent tool which is very useful for scripting. However, if the progress is to be seen, use the following command on a GNU/Linux machines.
In a different terminal obtain the pid of the dd process by doing&lt;br /&gt;
ps -a&lt;br /&gt;
You may get a output like&lt;br /&gt;
18255 pts/5    00:00:00 ssh&lt;br /&gt;
24084 pts/2    00:00:04 dd&lt;br /&gt;
24334 pts/4    00:00:00 ps&lt;br /&gt;
&lt;br /&gt;

To send a USR1 signal to dd, continue the following:&lt;br /&gt;
sudo kill -USR1 24084&lt;br /&gt;
In the terminal where dd is running you will see its output, something like:&lt;br /&gt;
349389+0 records in&lt;br /&gt;
349389+0 records out&lt;br /&gt;
1431097344 bytes (1.4 GB) copied, 935.624 s, 1.5 MB/s&lt;br /&gt;
One can do this as many as times as required to see the continuous progress.&lt;br /&gt;

==Data transfer==
dd can duplicate data across files, devices, partitions and volumes.  The data may be input or output to and from any of these; but there are important differences concerning the output when going to a partition.  Also, during the transfer, the data can be modified  using the '''conv''' options to suit the medium.

An attempt to copy the entire disk using [[cp (Unix)|cp]] may omit the final block if it is an unexpected length{{Citation needed|date=February 2011}}; whereas ''dd'' may succeed. The source and destination disks should have the same size.

{| class=&quot;wikitable&quot;
|+Data Transfer forms of dd
|-
| dd if=/dev/sr0 of=myCD.iso bs=2048 conv=noerror,sync || create an [[ISO image|ISO]] [[disk image]] from a CD-ROM.
|-
| dd if=/dev/sda2 of=/dev/sdb2 bs=4096 conv=noerror || [[Disk cloning|Clone]] one [[hard disk partition|partition]] to another
|-
| dd if=/dev/ad0 of=/dev/ad1 bs=1M conv=noerror || Clone a hard disk &quot;ad0&quot; to &quot;ad1&quot;.
|}

The ''noerror'' means to keep going if there is an error.  The '''sync''' option means to pad the output blocks

===Master boot record===
It is possible to repair a master boot record.  It can be transferred to and from a repair file.
To duplicate the first two sectors of a floppy drive:
  dd if=/dev/fd0 of=MBRboot.img bs=512 count=2

To create an image of the entire [[master boot record]] (including  the [[partition table]]):
  dd if=/dev/sda of=MBR.img bs=512 count=1

To create an image of only the boot code of the [[master boot record]] (without the [[partition table]]):
  dd if=/dev/sda of=MBR_boot.img bs=446 count=1

==Data modification==
dd can modify data in place.

Overwrite the first 512 bytes of a file with null bytes:

  dd if=/dev/zero of=path/to/file bs=512 count=1 conv=notrunc

The ''notrunc'' conversion option means do not truncate the output file â that is, if the output file already exists, just replace the specified bytes and leave the rest of the output file alone.  Without this option, ''dd'' would create an output file 512 bytes long.

To duplicate a disk partition as a disk image file on a different partition:

  dd if=/dev/sdb2 of=partition.image bs=4096 conv=noerror

==Disk wipe==
For security reasons, it is necessary to have a [[disk wipe]] of the discarded device.

To check to see if a drive has data on it, send the output to standard out.  

  dd if=/dev/sda 

To wipe a disk, first, consider the operation that would create a 1 GiB file containing only zeros (''bs'' specifies block size, ''count'' the number of blocks):

  dd if=/dev/zero of=file1G.tmp bs=1M count=1024

Count is the number of reads dd does.  Multiplying 1M times 1024 gives us 1 GiB.

Now here are ways to use dd to wipe a disk:

&lt;source lang=&quot;bash&quot;&gt;
 dd if=/dev/urandom of=/dev/hda # wipe an entire disk with random data
 dd if=/dev/zero of=/dev/sda # zero out a drive:
&lt;/source&gt;

The output may be piped to various other Unix utilities in order to facilitate the report.

== Data recovery ==
The history of [[open-source software]] (OSS) for [[data recovery]] and restoration of files, drives, and partitions started with GNU dd in 1984, with one block size per dd process, and no recovery algorithm other than the user's interactive session running one form of dd after another.  Then a C program was authored Oct. 1999 called '''dd_rescue'''.  It has two block sizes in its algorithm. But the author of the 2003 shell script dd_rhelp that enhances dd_rescue's data recovery algorithm, now recommends GNU '''ddrescue&lt;ref&gt;{{cite web |url=http://www.kalysto.org/utilities/dd_rhelp/index.en.html |title= dd_rhelp author's repository |last1= |author= LAB Valentin|date=19 September 2011|quote=Important note : For some times, dd_rhelp was the only tool (AFAIK) that did this type of job, but since a few years, it is not true anymore : Antonio Diaz did write a ideal replacement for my tool : GNU 'ddrescue'.}}&lt;/ref&gt;''', a C++ program that published in 2004 and is now in most Linux distributions. GNU ddrescue has the most sophisticated block-size-changing algorithm available in OSS.&lt;ref&gt;{{cite web | url=http://www.cgsecurity.org/wiki/Damaged_Hard_Disk | title=Damaged Hard Disk  | publisher=www.cgsecurity.org | accessdate=2008-05-20 }}&lt;/ref&gt; (The names ddrescue and dd_rescue are similar, yet they are very different programs. Still, the [[Debian]] Linux distribution packages dd_rescue as &quot;[http://packages.debian.org/sid/ddrescue ddrescue]&quot;, and packages the GNU ddrescue as &quot;gdrescue&quot; or as &quot;gddrescue&quot;).

GNU ddrescue is stable and safe.&lt;ref&gt;{{cite web | url=http://web.archive.org/web/20080415135125/http://blue-gnu.biz/content/interview_gnu_ddrescue_039_s_antonio_diaz_diaz | title=Interview with GNU ddrescue's Antonio Diaz Diaz  | publisher=Blue-GNU | accessdate=2008-12-06 |archiveurl = http://web.archive.org/web/20080415135125/http://blue-gnu.biz/content/interview_gnu_ddrescue_039_s_antonio_diaz_diaz |archivedate = 2008-04-15}}&lt;/ref&gt; Here is an untested rescue using 3 of ddrescue's 24 options:
&lt;source lang=&quot;bash&quot;&gt;
admin$&gt; ddrescue -n /dev/old_disk /dev/new_disk # quickly grab large error-free areas, then stop
admin$&gt; ddrescue -d -r1 /dev/old_disk /dev/new_disk # work with direct disk access on error areas
&lt;/source&gt;

Another open source program called '''savehd7''' uses a sophisticated algorithm, but it also requires the installation of its own programming-language interpreter.

==Miscellaneous uses==
To make drive benchmark test and analyze the sequential read and write performance for 1024 byte blocks :

  dd if=/dev/zero bs=1024 count=1000000 of=file_1GB
  dd if=file_1GB of=/dev/null bs=64k

To make a file of 100 random bytes:
  dd if=/dev/urandom of=myrandom bs=100 count=1

To convert a file to uppercase:
  dd if=filename of=filename1 conv=ucase

Create a 1 GiB [[sparse file]] or resize an existing file to 1 GiB without overwriting:
  dd if=/dev/zero of=mytestfile.out bs=1 count=0 seek=1G

== Limitations ==
[[Seagate Technology|Seagate]] documentation warns, &quot;Certain disc utilities, such as DD, which depend on low-level disc access may not support 48-bit
[[Logical block addressing|LBA]]s until they are updated.&quot;&lt;ref&gt;[http://web.archive.org/web/20070316080228/http://www.seagate.com/support/kb/disc/tp/137gb.pdf Windows 137GB (128 [[GiB]]) Capacity Barrier - Seagate Technology] (March 2003)&lt;/ref&gt; Using ATA harddrives over 128 GiB requires 48-bit LBA. However, in [[Linux]], ''dd'' uses the kernel to read or write to raw [[device file]]s.&lt;ref&gt;This is verifiable with [[strace]].&lt;/ref&gt; Support for 48-bit LBA has been present since version 2.4.23 of the kernel.&lt;ref&gt;{{cite web | url=http://www.kernel.org/pub/linux/kernel/v2.4/ChangeLog-2.4.23 | title=ChangeLog-2.4.23 | publisher=www.kernel.org | accessdate=2009-12-07 }}&lt;/ref&gt;

==See also==
*[[List of Unix programs]]
*[[Backup]]
*[[Disk cloning]]
*[[Disk image]]
* [[RaWrite]]
* [[Disk Copy]]
*[http://www.forensicswiki.org/wiki/Dcfldd Forensics (DD) Dcfldd]

==References==
{{reflist}}

== External links ==
*{{man|cu|dd|SUS|convert and copy a file}}
* [http://www.gnu.org/software/coreutils/manual/html_node/dd-invocation.html dd]: manual page from [[GNU]] [[coreutils]].
* [http://www.chrysocome.net/dd dd for Windows].
* [http://seed7.sourceforge.net/scrshots/savehd7.htm savehd7 - Save a potentially damaged harddisk partition]
* [http://www.gnu.org/software/ddrescue/ddrescue.html GNU ddrescue].
* [http://www.manpagez.com/info/ddrescue Manual for GNU ddrescue].
*[http://www.garloff.de/kurt/linux/ddrescue/ dd_rescue]
* [http://www.kalysto.org/utilities/dd_rhelp/index.en.html dd_rhelp]
* [http://www.softpanorama.org/Tools/dd.shtml Softpanorama dd page].
* [http://wiki.linuxquestions.org/wiki/Dd DD at Linux Questions Wiki].
* [http://www.myfixlog.com/fix.php?fid=21 How to use ddrescue to image a damaged harddisk partition and mount it in Windows.]
{{Optical disc image software}}
{{unix commands}}

[[Category:Hard disk software]]
[[Category:Data recovery]]
[[Category:Standard Unix programs]]
[[Category:Unix SUS2008 utilities]]
[[Category:Disk cloning]]

[[de:Dd (Unix)]]
[[fa:Dd (ÛÙÙÛÚ©Ø³)]]
[[fr:Dd (Unix)]]
[[it:Dd (Unix)]]
[[ka:Dd]]
[[hu:Dd (Unix)]]
[[nl:Dd (Unix)]]
[[ja:Dd (UNIX)]]
[[no:Dd (Unix)]]
[[pl:Dd]]
[[ro:Dd (Unix)]]
[[ru:Dd]]
[[sv:Dd]]
[[uk:Dd]]</rev></revisions></page></pages></query></api>
