<?xml version="1.0"?><api><query><pages><page pageid="34147" ns="0" title="X Window System"><revisions><rev xml:space="preserve">{{Redirect|X11}}
[[File:X-Window-System.png|thumb|300px|A historical example of graphical user interface and applications common to the MIT X Consortium's distribution running under the [[twm]] window manager: [[Xterm|X Terminal]], [[Xbiff]], xload and a graphical [[man page|manual page]] browser]]

The '''X''' window system (commonly '''X Window System''' or '''X11''', based on its current major version being 11) is a [[computer software]] system and network [[protocol (computing)|protocol]] that provides a basis for [[graphical user interface]]s (GUIs) and rich input device capability for [[computer network|networked computers]]. It creates a [[hardware abstraction layer]] where software is written to use a generalized set of commands, allowing for [[device independence]] and reuse of programs on any computer that implements X.

X originated at the [[Massachusetts Institute of Technology]] (MIT) in 1984. The current protocol version, X11, appeared in September 1987. The [[X.Org Foundation]] leads the X project, with the current reference implementation, [[X.Org Server]], available as [[free and open source software]] under the [[MIT License]] and similar [[permissive free software licences|permissive licenses]].&lt;ref&gt;{{cite web | url = http://ftp.x.org/pub/X11R7.0/doc/html/LICENSE.html | title = Licenses | work= X11 documentation | publisher = X.org | date = 19 December 2005 | accessdate = 2007-10-23 }}&lt;/ref&gt;

== Purpose and abilities ==
X is an architecture-independent system for remote graphical user interfaces and rich input device capabilities which allows many people to share the processing power of a [[time-sharing]] computer and to collaborate with each other through client applications running on remote computers.  Each person using a networked [[computer terminal|terminal]] has the ability to interact with the display with any type of user input device. Due to the ubiquity of support for X software on [[Unix]], [[Linux]] and [[Mac OS X]], X is commonly used to run client applications on [[personal computer]]s even when there is no need for time-sharing.

X provides [[windowing system|windowing]] on [[electronic visual display|computer displays]] and manages [[keyboard (computing)|keyboard]], [[pointing device]] control functions and [[touchscreen]]s. In its standard distribution it is a complete, albeit simple, display and interface solution which delivers a standard [[widget toolkit|toolkit]] and [[protocol stack]] for building graphical user interfaces on most [[Unix-like]] operating systems and [[OpenVMS]], and has been [[porting|ported]] to many other contemporary general purpose [[operating system]]s.

X provides the basic [[software framework|framework]], or primitives, for building such GUI environments: drawing and moving [[window (computing)|windows]] on the [[computer monitor|display]] and interacting with a mouse, keyboard or touchscreen. X does not mandate that the [[user interface]]&amp;nbsp; be present â individual client programs known as [[window manager]]s handle this. The window manager is not necessary and programs may use X's graphical abilities with no user interface. As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces. X is built as an additional (application) [[abstraction layer]] on top of the [[operating system kernel]].

Unlike most earlier display protocols, X was specifically designed to be used over network connections rather than on an integral or attached display device. X features [[network transparency]]: the machine where an application program (the ''client'' application) runs can differ from the user's local machine (the [[:Category:X servers|display ''server'']]).  X's network protocol is based on X command primitives and, with [[GLX]], [[OpenGL]] 3D primitives rather than on a more basic framebuffer copying paradigm.  This approach allows both 2D and 3D operations to be fully accelerated on the remote X server.

When used across the network, bandwidth and latency can both be significant issues in the usability of certain software models.  Bandwidth is a key factor both in watching video in 2D and in transferring textures for 3D.  Latency can be a concern in interactive applications - most obviously games - but for high levels of latency even basic menu manipulation can become difficult.

X provides no support for audio, although several projects exist in this niche, some also providing [[Network transparency|transparent network]] support. Some are [[PulseAudio]], [[Advanced Linux Sound Architecture]] (ALSA), [[Open Sound System]] (OSS), and [[JACK Audio Connection Kit]] (JACK).

X also lacks support for user-defined stored procedures on the X server, which might have allowed for the dynamic construction of higher order primitives as seen in [[NeWS]], which could reduce bandwidth demands from requiring fewer primitives to be sent, and improve certain types of interaction by removing round trips to the remote X client program in some varieties of menu interactions, picking, window management, and so on.

X is often used in conjunction with an [[X session manager]] to implement [[session (computer science)|sessions]].
Usually, a session is started by the [[X display manager]]. However, the user can also start a session by manually running the [[xinit]] or [[startx]] programs.

== Design ==
{{details3|[[X Window System protocols and architecture]] and [[X Window System core protocol]]}}
[[File:X client sever example.svg|frame|Example deployment of X server: the X server receives input from a local keyboard and mouse and displays to a screen. A [[web browser]] and a [[terminal emulator]] run on the user's workstation and a software update application runs on a remote computer but is controlled and monitored from the user's machine]]

X uses a [[clientâserver]] model: an X server communicates with various ''client'' programs. The server accepts requests for graphical output (windows) and sends back user input (from keyboard, mouse, or touchscreen). The server may function as:
* an application displaying to a window of another display system
* a system program controlling the video output of a [[personal computer|PC]]
* a dedicated piece of hardware.

This clientâserver terminologyâthe user's terminal being the server and the applications being the clientsâoften confuses new X users, because the terms appear reversed. But X takes the perspective of the application, rather than that of the end-user: X provides display and I/O services to applications, so it is a server; applications use these services, thus they are clients.

The [[communications protocol|communication protocol]] between server and client operates [[computer network|network]]-transparently: the client and server may run on the same machine or on different ones, possibly with different [[computer architecture|architectures]] and [[operating system]]s. A client and server can even communicate [[computer security|securely]] over the [[Internet]] by [[tunneling protocol|tunneling]] the connection over an [[encrypted]] network session.

An X client itself may emulate an X server by providing display services to other clients. This is known as &quot;X nesting&quot;. Open-source clients such as [[Xnest]] and [[Xephyr]] support such X nesting.

To use an X client application on a remote machine, the user does the following:
* On the local machine, open a [[terminal emulator|terminal window]]
* use [[secure shell|ssh]] with the X forwarding argument to connect to the remote machine.  [[Telnet]] can be used but is not secure, does not allow graphical forwarding and is largely deprecated.
* request local display/input service (e.g., &lt;tt&gt;export DISPLAY=&lt;/tt&gt;''[user's machine]''&lt;tt&gt;:0&lt;/tt&gt; if not using SSH with X forwarding or 'tunneling' enabled).
The remote X client application will then make a connection to the user's local X server, providing display and input to the user.

Alternatively, the local machine may run a small program that connects to the remote machine and starts the client application.

Practical examples of remote clients include:
* administering a remote machine graphically
* using a client application to join with large numbers of other terminal users in collaborative workgroups.
* running a computationally intensive simulation on a remote machine and displaying the results on a local desktop machine
* running graphical software on several machines at once, controlled by a single display, keyboard and mouse.

== Principles ==

In 1984, [[Bob Scheifler]] and [[Jim Gettys]] set out the early principles of X: {{Citation needed|date=October 2011}}

*''Do not add new functionality unless an implementor cannot complete a real application without it.''
*''It is as important to decide what a system is not as to decide what it is. Do not serve all the world's needs; rather, make the system [[extensible]] so that additional needs can be met in an upwardly compatible fashion.''
*''The only thing worse than generalizing from one example is generalizing from no examples at all.''
*''If a problem is not completely understood, it is probably best to provide no solution at all.''
*'' If you can get 90 percent of the desired effect for 10 percent of the work, use the simpler solution.'' (See also [[Worse is better]].)
*'' Isolate complexity as much as possible.''
*''Provide mechanism rather than policy. In particular, place user interface policy in the clients' hands.''

The first principle was modified during the design of X11 to: ''&quot;Do not add new functionality unless you know of some real application that will require it.&quot;'' {{Citation needed|date=October 2011}}

X has largely kept to these principles. {{Citation needed|date=October 2011}} The sample implementation is developed with a view to extension and improvement of the implementation, while remaining compatible with the original 1987 protocol. {{Citation needed|date=October 2011}}

== User interfaces ==
{{stack|
[[File:Gnome-2.28.png|thumb|[[GNOME]] graphical user interface]]
[[File:KDE 4.png|thumb|[[KDE Plasma Workspaces|KDE Plasma]] graphical user interface]]
[[File:Xfce-4.4.png|thumb|[[Xfce]] graphical user interface]]
}}
X is primarily a protocol and graphics primitives definition and it deliberately contains no specification for application [[user interface]] design, such as [[button (computing)|button]], [[menu (computing)|menu]], or window [[title bar]] styles. Instead, application software&amp;nbsp;â such as [[window manager]]s, GUI [[widget toolkit]]s and [[desktop environment]]s, or application-specific [[graphical user interfaces]] - define and provide such details. As a result, there is no ''typical'' X interface and several desktop environments have been popular among users.

A window manager controls the placement and appearance of application windows. This may result in desktop interfaces akin to those of [[Microsoft Windows]] or the Apple [[Macintosh]] (examples include [[Metacity]] in [[GNOME]], [[KWin]] in [[KDE Software Compilation]], [[Xfwm]] in [[Xfce]], or [[Compiz]]) or have radically different controls (such as a [[tiling window manager]], like [[wmii]] or [[Ratpoison]]). Window managers range in sophistication and complexity from the bare-bones (e.g., [[twm]], the basic window manager supplied with X, or evilwm, an extremely light window manager) to the more comprehensive desktop environments such as [[Enlightenment (window manager)|Enlightenment]] and even to application-specific window managers for vertical markets such as point of sale.

Many users use X with a desktop environment, which, aside from the window manager, includes various applications using a consistent user interface. GNOME, KDE Software Compilation and Xfce are the most popular desktop environments. The [[Single UNIX Specification|Unix standard]] environment is the [[Common Desktop Environment]] (CDE). The [[freedesktop.org]] initiative addresses interoperability between desktops and the components needed for a competitive X desktop.

As X is responsible for keyboard and mouse interaction with graphical desktops, certain [[keyboard shortcut]]s have become associated with X. Control-Alt-Backspace typically terminates the currently running X session, while Control-Alt in conjunction with a [[function key]] switches to the associated [[virtual console (PC)|virtual console]]. However, this detail is left to the design of an X server implementation and is not universal; for example, X server implementations for Windows and Macintosh typically do not provide these keyboard shortcuts.

== Implementations ==

The X.Org implementation serves as the [[canonical]] implementation of X. Due to liberal [[software license|licensing]], a number of variations, both [[free and open source software|free and open source]] and [[proprietary software|proprietary]], have appeared. Commercial Unix vendors have tended to take the open source implementation and adapt it for their hardware, usually customizing it and adding proprietary extensions.
[[File:Wfm cygwinx rootless.png|thumb|200px|left|[[Cygwin/X]] running rootless on Microsoft [[Windows XP]] via the command (startx -- -rootless). The screen shows X applications ([[xeyes]], xclock, [[xterm]]) sharing the screen with native Windows applications (Date and Time, Calculator).]]

Up to 2004, [[XFree86]] provided the most common X variant on free [[Unix-like]] systems. XFree86 started as a [[porting|port]] of X for [[Intel 80386|386]]-compatible PCs and, by the end of the 1990s, had become the greatest source of technical innovation in X and the ''de facto'' standard of X development.&lt;ref name=&quot;xfree86.org&quot;&gt;[http://www.xfree86.org/pipermail/forum/2004-February/003945.html Announcement: Modification to the base XFree86(TM) license.] 02 Feb 2004&lt;/ref&gt; Since 2004, however, the [[X.Org Server]], a [[fork (software)|fork]] of XFree86, has become predominant.

While it is common to associate X with Unix, X servers also exist natively within other graphical environments. [[Hewlett-Packard]]'s [[OpenVMS]] operating system includes a version of X with [[Common Desktop Environment]] (CDE), known as [[DECwindows]], as its standard desktop environment. [[Apple Inc.|Apple]]'s Mac OS X [[Mac OS X v10.3|v10.3]] (Panther) and [[Mac OS X v10.4|v10.4]] (Tiger) include [[X11.app]], based on XFree86 4.3 and X11R6.6, with better Mac OS X integration. On Mac OS X [[Mac OS X v10.5|v10.5]] (Leopard), Apple included X.org (X11R7.2 codebase) instead of XFree86 (X11R6.8). Third-party servers under Mac OS 7, 8 and 9 included Apple's [[MacX]] and White Pine Software's [[eXodus]].

[[Microsoft Windows]] is not shipped with support for X, but many third-party implementations exist, as [[free and open source software]] such as [[Cygwin/X]], [[Xming]] (free up to 6.9.0.31) and [[WeirdX]]; [[freeware]] such as Mocha X Server;&lt;ref&gt;http://www.mochasoft.dk/freeware/x11.htm&lt;/ref&gt; and proprietary products such as Xmanager, [[Exceed]], eXcursion (Hewlett-Packard), [[MKS X/Server]], Reflection X, [[X-Win32]] and [[Xming]] (current versions).

When an operating system with a native windowing system hosts X in addition, the X system can either use its own normal desktop in a separate host window or it can run ''rootless'', meaning the X desktop is hidden and the host windowing environment manages the geometry and appearance of the hosted X windows within the host screen.

=== X terminals ===
[[File:Network Computing Devices NCD-88k X terminal.jpg|thumb|right|A [[Network Computing Devices]] NCD-88k X terminal]]
{{Main|X terminal}}
An ''X terminal'' is a [[thin client]] that only runs an X server. This architecture became popular for building inexpensive terminal parks for many users to simultaneously use the same large computer server to execute application programs as clients of each user's X terminal. This use is very much aligned with the original intention of the MIT project.

X terminals explore the network (the local [[broadcast domain]]) using the [[XDMCP|X Display Manager Control Protocol]] to generate a list of available hosts that are allowed as clients. One of the client hosts should run an [[X display manager (program type)|X display manager]].

A limitation of X terminals and most thin clients is that they are not capable of any input or output other than the keyboard, mouse, and display. All relevant data is assumed to exist solely on the remote server, and the X terminal user has no methods available to save or load data from a local terminal device such as a floppy disk, CDROM, or USB storage device. However, printing is usually supported as a shared network or serial connection near the terminal.

Dedicated (hardware) X terminals have become less common; a [[Personal Computer|PC]] or modern [[thin client]] with an X server typically provides the same functionality at the same, or lower, cost.

== Limitations and criticism ==
{{Unreferenced section|date=October 2011}}

''[[The UNIX-HATERS Handbook]]'' (1994) devoted a full chapter to the problems of X.&lt;ref name=&quot;The X-Windows Disaster&quot;&gt;{{cite web|url=http://www.art.net/~hopkins/Don/unix-haters/x-windows/disaster.html |title=The X-Windows Disaster |publisher=Art.net |date= |accessdate=2009-11-10}}&lt;/ref&gt; ''Why X Is Not Our Ideal Window System'' (1990) by Gajewska, Manasse and McCormack detailed problems in the protocol with recommendations for improvement.

=== User interface issues ===
The lack of design guidelines in X has resulted in several vastly different interfaces, and in applications that have not always worked well together. The [[Inter-Client Communication Conventions Manual]] (ICCCM), a specification for client interoperability, has a reputation as being difficult to implement correctly. Further standards efforts such as [[Motif (widget toolkit)|Motif]] and [[Common Desktop Environment|CDE]] did not alleviate problems. This has frustrated users and programmers.&lt;ref&gt;[http://lists.debian.org/debian-user/1996/11/msg00637.html Re: X is painful] 15 Nov 1996&lt;/ref&gt; Graphics programmers now generally address consistency of application [[look and feel]] and communication by coding to a specific desktop environment or to a specific widget toolkit, which also avoids having to deal directly with the ICCCM.

=== Computer accessibility related issues ===

Systems built upon the X windowing system may have [[computer accessibility|accessibility]] issues that make utilization of a computer difficult for disabled users, including [[right click]], [[double click]], [[middle click]], [[mouseover]], and [[focus stealing]]. Some X11 clients deal with accessibility issues better than others, so those with accessibility problems are not locked out of using X11. However there is no accessibility standard or accessibility guidelines for X11. Within the X11 standards process there is no working group on accessibility, so the known ongoing accessibility problems are probably going to persist into the future.

=== Network ===
[[File:X11 ssh tunnelling.png|right|250px|thumb|Example of tunnelling an X11 application over SSH]]

An X client cannot generally be detached from one server and reattached to another unless its code specifically provides for it ([[emacs]] is one of the few common programs with this ability).  By extension, moving an entire session from one X server to another is generally not possible. However, approaches like [[Virtual Network Computing]] (VNC), [[NX technology|NX]] and [[Xpra]] allow a virtual session to be reached from different X servers (in a manner similar to [[GNU Screen]] in relation to terminals), and other applications and toolkits provide related facilities.&lt;ref&gt;[http://icie.cs.byu.edu/cs656/Papers/Gettys.pdf SNAP Computing and the X Window System]  2005 (section 4.6, the [[xmove]] program)&lt;/ref&gt;
Workarounds like [[x11vnc]] (''VNC :0 viewers'') and NX (nxagent's shadow mode) also exist to make the current X-server screen available via VNC and NX respectively. This ability allows the user interface (mouse, keyboard, monitor) of a running application to be switched from one location to another without stopping and restarting the application. This can be important in some applications, such as process monitoring and control.

Network traffic between an X server and remote X clients is not encrypted by default. An attacker with a [[packet sniffer]] can intercept it, making it possible to view anything displayed to or sent from the user's screen. The most common way to encrypt X traffic is to establish a [[Secure Shell]] (SSH) tunnel for communication.

When using X across a network, bandwidth limitations can impede the use of bandwidth-intensive applications.  Even a relatively small 640x480x24bit, 30fps video stream, if uncompressed, can easily outstrip the 100Mbit networking commonly in the consumer market in 2010, and is not itself a problem with X.  However, early versions of X would suffer even when not using the local network for such applications, due to the network-centric protocol which would still utilize an internal network model within the computer, via localhost or unix sockets.  In contrast, modern versions of X generally have extensions allowing local display of a local program's graphics to be optimized to bypass the network model, for performant use of full-screen video, rendered 3D applications, and other such applications.

=== Clientâserver separation ===

X's design requires the clients and server to operate separately, and device independence and the separation of client and server incur overhead. Most of the overhead comes from network [[round-trip delay time]] between client and server ([[latency (engineering)|latency]]) rather than from the protocol itself: the best solutions to performance issues depend on efficient application design.&lt;ref&gt;[http://keithp.com/~keithp/talks/lbxpost/paper.html An LBX Postmortem]  2001-1-24&lt;/ref&gt; A common criticism of X is that its network features result in excessive complexity and decreased performance if only used locally.

Modern X implementations use [[Unix domain socket]]s for efficient connections on the same host. Additionally [[shared memory]] (via the [[MIT-SHM]] extension) can be employed for faster clientâserver communication.&lt;ref&gt;[http://www.xfree86.org/current/mit-shm.html The XFree86 documentation of the MIT-SHM extension] 2009-05-14&lt;/ref&gt; However, the programmer must still explicitly activate and use the shared memory extension.  It is also necessary to provide fallback paths in order to stay compatible with older implementations, and in order to communicate with non-local X servers.

== Competitors ==

Some people have attempted writing alternatives to and replacements for X. Historical alternatives include [[Sun Microsystems|Sun]]'s [[NeWS]], which failed in the market, and [[NeXT]]'s [[Display PostScript]], both [[PostScript]]-based systems supporting user-definable display-side procedures, which X lacked. Mac OS X, [[iOS (Apple)|iOS]], and [[Android (operating system)|Android]] are the main Unix-like systems not using X for graphics.

When [[Apple Inc.]] bought NeXT, and used [[NeXTSTEP]] to construct [[Mac OS X]], they replaced Display PostScript with [[Quartz (graphics layer)|Quartz]].  [[Mike Paquette]], one of the authors of Quartz, explained why Apple did not move from Display PostScript to X, and chose instead to develop its own window server, by saying that once Apple added support for all the features it wanted to include into X11, it would not bear much resemblance to X11 nor be compatible with other servers anyway.&lt;ref&gt;[http://developers.slashdot.org/comments.pl?sid=75257&amp;cid=6734612 Why Apple didn't use X for the window system] August 19, 2007&lt;/ref&gt;

[[Wayland (display server protocol)|Wayland display server]], hosted by [[freedesktop.org]] and developed by several X.Org developers, both addresses criticisms of X by replacing it completely and works directly with the hardware via DRI.  It is planned for Wayland to eventually replace X in [[Ubuntu (operating system)|Ubuntu]]&lt;ref&gt;{{cite web | url = http://www.markshuttleworth.com/archives/551 | title = Unity on Wayland | author = Mark Shuttleworth | authorlink = Mark Shuttleworth | date=4 November 2010| accessdate  = 5 November 2010}}&lt;/ref&gt; and [[Fedora (operating system)|Fedora]],&lt;ref&gt;{{cite web | url = http://lists.fedoraproject.org/pipermail/devel/2010-November/145273.html | author = Adam Jackson (ajax) | date = 2010-11-09 | title = Ubuntu moving towards Wayland }}&lt;/ref&gt; the two most popular Linux distributions.&lt;ref&gt;{{cite web|url = http://distrowatch.com/dwres.php?resource=major|title = Top Ten Distributions|accessdate = 2010-12-30}}&lt;/ref&gt; Wayland handles backward compatibility with X by optionally running an X.org server as a client, which can be rootless (having one Wayland window per X client).&lt;ref&gt;
{{cite web
 |url=http://lists.freedesktop.org/archives/wayland-devel/2010-November/000292.html
 |author=Darxus
 |title=&quot;hosted&quot; patch for nouveau - X under wayland
 |date=27 November 2010
 |quote=It's possible to run X.org as a client of wayland, rootless or not, if
you have an Intel video card
}}
&lt;/ref&gt;

Other attempts to address criticisms of X by replacing it completely include Berlin/[[Fresco (computing)|Fresco]] and the [[Y Window System]]. These alternatives have seen negligible take-up and have been abandoned by their developers; commentators widely doubt the viability of any replacement that does not preserve backward compatibility with X.

Other competitors attempt to avoid the overhead of X by working directly with the hardware. Such projects include [[DirectFB]]. The [[Direct Rendering Infrastructure]] (DRI), which aims to provide a reliable kernel-level interface to the [[framebuffer]], may make these efforts redundant.&lt;ref&gt;[http://fbdri.sourceforge.net DRI for framebuffer consoles] December 15, 2009&lt;/ref&gt;

Other ways to achieve network transparency for graphical services include:
* the [http://networkimprov.net/airwrx/awscene.html SVG Terminal], a protocol to update [[Scalable Vector Graphics]] (SVG) content in a browser in near-real-time
* [[Virtual Network Computing]] (VNC), a very low-level system which sends compressed bitmaps across the network; the Unix implementation includes an X server
* [[Citrix XenApp]], an X-like product for Microsoft Windows
* [[Tarantella, Inc.|Tarantella]], which provides a Java client for use in web browsers
* RAWT, IBM's Java-only [http://web.archive.org/web/20070311164916/http://www-03.ibm.com/servers/eserver/zseries/software/java/rawt.html Remote AWT], which implements a Java &quot;server&quot; and simple hooks for any remote Java client.

[[MicroXwin]] is not a full-fledged replacement for X but maintains binary compatibility with standard X clients while providing better performance and significantly lower memory overhead by a different architecture of design that directly implements the system as a kernel module.&lt;ref&gt;[http://www.microxwin.com/OMAP1710benchmark.doc MicroXwin Performance on OMAP1710] Retrieved on 2009-03-24.&lt;/ref&gt; The kernel module is proprietary while the user space libraries, libX11 (counterpart of [[Xlib]]) and libXext, are available under [[BSD licenses|BSD]] style license.

== History ==
=== Predecessors ===

Several bitmap display systems preceded X. From [[Xerox]] came the [[Xerox Alto|Alto]] (1973) and the [[Xerox Star|Star]] (1981). From [[Apollo Computer]] came Display Manager (1981). From [[Apple Inc.|Apple]] came the [[Apple Lisa|Lisa]] (1983) and the [[Macintosh]] (1984). The [[Unix]] world had the [[Andrew Project]] (1982) and [[Rob Pike]]'s [[Blit (computer terminal)|Blit]] terminal (1982).

Carnegie-Mellon University produced a remote-access application called Alto Terminal, that displayed overlapping windows on the Xerox Alto, and made remote hosts (typically DEC VAX systems running Unix) responsible for handling window-exposure events and refreshing window contents as necessary.

X derives its name as a successor to a pre-1983 window system called [[W Window System|W]] (the letter preceding X in the [[English alphabet]]). W ran under the [[V (operating system)|V operating system]]. W used a network protocol supporting terminal and graphics windows, the server maintaining display lists.

=== Introduction ===

X was introduced to the [[MIT]] [[Project Athena]] community in the following email&lt;ref&gt;http://www.talisman.org/x-debut.shtml&lt;/ref&gt; in June 1984:

&lt;blockquote&gt;&lt;pre&gt;
From: rws@mit-bold (Robert W. Scheifler)
To: window@athena
Subject: window system X
Date: 19 Jun 1984 0907-EDT (Tuesday)

I've spent the last couple weeks writing a window
system for the VS100. I stole a fair amount of code
from W, surrounded it with an asynchronous rather
than a synchronous interface, and called it X. Overall
performance appears to be about twice that of W. The
code seems fairly solid at this point, although there are
still some deficiencies to be fixed up. 

We at LCS have stopped using W, and are now
actively building applications on X. Anyone else using
W should seriously consider switching. This is not the
ultimate window system, but I believe it is a good
starting point for experimentation. Right at the moment
there is a CLU (and an Argus) interface to X; a C
interface is in the works. The three existing
applications are a text editor (TED), an Argus I/O
interface, and a primitive window manager. There is
no documentation yet; anyone crazy enough to
volunteer? I may get around to it eventually. 

Anyone interested in seeing a demo can drop by
NE43-531, although you may want to call 3-1945
first. Anyone who wants the code can come by with a
tape. Anyone interested in hacking deficiencies, feel
free to get in touch.
&lt;/pre&gt;&lt;/blockquote&gt;

=== Origin and early development ===

The original idea of X emerged at MIT in 1984 as a collaboration between [[Jim Gettys]] (of [[Project Athena]]) and [[Bob Scheifler]] (of the [[MIT Laboratory for Computer Science]]). Scheifler needed a usable display environment for debugging the Argus system. [[Project Athena]] (a joint project between [[Digital Equipment Corporation]] (DEC), MIT and [[IBM]] to provide easy access to computing resources for all students) needed a platform-independent graphics system to link together its heterogeneous multiple-vendor systems; the window system then under development in [[Carnegie Mellon University]]'s [[Andrew Project]] did not make licenses available, and no alternatives existed.

The project solved this by creating a protocol that could both run local applications and call on remote resources. In mid-1983 an initial port of W to Unix ran at one-fifth of its  speed under V; in May 1984, Scheifler replaced the [[Synchronization (computer science)|synchronous]] [[protocol (computing)|protocol]] of W with an [[asynchronous]] protocol and the display lists with immediate mode graphics to make X version 1. X became the first windowing system environment to offer true hardware independence and vendor independence.

Scheifler, Gettys and [[Ron Newman (computer programmer)|Ron Newman]] set to work and X progressed rapidly. They released Version 6 in January 1985. DEC, then preparing to release its first [[Ultrix]] workstation, judged X the only windowing system likely to become available in time. DEC engineers ported X6 to DEC's QVSS display on [[MicroVAX]].

In the second quarter of 1985, X acquired [[X11 color names|color]] support to function in the DEC [[VAXstation]]-II/GPX, forming what became version 9.

A group at [[Brown University]] ported version 9 to the [[IBM]] [[RT/PC]], but problems with reading unaligned data on the RT forced an incompatible protocol change, leading to version 10 in late 1985.  By 1986, outside organizations had began asking for X. X10R2 was released in January 1986, then X10R3 in February 1986. Although MIT had licensed X6 to some outside groups for a fee, it decided at this time to license X10R3 and future versions under what became known as the [[MIT License]], intending to popularize X further and, in return, hoping that many more applications would become available. X10R3 became the first version to achieve wide deployment, with both DEC and [[Hewlett-Packard]] releasing products based on it. Other groups ported X10 to [[Apollo Computer|Apollo]] and to [[Sun Microsystems|Sun]] workstations and even to the IBM [[PC/AT]]. Demonstrations of the first commercial application for X (a mechanical computer-aided engineering system from Cognition Inc. that ran on VAXes and displayed on PCs running an X server) took place at the Autofact trade show at that time. The last version of X10, X10R4, appeared in December 1986.

Attempts were made to enable X servers as real-time collaboration devices, much as [[Virtual Network Computing]] (VNC) would later allow a desktop to be shared. One such early effort was Philip J. Gust's [[SharedX]] tool.

Although X10 offered interesting and powerful functionality, it had become obvious that the X protocol could use a more hardware-neutral redesign before it became too widely deployed, but MIT alone would not have the resources available for such a complete redesign. As it happened, DEC's [[Western Software Laboratory]] found itself between projects with an experienced team. [[Smokey Wallace]] of DEC WSL and Jim Gettys proposed that DEC WSL build X11 and make it freely available under the same terms as X9 and X10. This process started in May 1986, with the protocol finalized in August. Alpha testing of the software started in February 1987, beta-testing in May; the release of X11 finally occurred on September 15, 1987.

The X11 protocol design, led by Scheifler, was extensively discussed on open mailing lists on the nascent [[Internet]] that were bridged to USENET newsgroups. Gettys moved to California to help lead the X11 development work at WSL from DEC's Systems Research Center, where Phil Karlton and Susan Angebrandt led the X11 sample server design and implementation. X therefore represents one of the first very large-scale distributed [[free and open source software]] projects.

=== The MIT X Consortium and the X Consortium, Inc. ===

In 1987, with the success of X11 becoming apparent, MIT wished to relinquish the stewardship of X, but at a June 1987 meeting with nine vendors, the vendors told MIT that they believed in the need for a neutral party to keep X from fragmenting in the marketplace. In January 1988, the ''MIT X Consortium'' formed as a non-profit vendor group, with Scheifler as director, to direct the future development of X in a neutral atmosphere inclusive of commercial and educational interests. Jim Fulton joined in January 1988 and [[Keith Packard]] in March 1988 as senior [[programmers|developers]], with Jim focusing on [[Xlib]], [[Computer font|fonts]], window managers, and utilities; and Keith re-implementing the server. Donna Converse, [[Chris D. Peterson]], and Stephen Gildea joined later that year, focusing on toolkits and widget sets, working closely with Ralph Swick of MIT Project Athena. The MIT X Consortium produced several significant revisions to X11, the first (Release 2  - X11R2) in February 1988. Jay Hersh joined the staff in January 1991 to work on the [[PHIGS|PEX]] and X113D functionality. He was followed soon after by Ralph Mor (who also worked on PEX) and Dave Sternlicht. In 1993, as the MIT X Consortium prepared to depart from MIT, the staff were joined by R. Gary Cutbill, Kaleb Keithley, and David Wiggins.&lt;ref&gt;Robert W. Scheifler and James Gettys: X Window System: Core and extension protocols: X version 11, releases 6 and 6.1, Digital Press 1996, ISBN 1-55558-148-X&lt;/ref&gt;
[[File:DECwindows-openvms-v7.3-1.png|thumb|200px|DECwindows CDE on [[OpenVMS]] 7.3-1]]

In 1993, the X Consortium, Inc. (a non-profit corporation) formed as the successor to the MIT X Consortium. It released X11R6 on May 16, 1994. In 1995 it took on the development of the [[Motif (widget toolkit)|Motif]] toolkit and of the [[Common Desktop Environment]] for Unix systems. The X Consortium dissolved at the end of 1996, producing a final revision, X11R6.3, and a legacy of increasing commercial influence in the development.&lt;ref&gt;[http://www.advogato.org/article/844.html Financing Volunteer Free Software Projects] 10 Jun 2005&lt;/ref&gt;&lt;ref&gt;[http://www.usenix.org/publications/library/proceedings/usenix2000/invitedtalks/gettys_html/ Lessons Learned about Open Source]  2000&lt;/ref&gt;

=== The Open Group ===

In January 1997, the X Consortium passed stewardship of X to [[The Open Group]], a vendor group formed in early 1996 by the merger of the [[Open Software Foundation]] and [[X/Open]].

The Open Group released X11R6.4 in early 1998. Controversially, X11R6.4 departed from the traditional liberal licensing terms, as the Open Group sought to assure funding for the development of X.&lt;ref&gt;[http://old.lwn.net/lwn/1998/0409/xstate.html X statement] 02 Apr 1998&lt;/ref&gt; The new terms would have prevented its adoption by many projects (such as [[XFree86]]) and even by some commercial vendors. After XFree86 seemed poised to [[fork (software)|fork]], the Open Group relicensed X11R6.4 under the traditional license in September 1998.&lt;ref&gt;[http://cbbrowne.com/info/x11r6.4.html X11R6.4 Sample Implementation Changes and Concerns]{{Dead link|date=November 2009}}&lt;/ref&gt; The Open Group's last release came as X11R6.4 patch 3.

=== X.Org and XFree86 ===

[[XFree86]] originated in 1992 from the [[X386]] server for [[IBM PC compatible]]s included with X11R5 in 1991, written by Thomas Roell and Mark W. Snitily and donated to the MIT X Consortium by Snitily Graphics Consulting Services (SGCS). XFree86 evolved over time from just one port of X to the leading and most popular implementation and the ''de facto'' standard of X's development.&lt;ref name=&quot;xfree86.org&quot;/&gt;

In May 1999, the Open Group formed [[X.Org]]. X.Org supervised the release of versions X11R6.5.1 onward. X development at this time had become moribund;&lt;ref&gt;[http://www.computerworld.com/softwaretopics/software/appdev/story/0,10801,67861,00.html Q&amp;A: The X Factor] February 04, 2002&lt;/ref&gt; most technical innovation since the X Consortium had dissolved had taken place in the XFree86 project.&lt;ref&gt;[http://keithp.com/~keithp/talks/Xarchitecture/Talk.htm The Evolution of the X Server Architecture] 1999&lt;/ref&gt; In 1999, the XFree86 team joined X.Org as an honorary (non-paying) member,&lt;ref&gt;[http://xfree86.org/pipermail/forum/2003-March/000418.html A Call For Open Governance Of X Development] 23 Mar 2003&lt;/ref&gt; encouraged by various hardware companies&lt;ref&gt;[http://slashdot.org/articles/99/12/01/1342251.shtml  XFree86 joins X.Org as Honorary Member] Dec 01, 1999&lt;/ref&gt; interested in using XFree86 with Linux and in its status as the most popular version of X.

By 2003, while the popularity of Linux (and hence the installed base of X) surged, X.Org remained inactive,&lt;ref&gt;[http://xfree86.org/pipermail/forum/2003-April/003127.html Another teleconference partial edited transcript] 13 Apr 2003&lt;/ref&gt; and active development took place largely within  XFree86. However, considerable dissent developed within XFree86. The XFree86 project suffered from a perception of a far too [[The Cathedral and the Bazaar|cathedral]]-like development model; developers could not get [[Concurrent Versions System|CVS]] commit access&lt;ref&gt;[http://www.xfree86.org/pipermail/forum/2003-March/002018.html Keith Packard issue] 20 Mar 2003&lt;/ref&gt;&lt;ref&gt;[http://cygwin.com/ml/cygwin-xfree/2003-10/msg00328.html Cygwin/XFree86 - No longer associated with XFree86.org] 27 Oct 2003&lt;/ref&gt; and vendors had to maintain extensive [[patch (computing)|patch]] sets.&lt;ref&gt;[http://www.advogato.org/person/mharris/diary.html?start=5 On XFree86 development] 9 Jan 2003&lt;/ref&gt; In March 2003, the XFree86 organization expelled Keith Packard, who had joined XFree86 after the end of the original MIT X Consortium, with considerable ill feeling.&lt;ref&gt;[http://www.xfree86.org/pipermail/forum/2003-March/001997.html Invitation for public discussion about the future of X] 20 Mar 2003&lt;/ref&gt;&lt;ref&gt;[http://www.xfree86.org/pipermail/forum/2003-March/002165.html A Call For Open Governance Of X Development] 21 Mar 2003&lt;/ref&gt;&lt;ref&gt;[http://www.xfree86.org/pipermail/forum/2003-April/003016.html Notes from a teleconference held 2003-3-27] 03 Apr 2003&lt;/ref&gt;

X.Org and XFree86 began discussing a reorganisation suited to properly nurturing the development of X.&lt;ref&gt;[http://www.xfree86.org/pipermail/forum/2003-March/000554.html A Call For Open Governance Of X Development] 24 Mar 2003&lt;/ref&gt;&lt;ref&gt;[http://www.xfree86.org/pipermail/forum/2003-March/002415.html A Call For Open Governance Of X Development] 23 Mar 2003&lt;/ref&gt;&lt;ref&gt;[http://xfree86.org/pipermail/forum/2003-April/003144.html Discussing issues] 14 Apr 2003&lt;/ref&gt; Jim Gettys had been pushing strongly for an open development model since at least 2000.&lt;ref&gt;[http://www.usenix.org/publications/library/proceedings/usenix2000/invitedtalks/gettys_html/Talk.htm Lessons Learned about Open Source] 2000&lt;/ref&gt; Gettys, Packard and several others began discussing in detail the requirements for the effective governance of X with open development.

Finally, in an echo of the X11R6.4 licensing dispute, XFree86 released version 4.4 in February 2004 under a more restrictive license which many projects relying on X found unacceptable.&lt;ref&gt;[http://yro.slashdot.org/article.pl?sid=04/02/18/131223  XFree86 4.4: List of Rejecting Distributors Grows] Feb 18, 2004&lt;/ref&gt; The added clause to the license was based on the original [[BSD license]]'s advertising clause, which was viewed by the [[Free Software Foundation]] and [[Debian]] as incompatible with the [[GNU General Public License]].&lt;ref name=&quot;dwheeler.com&quot;&gt;[http://www.dwheeler.com/essays/gpl-compatible.html#xfree86 Appendix A: The Cautionary Tale of XFree86] June 5, 2002&lt;/ref&gt; Other groups saw it as against the spirit of the original X. [[Theo de Raadt]] of [[OpenBSD]], for instance, threatened to [[fork (software)|fork]] XFree86 citing license concerns.&lt;ref name=&quot;openbsd&quot;&gt;{{cite web |url= http://marc.info/?l=openbsd-misc&amp;m=107696705911864&amp;w=2 |title=openbsd-misc Mailing List: XFree86 license |author=Theo de Raadt |date=February 16, 2004|archiveurl=http://www.webcitation.org/5lsZKRQmU |archivedate=December 8, 2009 |publisher=[[MARC (archive)|MARC]] |accessdate=December 8, 2009}}&lt;/ref&gt; The license issue, combined with the difficulties in getting changes in, left many feeling the time was ripe for a fork.&lt;ref&gt;[http://www.osnews.com/story.php/6157/X-Marks-the-Spot-Looking-back-at-X11-Developments-of-Past-Year/ X Marks the Spot: Looking back at X11 Developments of Past Year] Feb 25, 2004&lt;/ref&gt;

=== The X.Org Foundation ===

In early 2004, various people from X.Org and freedesktop.org formed the [[X.Org Foundation]], and the Open Group gave it  control of the &lt;tt&gt;x.org&lt;/tt&gt; [[domain name]]. This marked a radical change in the governance of X. Whereas the stewards of X since 1988 (including the prior X.Org) had been vendor organizations, the Foundation was led by software developers and used community development based on the [[The Cathedral and the Bazaar|bazaar]] model, which relies on outside involvement. Membership was opened to individuals, with corporate membership being in the form of sponsorship. Several major corporations such as [[Hewlett-Packard]] currently support the X.Org Foundation.

The Foundation takes an oversight role over X development: technical decisions are made on their merits by achieving rough consensus among community members.  Technical decisions are not made by the board of directors; in this sense, it is strongly modelled on the technically non-interventionist [[GNOME Foundation]].  The Foundation employs no developers.

The Foundation released X11R6.7, the [[X.Org Server]], in April 2004, based on XFree86 4.4RC2 with X11R6.6 changes merged. Gettys and Packard had taken the last version of XFree86 under the old license and, by making a point of an open development model and retaining GPL compatibility, brought many of the old XFree86 developers on board.&lt;ref name=&quot;dwheeler.com&quot;/&gt;

X11R6.8 came out in September 2004. It added significant new features, including preliminary support for translucent windows and other sophisticated visual effects, screen magnifiers and thumbnailers, and facilities to integrate with 3D immersive display systems such as Sun's [[Project Looking Glass]] and the [[Croquet project]]. External applications called ''[[compositing window manager]]s'' provide policy for the visual appearance.

On December 21, 2005,&lt;ref&gt;[http://xorg.freedesktop.org/wiki/Other/Press/X11R6970Released?action=show&amp;redirect=PressReleases%2FX11R6970Released X11R6.9 and X11R7.0 Officially Released] December 21, 2005&lt;/ref&gt; X.Org released X11R6.9, the monolithic [[source code|source]] tree for legacy users, and X11R7.0, the same source code separated into independent modules, each maintainable in separate projects.&lt;ref&gt;[http://wiki.x.org/wiki/ModularizationProposal Modularization Proposal] 2005-03-31&lt;/ref&gt; The Foundation released X11R7.1 on May 22, 2006, about four months after 7.0, with considerable feature improvements.&lt;ref&gt;[http://xorg.freedesktop.org/wiki/ChangesForX11R71 Proposed Changes for X11R7.1] 2006-04-21&lt;/ref&gt;

On the other side, XFree86 is still being developed at a very slow pace, and version 4.8.0 was released on 15 December 2008.&lt;ref&gt;[http://www.xfree86.org/releases/rel480.html XFree86 4.8.0 release]&lt;/ref&gt;

== Future directions ==

The X.Org Foundation and freedesktop.org managed the main line of X development and they intend to provide more access to ubiquitous 3D hardware features. For sufficiently capable combinations of hardware and operating systems, X.Org plans to access the video hardware only via the [[Direct Rendering Infrastructure]] (DRI), using the 3D hardware.  The DRI first appeared in XFree86 version 4.0 and became standard in X11R6.7 and later and this work is ongoing.&lt;ref&gt;[http://keithp.com/~keithp/talks/xserver_ols2004/ Getting X Off The Hardware] July, 2004&lt;/ref&gt;

== Nomenclature ==

People in the computer trade commonly shorten the phrase &quot;X Window System&quot; to &quot;X Window&quot;, &quot;X11&quot; (for version 11, used since 1987) or simply to &quot;X&quot;.&lt;ref&gt;[http://ftp.x.org/pub/X11R6.8.2/doc/X.7.html X - a portable, network-transparent window system] February 2005&lt;/ref&gt; The term &quot;X-Windows&quot; (in the manner of &quot;Microsoft Windows&quot;) is not officially endorsed, though it has been in common use since early in the history of X and has been used deliberately for provocative effect, for example in the ''[[UNIX-HATERS Handbook]]''.&lt;ref name=&quot;The X-Windows Disaster&quot;/&gt;

== Release history ==
{{See also|XFree86#Release history}}

{|class=&quot;wikitable&quot;
|-
!Version
!style=&quot;width:10em&quot;|Release date
!Most important changes
|-
|X1
|June 1984
|First use of the name &quot;X&quot;; fundamental changes distinguishing the product from [[W Window System|W]].
|-
|X6
|January 1985
|First version licensed to a handful of outside companies.
|-
|X9
|September 1985
|Color. First release under [[MIT License]].
|-
|X10
|late 1985
|IBM RT/PC, AT (running [[DOS]]), and others
|-
|X10R2
|January 1986
|
|-
|X10R3
|February 1986
|First freely redistributable X release. Earlier releases required a BSD source license to cover code changes to init/getty to support login. [[Ultrix Window Manager|uwm]] made standard window manager.
|-
|X10R4
|December 1986
|Last version of X10.
|-
|X11
|September 15, 1987
|First release of the current protocol.
|-
|X11R2
|February 1988
|First X Consortium release.&lt;ref&gt;[http://www.linuxdocs.org/HOWTOs/XWindow-User-HOWTO-2.html The X Window System: History and Architecture] 1 September 1999&lt;/ref&gt;
|-
|X11R3
|October 25, 1988
|[[X Display Manager (implementation)|XDM]]
|-
|X11R4
|December 22, 1989
|[[XDMCP]], [[twm]] brought in as standard window manager, application improvements, [[Shape extension]], new fonts.
|-
|X11R5
|September 5, 1991
|[[PHIGS|PEX]], Xcms ([[color management]]), [[X Font Server|font server]], [[XFree86|X386]], [[X video extension]]
|-
|X11R6
|May 16, 1994
|[[ICCCM]] v2.0; Inter-Client Exchange; X Session Management; X Synchronization extension; [[X Image Extension|X Image extension]]; XTEST extension; X Input; X Big Requests; XC-MISC; XFree86 changes.
|-
|X11R6.1
|March 14, 1996
|X Double Buffer extension; [[X keyboard extension]]; X Record extension.
|-
|X11R6.2&lt;br /&gt;X11R6.3 (Broadway)
|December 23, 1996
|Web functionality, [[Low Bandwidth X|LBX]]. Last X Consortium release. X11R6.2 is the tag for a subset of X11R6.3 with the only new features over R6.1 being XPrint and the Xlib implementation of vertical writing and user-defined character support.&lt;ref&gt;[http://www.xfree86.org/3.3.6/RELNOTES1.html XFree86 and X11R6.3] December 1999&lt;/ref&gt;
|-
|X11R6.4
|March 31, 1998
|[[Xinerama]].&lt;ref&gt;[http://www.opengroup.org/tech/desktop/Press_Releases/x11r6.4ga.htm The Open Group Announces Internet-Ready X Window System X11R6.4] March 31, 1998&lt;/ref&gt;
|-
|X11R6.5
|
|Internal X.org release; not made publicly available.
|-
|X11R6.5.1
|August 20, 2000
|
|-
|X11R6.6
|April 4, 2001
|Bug fixes, XFree86 changes.
|-
|X11R6.7.0
|April 6, 2004
|First X.Org Foundation release, incorporating XFree86 4.4rc2. Full end-user distribution. Removal of [[X Image Extension|XIE]], [[PHIGS|PEX]] and libxml2.&lt;ref&gt;[http://lwn.net/Articles/79302/ X.Org Foundation releases X Window System X11R6.7] April 7, 2004&lt;/ref&gt;
|-
|X11R6.8.0
|September 8, 2004
|Window translucency, XDamage, Distributed Multihead X, [[XFixes]], Composite.[http://freedesktop.org/wiki/Software/XEvIE XEvIE]
|-
|X11R6.8.1
|September 17, 2004
|Security fix in [[XPM (image format)|libxpm]].
|-
|X11R6.8.2
|February 10, 2005
|Bug fixes, driver updates.
|-
|X11R6.9&lt;br /&gt;X11R7.0
|December 21, 2005
|[[EXA]], major source [[code refactoring]].{{Citation needed|date=June 2008}}&lt;!-- wiki doesn't mention refactoring, major or otherwise --&gt;&lt;ref&gt;[http://xorg.freedesktop.org/wiki/ChangesSince68 Changes Since R6.8] 2005-10-21&lt;/ref&gt; From the same source-code base, the modular [[GNU build system|autotooled]] version became 7.0 and the monolithic [[imake]] version was frozen at 6.9.
|-
|X11R7.1
|May 22, 2006
|EXA enhancements, [[KDrive]] integrated, [[AIGLX]], OS and platform support enhancements.&lt;ref&gt;[http://ftp.x.org/pub/X11R7.1/doc/RELNOTES.html Release Notes for X11R7.1] 22 May 2006&lt;/ref&gt;
|-
|X11R7.2
|February 15, 2007
|Removal of [[LBX]] and the built-in keyboard driver, X-ACE, [[XCB]], autoconfig improvements, cleanups.&lt;ref&gt;[http://xorg.freedesktop.org/wiki/Releases/7.2?action=show&amp;redirect=ChangesForX11R72 The X.Org Foundation released 7.2.0 (aka X11R7.2)] February 15th, 2007&lt;/ref&gt;
|-
|X11R7.3
|September 6, 2007
|[[X.Org Server|XServer 1.4]], Input [[hotplug]], output hotplug ([[RandR]] 1.2), [[DTrace]] probes, [[Peripheral Component Interconnect|PCI]] domain support.&lt;ref&gt;[http://wiki.x.org/wiki/Server14Branch X server version 1.4 release plans]. Retrieved 2007-08-25.&lt;/ref&gt;
|-
|X11R7.4
|September 23, 2008
|[[X.Org Server|XServer 1.5.1]], XACE, PCI-rework, EXA speed-ups, _X_EXPORT, [[GLX]] 1.4, faster startup and shutdown.&lt;ref&gt;{{cite web |url=http://www.x.org/wiki/Releases/7.4 |title=Foundation Releases X7.4 |publisher=X.org |date= |accessdate=2009-11-10}}&lt;/ref&gt;
|-
|X11R7.5
|October 26, 2009 &lt;ref&gt;{{cite web|url=http://www.x.org/wiki/Other/Press/X11R75Released |title=7.5 release announcement |publisher=X.org |date= |accessdate=2009-11-10}}&lt;/ref&gt;
|[[X.Org Server|XServer 1.7]], Xi 2, XGE, E-[[EDID]] support, [[RandR]] 1.3, [[Multi-Pointer X|MPX]], predictable pointer acceleration, [[Direct Rendering Infrastructure|DRI2]] memory manager, SELinux security module, further removal of obsolete libraries and extensions.&lt;ref&gt;{{cite web |url=http://www.x.org/wiki/Releases/7.5 |title=Wiki - 7.5 release plans |publisher=X.org |date= |accessdate=2009-11-10}}&lt;/ref&gt;
|-
|X11R7.6
|December 20, 2010 &lt;ref&gt;{{cite web|url=http://www.x.org/wiki/Other/Press/X11R76Released |title=7.6 release announcement |publisher=X.org |date=December 20, 2010 |accessdate=2010-12-21}}&lt;/ref&gt;
|X Server 1.9, [[XCB]] requirement.&lt;ref&gt;{{cite web|url=http://lists.x.org/archives/xorg-devel/2009-October/002995.html |title=Thinking towards 7.6 katamari, including xcb |publisher=Lists.x.org |date= |accessdate=2009-11-10}}&lt;/ref&gt; &lt;ref&gt;{{cite web |url=http://www.x.org/wiki/Releases/7.6 |title=Wiki - 7.6 release plans |publisher=X.org |date= |accessdate=2010-12-21}}&lt;/ref&gt;
|}

=== Forthcoming releases ===

{|class=&quot;wikitable&quot;
|-
!Version
!style=&quot;width:10em&quot;|Release date
!Most important planned changes
|-
|X11R7.7
|2011&lt;ref&gt;{{cite web|url=http://www.x.org/wiki/Releases/7.7 |title=Releases/7.7 |publisher=X.org |accessdate=2010-12-21}}&lt;/ref&gt;
|Xorg server 1.10 changes; RandR extension 1.4; Sync extension 1.3.
|-
|X11R7.8
|2012
|Xi 3; [[X keyboard extension|XKB]] 2.
|}

== See also ==
{{Portal|Free software}}

* [[History of the graphical user interface]]
* [[X11 color names]]
* [[Xgl]]
* [[General Graphics Interface]]
* [[VirtualGL]]
* [[rio (windowing system)|rio]] - the windowing system for [[Plan 9 from Bell Labs|Plan 9]]
* [[List of Unix programs]]
* [[DESQview/X]]
* [[Cairo (graphics)]]

== Notes ==
{{Reflist|colwidth=30em}}

==References==

{{Refbegin|2}}
* Hania Gajewska, Mark S. Manasse and Joel McCormack, [http://www.std.org/~msm/common/protocol.pdf Why X Is Not Our Ideal Window System] ([[Portable Document Format|PDF]]), ''Software&amp;nbsp;â Practice &amp; Experience'' vol 20, issue S2  (October 1990)
* Linda Mui and Eric Pearce, ''X Window System Volume 8: X Window System Administrator's Guide for X11 Release 4 and Release 5, 3rd edition'' (O'Reilly and Associates, July 1993; softcover ISBN 0-937175-83-8)
* [http://www.art.net/~hopkins/Don/unix-haters/x-windows/disaster.html The X-Windows Disaster] (''[[UNIX-HATERS Handbook]]'')
* Robert W. Scheifler and James Gettys: ''X Window System: Core and extension protocols: X version 11, releases 6 and 6.1'', Digital Press 1996, ISBN 1-55558-148-X
* [http://keithp.com/~keithp/talks/Xarchitecture/Talk.htm The Evolution of the X Server Architecture] ([[Keith Packard]], 1999)
* [http://web.archive.org/web/20060916213448/http://www.cat.org.au/maffew/cat/xfree-dawes.html The means to an X for Linux: an interview with David Dawes from XFree86.org] (Matthew Arnison, CAT TV, June 1999)
* [http://www.usenix.org/publications/library/proceedings/usenix2000/invitedtalks/gettys_html/Talk.htm Lessons Learned about Open Source] ([[Jim Gettys]], [[USENIX]] 2000 talk on the history of X)
* [http://linuxfinances.info/info/xbloat.html On the Thesis that X is Big/Bloated/Obsolete and Should Be Replaced] (Christopher B. Browne)
* [http://web.archive.org/web/20080413140042/http://people.freedesktop.org/~jg/roadmap.html Open Source Desktop Technology Road Map] (Jim Gettys, 9 December 2003)
* [http://www.osnews.com/story.php?news_id=6157 X Marks the Spot: Looking back at X11 Developments of Past Year] (Oscar Boykin, ''OSNews'', 25 February 2004)
* [http://keithp.com/~keithp/talks/xserver_ols2004/ Getting X Off The Hardware] (Keith Packard, July 2004 [[Ottawa Linux Symposium]] talk)
* [http://developers.slashdot.org/comments.pl?sid=75257&amp;cid=6734612 Why Apple didn't use X for the window system] (Mike Paquette, Apple Computer)
* [http://ftp.x.org/pub/X11R6.8.2/doc/X.7.html X Man Page] (Retrieved on 2 February 2007)
* [http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.109.3314&amp;rep=rep1&amp;type=pdf SNAP Computing and the X Window System] (Jim Gettys, 2005)
{{Refend}}

==External links==
{{Wikibooks|Guide to X11}}
* [http://www.x.org/ X.Org Foundation] Official website
* [http://www.linfo.org/x.html The X Window System: A Brief Introduction]
* [http://xwinman.org/ Window managers for X]
* [https://sites.google.com/site/jonsmirl/graphics The State of Linux Graphics] (Jon Smirl, 30 August 2005)
* [http://www.rahul.net/kenton/xsites.html Kenton Lee: Technical X Window System and Motif WWW Sites]
* RFC 1198 - FYI on the X Window System

{{XWinSys}}
{{FLOSS}}
{{Window Managers}}
{{Open Group standards}}

[[Category:X Window System|*]]
[[Category:Application layer protocols]]
[[Category:Application programming interfaces]]
[[Category:Free graphics software]]
[[Category:Free windowing systems]]
[[Category:Freedesktop.org]]
[[Category:Software using the MIT license]]

{{Link FA|ru}}

[[ar:ÙØ¸Ø§Ù Ø§ÙÙØ§ÙØ°Ø© Ø§ÙØ³]]
[[bn:à¦à¦à§à¦¸ à¦à¦à¦¨à§à¦¡à§ à¦¸à¦¿à¦¸à§à¦à§à¦®]]
[[ca:X Window System]]
[[cs:X Window System]]
[[da:X Window System]]
[[de:X Window System]]
[[et:X Window System]]
[[el:X Window System]]
[[es:X Window System]]
[[eo:Fenestra Sistemo X]]
[[fa:Ø³ÛØ³ØªÙ Ù¾ÙØ¬Ø±Ù Ø§ÛÚ©Ø³]]
[[fr:X Window System]]
[[gl:X Window System]]
[[ko:X ìë ìì¤í]]
[[hy:X Window System]]
[[id:X Window System]]
[[is:X-gluggakerfiÃ°]]
[[it:X Window System]]
[[he:X11]]
[[lv:X Window System]]
[[lt:X Window System]]
[[hu:X Window System]]
[[ms:X Window System]]
[[nl:X Window System]]
[[ja:X Window System]]
[[no:Vindussystemet X]]
[[pl:X Window System]]
[[pt:X Window System]]
[[ro:X Window System]]
[[ru:X Window System]]
[[simple:X Window System]]
[[sk:X Window System]]
[[sl:X Window System]]
[[sr:X Window System]]
[[fi:X Window System]]
[[sv:X Window System]]
[[ta:à®à®à¯à®¸à¯ à®à®¾à®³à®° à®à®®à¯à®ªà¯à®ªà¯]]
[[th:à¹à¸­à¹à¸à¸à¹à¸§à¸´à¸à¹à¸à¸§à¸à¸´à¸ªà¹à¸à¹à¸¡]]
[[tr:X Pencere Sistemi]]
[[uk:X Window System]]
[[vi:Há» thá»ng X Window]]
[[zh-yue:X Windowç³»çµ±]]
[[zh:X Windowç³»çµ±]]</rev></revisions></page></pages></query></api>
