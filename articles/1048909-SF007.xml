<?xml version="1.0"?><api><query><pages><page pageid="1048909" ns="0" title="ROOT"><revisions><rev xml:space="preserve">{{For|other uses of &quot;root&quot;|root (disambiguation)}}
{{Infobox software
| name = ROOT
| logo = [[File:Rootdrawing.gif|70px|ROOT logo]]
| screenshot = [[File:2D ROI.jpg|300px|Example ROOT plot showing regions of interest in a 2D distribution]]
| caption = Example ROOT plot showing regions of interest in a 2D distribution
| developer = [[CERN]]
| programming language = [[C++]]
| latest_release_version = 5.30/02
| latest_release_date = September 22, 2011
| operating_system = [[Cross-platform]]
| genre = [[Data analysis]]
| license = [[GNU Lesser General Public License|LGPL]]/[[GNU General Public License|GPL]]
| website = http://root.cern.ch/
}}
'''ROOT''' is an [[Object-oriented programming|object-oriented]] [[computer program|program]] and [[Library (computing)|library]] developed by [[CERN]]. It was originally designed for [[particle physics]] [[data analysis]] and contains several features specific to this field, but it is also used in other applications such as [[astronomy]] and [[data mining]].

== Description ==
CERN maintained a [[CERN Program Library|program library]] written in [[FORTRAN]] for many years; development and maintenance were discontinued in 2003 in favour of ROOT, written in [[C++]].
ROOT development was initiated by RenÃ© Brun and Fons Rademakers in 1994. Some parts are published under the [[GNU Lesser General Public License|LGPL]], and others are based on [[GNU General Public License|GPL]] software and thus are also published under the terms of the GPL. It provides [[platform independent]] access to a computer's graphics subsystem and [[operating system]] using [[Abstraction (computer science)|abstract layers]]. Parts of the abstract platform are: a [[graphical user interface]] and a [[Graphical user interface builder|GUI builder]], container classes, [[Reflection (computer science)|reflection]], a C++ [[Scripting language|script]] and [[command line]] [[Interpreter (computing)|interpreter]] ([[CINT]]), object [[serialization]] and [[Persistence (computer science)|persistence]].

The packages provided by ROOT include those for
* [[histogram]]ming and [[Graph of a function|graphing]] to view and analyze [[Distribution (mathematics)|distributions]] and [[function (mathematics)|functions]],
* [[curve fitting]] (regression analysis) and minimization of [[Functional (mathematics)|functionals]],
* [[statistics]] tools used for [[data analysis]],
* [[matrix (mathematics)|matrix]] algebra,
* [[four-vector]] computations, as used in [[high energy physics]],
* standard [[Function (mathematics)|mathematical functions]],
* [[Polynomial#Classifications|multivariate]] [[data analysis]], e.g. using [[neural networks]],
* image manipulation, used, for instance, to analyze [[astronomical]] pictures,
* access to distributed data (in the context of the [[Grid computing|Grid]]),
* [[distributed computing]], to parallelize [[Data analysis|data analyses]],
* [[Persistence (computer science)|persistence]] and [[serialization]] of objects, which can cope with changes in class definitions of persistent data,
* access to [[databases]],
* [[3D computer graphics|3D]] [[Visualization (graphic)|visualizations]] (geometry)
* creating files in various graphics formats, like [[PostScript]], [[Portable Network Graphics|PNG]], [[Scalable Vector Graphics|SVG]],
* interfacing [[Python (programming language)|Python]] and [[Ruby programming language|Ruby]] code in both directions,
* interfacing [[Monte Carlo method|Monte Carlo]] [[event generator]]s.

A key feature of ROOT is a data container called ''tree'', with its substructures ''branches'' and ''leaves''. A tree can be seen as a sliding window to the raw data, as stored in a file. Data from the next entry in the file can be retrieved by advancing the index in the tree. This avoids memory allocation problems associated with object creation, and allows the tree to act as a lightweight container while handling buffering invisibly.

ROOT is designed for high [[computer performance|computing efficiency]], as it is required to process data from the [[Large Hadron Collider]]'s experiments estimated at several [[petabyte]]s per year. {{As of|2009}} ROOT is mainly used in [[data analysis]] and [[data acquisition]] in [[high energy physics]] experiments, and most {{As of|2009|alt=current}} experimental plots and results in those [[Physics/Subfields|subfields]] are obtained using ROOT.

The inclusion of the [[CINT]] C++ interpreter makes this package very versatile as it can be used in interactive, scripted and compiled modes in a manner similar to commercial products like [[MATLAB]].

Criticisms of ROOT are endless, and include its difficulty for beginners and experts alike, various aspects of its design and implementation,&lt;ref&gt;[http://insectnation.org/howto/problems-with-root The problem with ROOT]&lt;/ref&gt;&lt;ref&gt;[http://www.cernlove.org/blog/2009/10/root-rants-histogram-hierarchy-and-pyroot/ histogram hierarchy and a little PyROOT]&lt;/ref&gt; numerous memory handling errors, non-reproducible calculation results, buffer overflow issues, and its overall performance and feel of that of an amateur, student-written piece of software. From time to time these issues are discussed on the ROOT users mailing list.&lt;ref&gt;[http://root.cern.ch/root/roottalk/roottalk06/0763.html ROOTTALK: 27 July 2006]&lt;/ref&gt;&lt;ref&gt;[http://root.cern.ch/root/roottalk/roottalk06/0782.html ROOTTALK: 28 July 2008]&lt;/ref&gt; Scientists dissatisfied with ROOT typically manage to work around its flaws with experience&lt;ref&gt;[http://zzz.physics.umn.edu/computing/contrib/root/localdoc#recommendations_to_root_users Recommendations to ROOT users]&lt;/ref&gt; due its pervasive nature in particle physics and a lack of any widespread alternative.

== Applications of ROOT ==

Several [[particle physics experiments]] have written software based on ROOT, often in favor of using more generic solutions (e.g. using ROOT containers instead of [[Standard Template Library|STL]]).

* Some of the running particle physics experiments using software based on ROOT
** [[A Large Ion Collider Experiment|ALICE]]
** [[ANTARES (telescope)|Antares]]
** [[ATLAS experiment|ATLAS]]
** [[BaBar]]
** [[CB-ELSA/TAPS]]
** [[CDF]]
** [[Compact Muon Solenoid|CMS]]
** [[COMPASS experiment|COMPASS]]
** [[DZero]]
** [[H1 (particle detector)|H1]]
** [[LHCb]]
** [[MINERÎ½A]]
** [[MINOS]]
** [[NEXT]]
** [http://pen.phys.virginia.edu PEN]
** [[PHENIX]]
** [[PHOBOS experiment|PHOBOS]]
** [[Solenoidal Tracker At RHIC|STAR]]
** [[T2K]]
** [[ZEUS]]
** [[Cryogenic Rare Event Search with Superconducting Thermometers|CRESST]]
** [[OPERA]]

* Future particle physics experiments currently developing software based on ROOT
** [[NOÎ½A]]
** [[Compressed Baryonic Matter experiment|CBM]]
** [[antiProton Annihilation at Darmstadt|PANDA]]
** [[electron positron collider at KEK (japan)|BELLE II]]
** [[Long Baseline Neutrino Experiment (LBNE)]]

* Astroparticle physics projects using ROOT
** [[Alpha Magnetic Spectrometer|AMS]]
** [[Astronomy with a Neutrino Telescope and Abyss environmental RESearch|ANTARES]]
** [[Dark Matter Time Projection Chamber|DMTPC]]
** [[Fermi Gamma-ray Space Telescope|Fermi]]
** [[IceCube Neutrino Detector|ICECUBE]]
** [[H.E.S.S.]]
** [[MAGIC (telescope)|MAGIC]]
** [[Milagro (experiment)]]
** [[Pierre Auger Observatory]]
** [[VERITAS]]
** [[Payload for Antimatter Matter Exploration and Light-nuclei Astrophysics|PAMELA]]
** [[PoGOLite]]

== See also ==
{{Portal|Free software}}
{{wikibooks|ROOT}}
* [[Matplotlib]] - a plotting and analysis system for [[Python (programming language)|Python]]
* [[SciPy]] - a scientific data analysis system for [[Python (programming language)|Python]], based on the [[NumPy]] classes
* [[HippoDraw]] â an alternative C++-based data analysis system
* [[Java Analysis Studio]] â a Java-based AIDA-compliant data analysis system
* [[JHepWork]] â a Java-based data analysis framework based on FreeHEP libraries
* [[R programming language]]
* [[AIDA (computing)]] â open interfaces and formats for particle physics data processing
* [[Physics Analysis Workstation|PAW]]
* [[IGOR Pro]]
* [[Scientific computing]]
* [[OpenDX]]
* [[OpenScientist]]
* [[CERN Program Library]] â legacy program library written in Fortran77, still available but not updated

==References==

{{Reflist}}

==External links==
* [http://root.cern.ch/ The ROOT System Home Page]
* [http://root.cern.ch/root/roottalk/AboutRootTalk.html ROOT users mailing list]
* [http://root.bnl.gov/ The Qt/ROOT System Home Page]
* [http://www-win.gsi.de/go4/ GSI Object Oriented On-line Off-line system], an alternative GUI for ROOT based on QT/ROOT..
* [http://roofit.sourceforge.net/ The RooFit Toolkit for Data Modeling], an extension to ROOT to facilitate [[maximum likelihood]] fits
* [http://search.cpan.org/perldoc?SOOT Dynamic Perl Binding akin to PyROOT]
* [http://www.desy.de/~salvaire/root_wrapper.html Perl Binding using SWIG]
* [http://ppewww.physics.gla.ac.uk/~cwright/RootManual.pdf The Karma Rootra]

[[Category:Data management]]
[[Category:Data analysis software]]
[[Category:Experimental particle physics]]
[[Category:Free plotting software]]
[[Category:Free software programmed in C++]]
[[Category:Plotting software]]
[[Category:Numerical software]]
[[Category:Physics software]]
[[Category:Free science software]]
[[Category:Free physics software]]

[[de:ROOT]]
[[es:ROOT (programa)]]
[[it:ROOT]]
[[ja:ROOT]]
[[pl:ROOT]]
[[ru:ROOT (CERN)]]
[[tr:ROOT]]</rev></revisions></page></pages></query></api>
