<?xml version="1.0"?><api><query><pages><page pageid="32035" ns="0" title="Unix shell"><revisions><rev xml:space="preserve">{{No footnotes|date=September 2009}}
[[File:TcshAndShScreenCapture.png|thumb|300px|right|tcsh and sh shell windows on a Mac OS X desktop..]]
A '''Unix shell''' is a [[command-line interpreter]] or [[shell (computing)|shell]] that provides a traditional [[user interface]] for the [[Unix]] [[operating system]] and for [[Unix-like]] systems. Users direct the operation of the [[computer]] by entering commands as text for a [[command line interpreter]] to execute or by creating text scripts of one or more such commands. 

The most influential Unix shells have been the [[Bourne shell]] and the [[C shell]].  The Bourne shell, sh, was written by [[Stephen Bourne]] at AT&amp;T as the original Unix command line interpreter; it introduced the basic features common to all the Unix shells, including [[Pipeline (Unix)|piping]], [[here document]]s, [[command substitution]], [[Variable (programming)|variables]], [[control flow|control structures]] for condition-testing and looping and filename [[Wildcard character|wildcarding]].  The language, including the use of a reversed keyword to mark the end of a block, was influenced by [[ALGOL 68]].&lt;ref&gt;[http://groups.google.com/group/comp.lang.misc/msg/d58db4799c33e093?hl=en&amp;dmode=source ''Re: Late Bloomers Revisited''] USENET post to comp.lang.misc by Piercarlo &quot;Peter&quot; Grandi, Dept of CS, UCW Aberystwyth, UK, Dec 17, 1989.&lt;/ref&gt;

The [[C shell]], csh, was written by [[Bill Joy]] while a graduate student at [[University of California, Berkeley]].  The language, including the control structures and the expression grammar, was modeled on C.  The C shell also introduced a large number of features for interactive work, including the [[C shell#History|history]] and [[C shell#Editing operators|editing]] mechanisms, [[C shell#Aliases|aliases]], [[C shell#Directory stack|directory stacks]], [[C shell#Tilde notation|tilde notation]], [[C shell#Cdpath|cdpath]], [[C shell#Job control|job control]] and [[C shell#Path hashing|path hashing]].

Both shells have been used as coding base and model for many derivative and work-alike shells with extended feature sets.

==Concept==
The most generic sense of the term ''shell'' means any program that users employ to type commands. A shell hides the details of the underlying operating system with the shell interface and manages the technical details of the operating system [[kernel (computer science)|kernel]] interface, which is the lowest-level, or 'inner-most' component of most operating systems. In Unix-like operating systems users typically have many choices of command-line interpreters for interactive sessions. When a user [[log in|logs in]] to the system, a shell program is automatically executed. The login shell may be customized for each user. In addition, a user is typically allowed to execute another shell program interactively.

The Unix shell was unusual when it was introduced. It is both an interactive [[Shell (computing)|command language]] as well as a [[scripting programming language]], and is used by the operating system as the facility to control ([[shell script]]) the execution of the system. Shells created for other [[operating system]]s than Unix, often provide similar functionality.

On systems with a [[windowing system]], some users may never use the shell directly. On Unix systems, the shell is still the implementation language of system startup scripts, including the program that starts the windowing system, the programs that facilitate access to the [[Internet]], and many other essential functions.

[[Graphical user interface]]s for Unix, such as [[GNOME]], [[KDE]], and [[Xfce]] are often called ''visual'' or ''graphical'' shells.

==Bourne shell==
{{Main|Bourne shell}}
The Bourne shell was one of the major shells used in early versions of the Unix operating system and became a ''de facto'' standard. It was written by [[Stephen Bourne]] at [[Bell Labs]] and was first distributed with [[Version 7 Unix]], circa 1977. Every Unix-like system has at least one shell compatible with the Bourne shell. The Bourne shell program name is &lt;tt&gt;sh&lt;/tt&gt; and it is typically located in the Unix file system hierarchy at &lt;tt&gt;/bin/sh&lt;/tt&gt;. On many systems, however, &lt;tt&gt;/bin/sh&lt;/tt&gt; may be a [[symbolic link]] or [[hard link]] to a compatible, but more [[feature-rich]] shell than the Bourne shell. The [[POSIX]] standard specifies its standard shell as a strict subset of the [[Korn shell]]. From a user's perspective the Bourne shell was immediately recognized when active by its characteristic default command line prompt character, the dollar sign (''$'').

==C shell==
{{Main|C shell}}
The C shell was developed by [[Bill Joy]] for the Berkeley Software Distribution, a line of Unix operating systems derived from Unix and developed at the University of California, Berkeley. It was originally derived from the 6th Edition Unix shell ([[Thompson shell]]). Its syntax is modeled after the [[C programming language]]. It is used primarily for interactive terminal use, but less frequently for scripting and operating system control. C shell has many interactive commands.

==Shell categories==

===Bourne shell compatible===
*[[Bourne shell]] (sh) -- Written by [[Stephen Bourne|Steve Bourne]], while at [[Bell Labs]].  First distributed with [[Version 7 Unix]], circa 1978, and enhanced over the years.
*[[Almquist shell]] (ash) -- Written as a BSD-licensed replacement for the Bourne Shell; often used in resource-constrained environments. The sh of [[FreeBSD]], [[NetBSD]] (and their derivatives) are based on ash that has been enhanced to be [[POSIX]] conformant for the occasion.
*[[Bash (Unix shell)|Bourne-Again shell]] (bash) -- Written as part of the [[GNU Project]] to provide a superset of Bourne Shell functionality.
*[[Debian Almquist shell]] (dash) -- Dash is a modern replacement for ash in [[Debian]] and [[Ubuntu (operating system)|Ubuntu]].
*[[Korn shell]] (ksh) -- Written by [[David Korn (computer scientist)|David Korn]], while at [[Bell Labs]].
*[[Korn shell#Variants|mksh]] -- Descendant of the [[OpenBSD]] /bin/ksh and pdksh, developed as part of [[MirOS BSD]].
*[[Z shell]] (zsh) -- considered as the most complete (read: the one with the most features) shell: it is the closest thing that exists to a superset of sh, ash, bash, csh, ksh, and tcsh.{{Citation needed|reason=This is a broad and strong statement and should have a reliable source|date=March 2009}}
*[[Busybox]] --  Tiny utilities for small and embedded systems, include a shell.

===C shell compatible===
*[[C shell]] (csh) Written by [[Bill Joy]], while at the [[University of California, Berkeley]].  First distributed with [[BSD]] in 1978.&lt;ref&gt;Harley Hahn, [http://unix.harley.com/instructors/timeline.html Harley Hahn's Guide to Unix and Linux].&lt;/ref&gt;
*[[TENEX C shell]] (tcsh)
*[[Hamilton C shell]] written by Nicole Hamilton, first distributed on [[OS/2]] in 1988 and on [[Windows]] since 1992.&lt;ref&gt;[http://hamiltonlabs.com/ReleaseNotes.htm Hamilton C shell for Windows Release Notes 4.0], retrieved June 19, 2010.&lt;/ref&gt;

===Other or exotic===
*[[es shell|es]], a [[functional programming]] rc-compatible shell written in the mid-1990s.
*[[Friendly interactive shell|fish]] (friendly interactive shell), first released in 2005.
*[[Perl Shell|psh]] ([[Perl]] shell), a shell for Unix-like and Windows operating systems, combining aspects of bash (and other Unix shells) with the power of the [[Perl]] scripting language.
*[[pysh]], a special profile of the [[IPython]] project, tries to integrate a heavily enhanced [[Python (programming language)|Python]] shell and system shell into a seamless experience.
*[[rc shell|rc]], the default shell on [[Plan 9 from Bell Labs]] and [[Version 10 Unix]] written by [[Tom Duff]]. Ports have been made to various [[Unix-like]] operating systems.
*[[scsh]], a [[Scheme (programming language)|Scheme]] Shell.
*[[wish (Unix shell)|wish]], a windowing shell for [[Tcl/Tk]].
*[[zoidberg (Unix shell)|zoidberg]], a modular Perl shell written, configured, and operated entirely in [[Perl]].

A list of various shells may be found at [http://www.freebsd.org/ports/shells.html www.freebsd.org].

===Historic===
*[[Thompson shell]] (sh) -- The first Unix shell, written by [[Ken Thompson (computer programmer)|Ken Thompson]] at [[Bell Labs]].  Distributed with Versions 1 through 6 of Unix, from 1971 to 1975. Considered very rudimentary by modern standards and not used on current systems, though available as part of some [[Ancient UNIX Systems]].
*[[PWB shell]]  or Mashey shell (sh) -- A version of the Thompson shell, augmented by [[John Mashey]] and others, while at [[Bell Labs]].  Distributed with the [[Programmer's Workbench UNIX]], circa 1976.

==Configuration files for shells==
Shells read configuration files on multiple circumstances which differ depending on the shell. This table shows the configuration files for popular shells:
{| class=&quot;wikitable&quot; style=&quot;text-align:center;&quot;
||
!sh
!ksh
!csh
!tcsh
!bash
!zsh
|- style=&quot;background:#CFCFCF
|style=&quot;text-align:left;&quot;|&lt;code&gt;/etc/.login&lt;/code&gt;
|
|
|login
|login
|
|
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;/etc/csh.cshrc&lt;/code&gt;
|
|
|yes
|yes
|
|
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;/etc/csh.login&lt;/code&gt;
|
|
|login
|login
|
|
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.tcshrc&lt;/code&gt;
|
|
|
|yes
|
|
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.cshrc&lt;/code&gt;
|
|
|yes
|yes&lt;small&gt;&lt;ref&gt;only if &lt;code&gt;~/.tcshrc&lt;/code&gt; not found&lt;/ref&gt;&lt;/small&gt;
|
|
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.login&lt;/code&gt;
|
|
|login
|login
|
|
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.logout&lt;/code&gt;
|
|
|login
|login
|
|
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;/etc/profile&lt;/code&gt;
|login
|login
|
|
|login
|login
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.profile&lt;/code&gt;
|login
|login
|
|
|login&lt;small&gt;&lt;ref name=&quot;bash profiles&quot;&gt;in fact, the first readable of &lt;code&gt;~/.bash_profile&lt;/code&gt;, &lt;code&gt;~/.bash_login&lt;/code&gt; and &lt;code&gt;~/.profile&lt;/code&gt;; and only &lt;code&gt;~/.profile&lt;/code&gt; if invoked as &lt;code&gt;sh&lt;/code&gt;&lt;/ref&gt;&lt;/small&gt;
|login
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.bash_profile&lt;/code&gt;
|
|
|
|
|login&lt;small&gt;&lt;ref name=&quot;bash profiles&quot; /&gt;&lt;/small&gt;
|
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.bash_login&lt;/code&gt;
|
|
|
|
|login&lt;small&gt;&lt;ref name=&quot;bash profiles&quot; /&gt;&lt;/small&gt;
|
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.bash_logout&lt;/code&gt;
|
|
|
|
|login
|
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.bashrc&lt;/code&gt;
|
|
|
|
|int.+n/login
|
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;/etc/zshenv&lt;/code&gt;
|
|
|
|
|
|yes
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;/etc/zprofile&lt;/code&gt;
|
|
|
|
|
|login
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;/etc/zshrc&lt;/code&gt;
|
|
|
|
|
|int.
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;/etc/zlogin&lt;/code&gt;
|
|
|
|
|
|login
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;/etc/zlogout&lt;/code&gt;
|
|
|
|
|
|login
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.zshenv&lt;/code&gt;
|
|
|
|
|
|yes
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.zprofile&lt;/code&gt;
|
|
|
|
|
|login
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.zshrc&lt;/code&gt;
|
|
|
|
|
|int.
|- style=&quot;background:#F2F2F2;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.zlogin&lt;/code&gt;
|
|
|
|
|
|login
|- style=&quot;background:#CFCFCF;&quot;
|style=&quot;text-align:left;&quot;|&lt;code&gt;~/.zlogout&lt;/code&gt;
|
|
|
|
|
|login
|}

Explanation:
* blank means a file is not read by a shell at all.
* &quot;yes&quot; means a file is always read by a shell upon startup.
* &quot;login&quot; means a file is read if the shell is a login shell.
* &quot;n/login&quot; means a file is read if the shell is not a login shell.
* &quot;int.&quot; means a file is read if the shell is interactive.

==See also==
*[[Comparison of command shells]]
*[[List of Unix programs]]
*[[Restricted shell]]
*[[Shell (computing)]]
*[[Shell account]]
*[[Shell script]]
*[[Shell shoveling]]

== Notes ==
{{Reflist}}

==Further reading==
*{{cite book|title=Unix Shells by Example|author=Ellie Quigley|date=2001|publisher=Prentice Hall PTR|id=ISBN 013066538X|chapter=Introduction to UNIX shells}} &amp;mdash; a history of the various shells, and the uses of and responsibilities of a shell on Unix

==External links==
*[http://www.softpanorama.org/People/Shell_giants/introduction.shtml Introduction to the Unix shell history (Softpanorama)]
*[http://www.in-ulm.de/~mascheck/bourne/ Sven Mascheck. The Traditional Bourne Shell Family History and Development. Version 2009-02-12; Last accessed March 6, 2009]
*[http://www.computerworld.com.au/article/279011/-z_programming_languages_bourne_shell_sh Bourne shell, or sh (interview with Steve Bourne, Computerworld, March 5, 2009]
*[http://www.freeos.com/guides/lsst/ Linux Shell Scripting Tutorial - A Beginner's handbook]
*[http://www.unixnote.com/2010/05/different-unix-shell.html Table of Different UNIX Shell]

[[Category:System administration]]
[[Category:Unix shells| ]]

[[bn:à¦à¦à¦¨à¦¿à¦à§à¦¸ à¦¶à§à¦²]]
[[ca:Shell d'Unix]]
[[cs:UnixovÃ½ shell]]
[[da:Unix-skal]]
[[de:Unix-Shell]]
[[es:Shell de UNIX]]
[[fr:Shell Unix]]
[[ko:ì ëì¤ ì¸]]
[[hu:Unix rendszerhÃ©j]]
[[ja:ã·ã§ã«]]
[[no:Unix-skall]]
[[nn:Unix-skal]]
[[ru:ÐÐ¾Ð¼Ð°Ð½Ð´Ð½Ð°Ñ Ð¾Ð±Ð¾Ð»Ð¾ÑÐºÐ° UNIX]]
[[sv:Unixskal]]
[[th:à¹à¸à¸¥à¸¥à¹à¸¢à¸¹à¸à¸´à¸à¸à¹]]
[[uk:ÐÐ¾Ð¼Ð°Ð½Ð´Ð½Ð° Ð¾Ð±Ð¾Ð»Ð¾Ð½ÐºÐ° Unix]]
[[zh:Unix shell]]</rev></revisions></page></pages></query></api>
