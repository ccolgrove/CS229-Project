<?xml version="1.0"?><api><query><pages><page pageid="13980768" ns="0" title="Microsoft Visual Studio"><revisions><rev xml:space="preserve">{{Infobox software
| name                 = Microsoft Visual Studio
| logo                 = [[File:Visual Studio 2010 Logo Horizontal layout.jpg|300px|Logo]]
| screenshot           = [[File:Visual Studio 2010 screenshot.png|300px|Screenshot]]
| caption              = Visual Studio 2010 SP1 editing a [[Windows Presentation Foundation|WPF]] application
| developer            = [[Microsoft]]
| frequently_updated   = yes&lt;!-- Release version update? Don't edit this page, just click on the version number! --&gt;
| programming language =
| operating system     = [[Microsoft Windows]]
| language             =  Chinese, English, French, Portuguese, German, Italian, Japanese, Korean, Spanish and Russian
| genre                = [[Integrated development environment]]
| license              = [[Proprietary software]]&lt;br /&gt;'''Express edition:''' [[Freeware]]&lt;br /&gt;'''Other editions:''' [[Trialware]]&lt;ref&gt;[http://www.microsoft.com/visualstudio/en-us/try Take Visual Studio 2010 For a Test Drive]&lt;/ref&gt;
| website              = {{url|http://www.microsoft.com/visualstudio/en-us}}
}}

'''Microsoft Visual Studio''' is an [[integrated development environment]] (IDE) from [[Microsoft]]. It is used to develop [[console application|console]] and [[graphical user interface]] [[application software|application]]s along with [[Windows Forms]] applications, [[web site]]s, [[web application]]s, and [[web service]]s in both [[native code]] together with [[managed code]] for all platforms supported by [[Microsoft Windows]], [[Windows Mobile]], [[Windows CE]], [[.NET Framework]], [[.NET Compact Framework]] and [[Microsoft Silverlight]].

Visual Studio includes a [[code editor]] supporting [[IntelliSense]] as well as [[code refactoring]]. The integrated [[Microsoft Visual Studio Debugger|debugger]] works both as a source-level debugger and a machine-level debugger. Other built-in tools include a forms designer for building [[GUI]] applications, web designer, [[class (computing)|class]] designer, and [[database schema]] designer. It accepts plug-ins that enhance the functionality at almost every levelâincluding adding support for [[source control|source-control]] systems (like [[Subversion (software)|Subversion]] and [[Visual SourceSafe]]) and adding new toolsets like editors and visual designers for [[domain-specific language]]s or toolsets for other aspects of the [[software development lifecycle]] (like the [[Team Foundation Server]] client: Team Explorer).

Visual Studio supports different [[programming language]]s by means of language services, which allow the code editor and debugger to support (to varying degrees) nearly any programming language, provided a language-specific service exists. Built-in languages include [[C (programming language)|C]]/[[C++]] (via [[Visual C++]]), [[VB.NET]] (via [[Visual Basic .NET]]), [[C Sharp (programming language)|C#]] (via [[Visual C Sharp|Visual C#]]), and [[F Sharp (programming language)|F#]] (as of Visual Studio 2010&lt;ref&gt;http://research.microsoft.com/en-us/um/cambridge/projects/fsharp/&lt;/ref&gt;). Support for other languages such as [[M (programming language)|M]], [[IronPython|Python]], and [[IronRuby|Ruby]] among others is available via language services installed separately. It also supports [[XML]]/[[XSLT]], [[HTML]]/[[XHTML]], [[JavaScript]] and [[Cascading Style Sheets|CSS]]. Individual language-specific versions of Visual Studio also exist which provide more limited language services to the user: Microsoft Visual Basic, Visual J#, Visual C#, and Visual C++.

Microsoft provides &quot;Express&quot; editions of its Visual Studio 2010 components Visual Basic, Visual C#, Visual C++, and Visual Web Developer at no cost.  Visual Studio 2010, 2008 and 2005 Professional Editions, along with language-specific versions (Visual Basic, C++, C#, J#) of Visual Studio Express 2010 are available for free to students as downloads via Microsoft's [[DreamSpark]] program.

==Architecture==
Visual Studio does not support any programming language, solution or tool intrinsically, instead allows the plugging of functionality coded as a VSPackage. When installed, the functionality is available as a ''Service''. The IDE provides three services: SVsSolution, which provides the ability to enumerate projects and solutions; SVsUIShell, which provides windowing and UI functionality (including tabs, toolbars and tool windows); and SVsShell, which deals with registration of VSPackages. In addition, the IDE is also responsible for coordinating and enabling communication between services.&lt;ref name=&quot;vsenviron&quot;&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/bb165114(VS.80).aspx | title = Visual Studio Development Environment Model | publisher = [[Microsoft]] | author = Visual Studio 2005 SDK | accessdate = 2008-01-01}}&lt;/ref&gt; All editors, designers, project types and other tools are implemented as VSPackages. Visual Studio uses [[Component Object Model|COM]] to access the VSPackages. The Visual Studio [[software development kit|SDK]] also includes the ''Managed Package Framework'' (''MPF''), which is a set of [[managed code|managed]] wrappers around the COM-interfaces that allow the Packages to be written in any [[List of CLI languages|CLI compliant language]].&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/bb166554(VS.80).aspx | title = VSPackages and Managed Package Framework (MPF) | publisher = [[Microsoft]] | author = Visual Studio 2005 SDK | accessdate = 2008-01-01}}&lt;/ref&gt; However, MPF does not provide all the functionality exposed by the Visual Studio COM interfaces.&lt;ref name=&quot;extpage1&quot;/&gt;
The services can then be consumed for creation of other packages, which add functionality to the Visual Studio IDE.

Support for programming languages is added by using a specific VSPackage called a ''Language Service''. A language service defines various interfaces which the VSPackage implementation can implement to add support for various functionalities.&lt;ref name = &quot;langserv&quot;&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/bb166391(VS.80).aspx | title = Language Service Essentials | accessdate = 2008-01-01 | publisher = [[Microsoft]] | author = Visual Studio 2005 SDK}}&lt;/ref&gt; Functionalities that can be added this way include syntax coloring, statement completion, brace matching, parameter information tooltips, member lists and error markers for background compilation.&lt;ref name=&quot;langserv&quot;/&gt; If the interface is implemented, the functionality will be available for the language. Language services are to be implemented on a per-language basis. The implementations can reuse code from the parser or the compiler for the language.&lt;ref name=&quot;langserv&quot;/&gt; Language services can be implemented either in [[native code]] or [[managed code]]. For native code, either the native COM interfaces or the Babel Framework (part of Visual Studio SDK) can be used.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/bb165670(VS.80).aspx | title = Babel Package Overview | publisher = [[Microsoft]] | author = Visual Studio SDK | accessdate = 2008-01-01}}
&lt;/ref&gt; For managed code, the MPF includes wrappers for writing managed language services.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/bb166360(VS.80).aspx | title = Managed Language Services overview | publisher = [[Microsoft]] | author = Visual Studio SDK | accessdate = 2008-01-01}}&lt;/ref&gt;

Visual Studio does not include any [[source control]] support built in but it defines two alternative ways for source control systems to integrate with the IDE.&lt;ref name=&quot;scci&quot;&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/bb165370.aspx | title = Source Control Integration Essentials | publisher = [[MSDN]] | accessdate = 2010-09-19}}&lt;/ref&gt; A Source Control VSPackage can provide its own customised user interface. In contrast, a source control plugin using the ''MSSCCI'' (Microsoft Source Code Control Interface) provides a set of functions that are used to implement various source control functionality, with a standard Visual Studio user interface.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/bb166170.aspx | title = Source Control Plug-ins | publisher = [[MSDN]] | accessdate = 2010-09-19}}&lt;/ref&gt;&lt;ref name=&quot;alan&quot;&gt;{{cite web | url = http://alinconstantin.dtdns.net/webdocs/scc/MSSCCI.htm | title = Microsoft Source Code Control Interface | author = Alin Constantin | accessdate = 2008-01-03}}&lt;/ref&gt; MSSCCI was first used to integrate [[Visual SourceSafe]] with Visual Studio 6.0 but was later opened up via the Visual Studio SDK. Visual Studio .NET 2002 used MSSCCI 1.1, and Visual Studio .NET 2003 used MSSCCI 1.2. Visual Studio 2005, 2008 and 2010 use MSSCCI Version 1.3, which adds support for rename and delete propagation as well as asynchronous opening.&lt;ref name=&quot;alan&quot;/&gt;

Visual Studio supports running multiple instances of the environment (each with its own set of VSPackages). The instances use different [[Windows Registry|registry hives]] (see [[MSDN]]'s [http://msdn.microsoft.com/en-us/library/ms724877(VS.85).aspx definition] of the term &quot;registry '''hive'''&quot; in the sense used here) to store their configuration state and are differentiated by their AppId (Application ID). The instances are launched by an AppId-specific .exe that selects the AppId, sets the root hive and launches the IDE. VSPackages registered for one AppId are integrated with other VSPackages for that AppId. The various product editions of Visual Studio are created using the different AppIds. The [[Visual Studio Express]] edition products are installed with their own AppIds, but the Standard, Professional and [[Visual Studio Team System|Team Suite]] products share the same AppId. Consequently, one can install the Express editions side-by-side with other editions, unlike the other editions which update the same installation. The professional edition includes a superset of the VSPackages in the standard edition and the team suite includes a superset of the VSPackages in both other editions. The AppId system is leveraged by the [[#Extensibility|Visual Studio Shell]] in Visual Studio 2008.&lt;ref name=&quot;codefocus&quot;&gt;{{cite web | url = http://www.code-magazine.com/focus/vsx/ | title = Visual Studio Extensibility | publisher = CoDe Magazine | accessdate = 2008-01-01}}&lt;/ref&gt;

==Features==
===Code editor===

Visual Studio, like any other [[Integrated Development Environment|IDE]], includes a [[code editor]] that supports [[syntax highlighting]] and [[autocomplete|code completion]] using [[IntelliSense]] for not only [[variable (programming)|variables]], [[subroutine|functions]] and [[method (computer science)|methods]] but also language constructs like [[Program loops|loops]] and [[LINQ|queries]].&lt;ref name=&quot;vs2008editor&quot;/&gt; IntelliSense is supported for the included languages, as well as for [[XML]] and for [[Cascading Style Sheets]] and [[JavaScript]] when developing web sites and [[web application]]s.&lt;ref name=&quot;vs2008js&quot;&gt;{{cite web | url = http://weblogs.asp.net/scottgu/archive/2007/06/21/vs-2008-javascript-intellisense.aspx | title = VS 2008 JavaScript IntelliSense | author = [[Scott Guthrie]] | accessdate = 2007-12-31}}&lt;/ref&gt;&lt;ref name=&quot;vs2008css&quot;&gt;{{cite web | url = http://weblogs.asp.net/scottgu/archive/2007/07/25/vs-2008-web-designer-and-css-support.aspx | title = VS 2008 Web Designer and CSS Support | author = [[Scott Guthrie]] | accessdate = 2007-12-31}}&lt;/ref&gt; Autocomplete suggestions are popped up in a modeless list box, overlaid on top of the code editor. In Visual Studio 2008 onwards, it can be made temporarily semi-transparent to see the code obstructed by it.&lt;ref name=&quot;vs2008editor&quot;&gt;{{cite web | url = http://weblogs.asp.net/scottgu/archive/2007/07/28/nice-vs-2008-code-editing-improvements.aspx | title = Nice VS 2008 Code Editing Improvements | author = [[Scott Guthrie]] | accessdate = 2007-12-31}}&lt;/ref&gt; The code editor is used for all supported languages.

The Visual Studio code editor also supports setting bookmarks in code for quick navigation. Other navigational aids include collapsing code blocks and [[incremental search]], in addition to normal text search and [[regular expression|regex]] search.&lt;ref name=&quot;feat&quot;&gt;
{{cite web | url = http://msdn.microsoft.com/msdntv/transcripts/20030327VSNETABTranscript.aspx | title = Visual Studio .NET - Top 10 Code Editor Tips and Tricks | publisher = [[MSDN]] TV | accessdate = 2007-12-31}}&lt;/ref&gt; The code editor also includes a multi-item [[clipboard]] and a task list.&lt;ref name=&quot;feat&quot;/&gt; The code editor supports code snippets, which are saved templates for repetitive code and can be inserted into code and customized for the project being worked on. A management tool for code snippets is built in as well. These tools are surfaced as floating windows which can be set to automatically hide when unused or docked to the side of the screen. The Visual Studio code editor also supports [[code refactoring]] including parameter reordering, variable and method renaming, [[interface (computing)|interface]] extraction and encapsulation of class members inside properties, among others.

Visual Studio features background compilation (also called incremental compilation).&lt;ref name=&quot;bgcompile&quot;&gt;{{cite web | url = http://www.panopticoncentral.net/archive/2004/02/25/276.aspx | title = Background compilation, part 1 | accessdate = 2007-12-31}}&lt;/ref&gt;&lt;ref name=&quot;advbasics&quot;&gt;{{cite web | url = http://msdn.microsoft.com/msdnmag/issues/05/06/AdvancedBasics/ | title = Scaling Up: The Very Busy Background Compiler | author = Matthew Gertz | publisher = [[MSDN]] Magazine | accessdate = 2007-12-31}}&lt;/ref&gt; As code is being written, Visual Studio compiles it in the background in order to provide feedback about syntax and compilation errors, which are flagged with a red wavy underline. Warnings are marked with a green underline. Background compilation does not generate executable code, since it requires a different compiler than the one used to generate executable code.&lt;ref&gt;{{cite web | url = http://blogs.digineer.com/blogs/tabraham/archive/2005/12/09/14.aspx | title = Background Compilation in Visual Studio 2002, 2003 and 2005 | author = Thomas F. Abraham | accessdate = 2007-12-31}}&lt;/ref&gt; Background compilation was initially introduced with [[Microsoft Visual Basic]] but has now been expanded for all included languages.&lt;ref name=&quot;advbasics&quot;/&gt;

===Debugger===
{{Main|Microsoft Visual Studio Debugger}}
Visual Studio includes a [[debugger]] that works both as a source-level debugger and as a machine-level debugger. It works with both [[managed code]] as well as [[native code]] and can be used for debugging applications written in any language supported by Visual Studio. In addition, it can also attach to running processes and monitor and debug those processes.&lt;ref&gt;{{cite web | title = Attaching to Running Processes | url = http://msdn.microsoft.com/en-us/library/3s68z0b3(VS.80).aspx | publisher = [[MSDN]] | accessdate = 2007-12-31}}&lt;/ref&gt; If source code for the running process is available, it displays the code as it is being run. If source code is not available, it can show the [[disassembly]]. The Visual Studio debugger can also create [[memory dump]]s as well as load them later for debugging.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/d5zhxt22(VS.80).aspx | title = Dumps | publisher = [[MSDN]] | accessdate = 2007-12-31}}&lt;/ref&gt; Multi-threaded programs are also supported. The debugger can be configured to be launched when an application running outside the Visual Studio environment crashes.


The debugger allows setting [[breakpoint|breakpoints]] (which allow execution to be stopped temporarily at a certain position) and watches (which monitor the values of variables as the execution progresses).&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/5557y8b4(VS.80).aspx | title = Breakpoint Overview| publisher = [[MSDN]] | accessdate = 2007-12-31}}&lt;/ref&gt; Breakpoints can be conditional, meaning they get triggered when the condition is met. Code can be [[program_animation|stepped over]], i.e., run one line (of source code) at a time.&lt;ref name=&quot;step&quot;&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/ek13f001(VS.80).aspx | title = Code Stepping Overview| publisher = [[MSDN]] | accessdate = 2007-12-31}}&lt;/ref&gt; It can either ''step into'' functions to debug inside it, or ''step over'' it, i.e., the execution of the function body isn't available for manual inspection.&lt;ref name=&quot;step&quot;/&gt; The debugger supports ''Edit and Continue'', i.e., it allows code to be edited as it is being debugged (32 bit only; not supported in 64 bit).&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/bcew296c(VS.80).aspx | title = Edit and Continue| publisher = [[MSDN]] | accessdate = 2007-12-31}}&lt;/ref&gt; When debugging, if the mouse pointer hovers over any variable, its current value is displayed in a tooltip (&quot;data tooltips&quot;), where it can also be modified if desired. During coding, the Visual Studio debugger lets certain functions be invoked manually from the &lt;code&gt;Immediate&lt;/code&gt; tool window. The parameters to the method are supplied at the Immediate window.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/83hd8f1e(VS.80).aspx | title = Debugging at Design Time| publisher = [[MSDN]] | accessdate = 2007-12-31}}&lt;/ref&gt;

===Designer===
{{Refimprove section|date=May 2008}}
Visual Studio includes a host of visual designers to aid in the development of applications. These tools include:



[[Image:VSWebDes.PNG|thumb|Visual Studio Web Designer in code editor view]]
[[Image:ClassDiagram.PNG|thumb|right|Visual Studio 2005 in Class Designer view]]
;Windows Forms Designer: The Windows Forms designer is used to build [[GUI]] applications using [[WinForms|Windows Forms]]. Layout can be controlled by housing the controls inside other containers or locking them to the side of the form. Controls that display data (like textbox, list box, grid view, etc.) can be [[data binding|bound]] to data sources like [[database]]s or [[LINQ|queries]]. Data-bound controls can be created by dragging items from the Data Sources window onto a design surface. &lt;ref&gt; http://msdn.microsoft.com/en-us/library/ms171923.aspx &lt;/ref&gt; The UI is linked with code using an [[event-driven programming]] model. The designer generates either [[C Sharp (programming language)|C#]] or [[VB.NET]] code for the application.
;WPF Designer: The WPF designer, codenamed ''Cider'',&lt;ref&gt;{{cite web | url = http://www.microsoft.com/downloads/details.aspx?FamilyId=950D1EEC-5D4F-4A15-8250-D26E24B80A5D | title = MSDN TV: Introducing &quot;Cider&quot; - The Visual Studio Designer for WPF (&quot;Avalon&quot;) | publisher = [[MSDN]] TV | accessdate = 2008-01-01}}&lt;/ref&gt; was introduced with Visual Studio 2008. Like the Windows Forms designer it supports the drag and drop metaphor. It is used to author [[user interface]]s targeting [[Windows Presentation Foundation]]. It supports all WPF functionality including [[data binding]] and automatic layout management. It generates [[XAML]] code for the UI. The generated [[XAML]] file is compatible with [[Microsoft Expression Design]], the designer-oriented product. The XAML code is linked with code using a [[code-behind]] model.
;Web designer/development: Visual Studio also includes a web-site editor and designer that allows web pages to be authored by dragging and dropping widgets. It is used for developing [[ASP.NET]] applications and supports [[HTML]], [[CSS]] and [[JavaScript]]. It uses a [[code-behind]] model to link with ASP.NET code. From Visual Studio 2008 onwards, the layout engine used by the web designer is shared with [[Microsoft Expression Web]]. There is also [[ASP.NET MVC]] support for [[Modelâviewâcontroller|MVC]] technology as a separate download&lt;ref&gt;http://www.asp.net/mvc/&lt;/ref&gt; and [[ASP.NET Dynamic Data]] project available from Microsoft&lt;ref&gt;http://www.asp.net/DynamicData/&lt;/ref&gt;
;Class designer: The Class Designer is used to author and edit the classes (including its members and their access) using [[Unified Modeling Language|UML]] modeling. The Class Designer can generate [[C Sharp (programming language)|C#]] and [[VB.NET]] code outlines for the classes and methods. It can also generate class diagrams from hand-written classes.
;Data designer: The data designer can be used to graphically edit [[database schema]]s, including typed tables, primary and foreign keys and constraints. It can also be used to design queries from the graphical view.
;Mapping designer: From Visual Studio 2008 onwards, the mapping designer is used by [[Language Integrated Query|LINQ to SQL]] to design the [[Object-Relational mapping|mapping]] between [[database schema]]s and the [[class (computing)|classes]] that encapsulate the data. The new solution from ORM approach, [[ADO.NET Entity Framework]], replaces and improves the old technology.

===Other tools===
{{Refimprove section|date=May 2008}}

;Open Tabs Browser: The open tabs browser is used to list all open tabs and to switch between them. It is invoked using &lt;code&gt;CTRL+TAB&lt;/code&gt;.
;Properties Editor: The ''Properties Editor'' tool is used to edit properties in a GUI pane inside Visual Studio. It lists all available properties (both read-only and those which can be set) for all objects including [[class (computing)|classes]], forms, web pages and other items.
;Object Browser: The ''Object Browser'' is a [[namespace]] and [[class library]] browser for [[Microsoft .NET]]. It can be used to browse the namespaces (which are arranged hierarchically) in [[managed code|managed]] [[.NET assembly|assemblies]]. The hierarchy may or may not reflect the organization in the file system.
;Solution Explorer: In Visual Studio parlance, a solution is a set of code files and other resources that are used to build an application. The files in a solution are arranged hierarchically, which might or might not reflect the organization in the file system. The ''Solution Explorer'' is used to manage and browse the files in a solution.
;Team Explorer: ''Team Explorer'' is used to integrate the capabilities of [[Team Foundation Server]], the [[Revision Control System]] into the IDE (and the basis for Microsoft's [[CodePlex]] hosting environment for open source projects). In addition to source control it provides the ability to view and manage individual work items (including bugs, tasks and other documents) and to browse [[Team Foundation Server|TFS]] statistics. It is included as part of a TFS install and is also available as a download for Visual Studio separately&lt;ref&gt;{{cite web | url = http://download.microsoft.com/download/2/a/d/2ad44873-8ccb-4a1b-9c0d-23224b3ba34c/VSTFClient.img | title = Team Explorer 2005 (.img file)| publisher = [[Microsoft]] | accessdate = 2007-03-05}}&lt;/ref&gt;&lt;ref&gt;{{cite web | url = http://www.microsoft.com/downloads/details.aspx?familyid=0ed12659-3d41-4420-bbb0-a46e51bfca86&amp;displaylang=en | title = Visual Studio Team System 2008 Team Explorer | publisher = [[Microsoft]] | accessdate = 2007-03-05}}
&lt;/ref&gt; Team Explorer is also available as a stand-alone environment solely to access TFS services.
;Data Explorer: ''Data Explorer'' is used to manage databases on [[Microsoft SQL Server]] instances. It allows creation and alteration of database tables (either by issuing [[T-SQL]] commands or by using the Data designer). It can also be used to create [[database query|queries]] and [[stored procedure]]s, with the latter in either [[T-SQL]] or in [[managed code]] via [[SQL CLR]]. Debugging and [[IntelliSense]] support is available as well.
;Server Explorer: The ''Server Explorer'' tool is used to manage database connections on an accessible computer. It is also used to browse running [[Windows Service]]s, performance counters, [[Windows Event Log]] and [[message queue]]s and use them as a datasource.&lt;ref&gt;{{cite web | url = http://support.microsoft.com/kb/316649 | title = How to use the Server Explorer in Visual Studio .NET and Visual Studio 2005 | accessdate = 2008-01-01 | publisher = [[Microsoft]]}}&lt;/ref&gt;
;Dotfuscator Software Services Community Edition: Visual Studio includes a free 'light' version of PreEmptive Solutions' [[Dotfuscator]] product for code obfuscation and application-size reduction.&lt;ref&gt;{{cite web|url=http://msdn.microsoft.com/en-us/library/ms227240.aspx |title=Dotfuscator Community Edition 4.0 |publisher=Msdn.microsoft.com |date= |accessdate=2009-09-06}}&lt;/ref&gt; Starting with Visual Studio 2010, this version of Dotfuscator will include [[Runtime Intelligence]] capabilities that allow authors to gather end-user usage, performance, and stability information from their applications running in production.&lt;ref&gt;{{cite web|url=http://www.microsoft.com/Presspass/press/2008/oct08/10-27PreEmptivePR.mspx |title=Microsoft and PreEmptive Solutions to Provide Application Feature Monitoring, Usage Expiry and Tamper Defense in Visual Studio 2010: Post-build utility utilizes software plus services and instrumentation to improve application security, portfolio management and usability |publisher=Microsoft.com |date=2008-10-27 |accessdate=2009-09-06}}&lt;/ref&gt;
;Text Generation Framework: Visual Studio includes a full text generation framework called [[Text Template Transformation Toolkit|T4]] which enables Visual Studio to generate text files from templates either in the IDE or via code.

===Extensibility===
:{{See also|List of Microsoft Visual Studio Add-ins|Visual Studio Extensibility}}
Visual Studio allows developers to write extensions for Visual Studio to extend its capabilities. These extensions &quot;plug into&quot; Visual Studio and extend its functionality. Extensions come in the form of ''macros'', [[List of Microsoft Visual Studio Add-ins|''add-ins'']], and ''packages''. Macros represent repeatable tasks and actions that developers can record programmatically for saving, replaying, and distributing. Macros, however, cannot implement new commands or create tool windows. They are written using [[Visual Basic]] and are not compiled.&lt;ref name=&quot;extpage1&quot;&gt;{{cite web | url = http://www.codeguru.com/csharp/.net/net_vs_addins/visualstudioadd-ins/article.php/c11835/ | title = Extending Visual Studio 2005 | author = Vijay Mehta | publisher = CodeGuru | accessdate = 2008-01-01}}&lt;/ref&gt; Add-Ins provide access to the Visual Studio object model and can interact with the IDE tools. Add-Ins can be used to implement new functionality and can add new tool windows. Add-Ins are plugged in to the IDE via [[Component Object Model|COM]] and can be created in any COM-compliant languages.&lt;ref name=&quot;extpage1&quot;/&gt; Packages are created using the Visual Studio [[Software Development Kit|SDK]] and provide the highest level of extensibility. They can create designers and other tools, as well as integrate other programming languages. The Visual Studio SDK provides unmanaged [[API]]s as well as a managed API to accomplish these tasks. However, the managed API isn't as comprehensive as the unmanaged one.&lt;ref name=&quot;extpage1&quot;/&gt; Extensions are supported in the Standard (and higher) versions of Visual Studio 2005. [[Visual Studio Express|Express Editions]] do not support hosting extensions.

Visual Studio 2008 introduced the '''Visual Studio Shell''' that allows for development of a customized version of the IDE. The Visual Studio Shell defines a set of VSPackages that provide the functionality required in any IDE. On top of that, other packages can be added to customize the installation. The Isolated mode of the shell creates a new AppId where the packages are installed. These are to be started with a different executable. It is aimed for development of custom development environments, either for a specific language or a specific scenario. The Integrated mode installs the packages into the AppId of the Professional/Standard/Team System editions, so that the tools integrate into these editions.&lt;ref name=&quot;codefocus&quot;/&gt; The Visual Studio Shell is available as a free download.

After the release of Visual Studio 2008, Microsoft created the [http://visualstudiogallery.com/ Visual Studio Gallery]. It serves as the central location for posting information about extensions to Visual Studio. Community developers as well as commercial developers can upload information about their extensions to Visual Studio .NET 2002 through Visual Studio 2010. Users of the site can rate and review the extensions to help assess the quality of extensions being posted. RSS feeds to notify users on updates to the site and tagging features are also planned.&lt;ref&gt;[http://blogs.msdn.com/acangialosi/archive/2008/06/06/the-visual-studio-gallery-gets-a-little-more-community-friendly.aspx The Visual Studio Gallery gets a little more community friendly]&lt;/ref&gt;

==Supported products==
===Included products===
{{Refimprove section|date=May 2008}}
;[[Visual C++|Microsoft Visual C++]]: Microsoft Visual C++ is [[Microsoft]]'s implementation of the [[C (programming language)|C]] and [[C++]] [[compiler]] and associated languages-services and specific tools for integration with the Visual Studio IDE. It can compile either in C mode or C++ mode. For C, it follows the [[C90 (C version)|ISO C]] standard with parts of [[C99]] spec along with MS-specific additions in the form of libraries.&lt;ref&gt;{{cite web | url = http://blogs.msdn.com/vcblog/archive/2007/11/05/iso-c-standard-update.aspx | title = ISO C Standard Update | publisher = [[MSDN]] Blogs | author = Visual C++ Team | accessdate = 2008-01-02}}&lt;/ref&gt; For C++, it follows the [[ANSI C++]] spec along with a few [[C++0x]] features.&lt;ref&gt;{{cite web | url = http://blogs.msdn.com/vcblog/archive/2007/06/04/update-on-the-c-0x-language-standard.aspx | title = Update On The C++-0x Language Standard | publisher = [[MSDN]] Blogs | author = Visual C++ team}}&lt;/ref&gt; It also supports the [[C++/CLI]] spec to write [[managed code]], as well as mixed-mode code (a mix of [[native code|native]] and [[managed code]]). Microsoft positions Visual C++ for development in native code or in code that contains both native as well as managed components. Visual C++ supports [[Component Object Model|COM]] as well as the [[Microsoft Foundation Classes|MFC]] library. For MFC development, it provides a set of wizards for creating and customizing MFC boilerplate code, and creating GUI applications using MFC. Visual C++ can also use the Visual Studio forms designer to design UI graphically. Visual C++ can also be used with the [[Windows API]]. It also supports the use of ''intrinsic functions'',&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/26td21ds(VS.80).aspx | title = Compiler Intrinsics | publisher = [[MSDN]] | accessdate = 2008-01-02}}
&lt;/ref&gt; which are functions recognized by the compiler itself and not implemented as a library. Intrinsic functions are used to expose the [[Streaming SIMD Extensions|SSE]] instruction set of modern CPUs. Visual C++ also includes the [[OpenMP]] (version 2.0) spec.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/tt15eb9t(VS.80).aspx | title = OpenMP in Visual C++ | publisher = [[MSDN]] | accessdate = 2008-01-02}}&lt;/ref&gt;
;[[Visual C Sharp|Microsoft Visual C#]]: Microsoft Visual C#, [[Microsoft]]'s implementation of the [[C Sharp (programming language)|C#]] language, targets the .NET Framework, along with the language services that lets the Visual Studio IDE support C# projects. While the language services are a part of Visual Studio, the compiler is available separately as a part of the .NET Framework. The Visual C# 2008 and 2010 compilers support versions 3.0 and 4.0 of the C# language specifications, respectively. Visual C# supports the Visual Studio Class designer, Forms designer, and Data designer among others.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/kx37x362.aspx | title = Visual C# (MSDN) | publisher = [[MSDN]] | accessdate = 2009-06-01}}&lt;/ref&gt;
;[[Visual Basic .NET|Microsoft Visual Basic]]: Microsoft Visual Basic is [[Microsoft]]'s implementation of the [[VB.NET]] language and associated tools and language services. It was introduced with Visual Studio .NET (2002). Microsoft has positioned Visual Basic for [[Rapid Application Development]].&lt;ref&gt;{{cite web | url=http://msdn.microsoft.com/en-us/library/aa302334.aspx|date=October 2010|title=Make Your Components Really RAD with Visual Studio .NET Property Browser}}&lt;/ref&gt;&lt;ref&gt;{{cite web | url=http://msdn.microsoft.com/en-us/library/aa984213%28VS.71%29.aspx|date=October 2010|title=What's New in Visual Basic and Visual C#}}&lt;/ref&gt; Visual Basic can be used to author both console applications as well as GUI applications. Like Visual C#, Visual Basic also supports the Visual Studio Class designer, Forms designer, and Data designer among others. Like C#, the VB.NET compiler is also available as a part of .NET Framework, but the language services that let VB.NET projects be developed with Visual Studio, are available as a part of the latter.
;Microsoft Visual Web Developer: Microsoft Visual Web Developer is used to create web sites, [[web application]]s and [[web service]]s using ASP.NET. Either [[C Sharp (programming language)|C#]] or [[VB.NET]] languages can be used. Visual Web Developer can use the Visual Studio Web Designer to graphically design web page layouts.
;[[Team Foundation Server]]: Included only with [[Visual Studio Team System]], Team Foundation Server is intended for collaborative [[software development]] projects and acts as the server-side backend providing [[source control]], data collection, [[reporting]], and project-tracking functionality. It also includes the ''Team Explorer'', the client tool for TFS services, which is integrated inside Visual Studio Team System.

===Previous products===
;[[Visual FoxPro]]: Visual FoxPro is a data-centric [[object-oriented]] and [[procedural programming|procedural]] [[programming language]] produced by [[Microsoft]]. It derives from [[FoxPro 2|FoxPro]] (originally known as '''FoxBASE''') which was developed by Fox Software beginning in 1984. Visual FoxPro is tightly integrated with its own relational database engine, which extends FoxPro's xBase capabilities to support [[SQL]] queries and data manipulation. Visual FoxPro is a full-featured{{Citation needed|date=May 2010}}, [[dynamic programming language]] that does not require the use of an additional general-purpose programming environment. Microsoft announced in 2007 that Visual FoxPro has been discontinued after version 9 Service Pack 2, but will remain supported until 2015.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/vfoxpro/bb308952.aspx | title = A Message to the Community | publisher = [[MSDN]] | accessdate = 2008-01-02}}&lt;/ref&gt;

;[[Visual SourceSafe]]: Microsoft Visual SourceSafe is a [[source control]] [[software]] package oriented towards small software-development projects. The SourceSafe database is a multi-user, multi-process file-system database, using the Windows file system database primitives to provide locking and sharing support. All versions are multi-user, using [[Server Message Block|SMB]] (file server) networking.&lt;ref&gt;{{cite web|last=De |first=Alan |url=http://www.highprogrammer.com/alan/windev/sourcesafe.html |title=Visual SourceSafe: Microsoft's Source Destruction System |publisher=Highprogrammer.com |date= |accessdate=2009-09-06}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://support.microsoft.com/kb/q131022/ |title=INFO: Required Network Rights for the SourceSafe Directories |publisher=Support.microsoft.com |date=2005-02-24 |accessdate=2009-09-06}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://msdn.microsoft.com/en-us/library/bb509342.aspx |title=Microsoft Visual SourceSafe Best Practices |publisher=Msdn.microsoft.com |date= |accessdate=2009-09-06}}
&lt;/ref&gt; However, with Visual SourceSafe 2005, other [[clientâserver]] modes were added, Lan Booster and VSS Internet (which used [[HTTP]]/[[HTTPS]]). Visual SourceSafe 6.0 was available as a stand-alone product&lt;ref&gt;{{cite web|url=http://www.ecostsoftware.com/microsoft/microsoft-visual-sourcesafe-6_p2051 |title=Buy Microsoft Visual SourceSafe 6 (324-00269) :: eCostSoftware.com - UK Software Supplier |publisher=eCostSoftware.com |date= |accessdate=2009-09-06}}&lt;/ref&gt; and was included with Visual Studio 6.0, and other products such as Office Developer Edition. Visual SourceSafe 2005 was available as a stand-alone product and included with the 2005 Team Suite. [[Team Foundation Server]] has superseded VSS as Microsoft's recommended platform for [[source control]].

;[[Visual J++|Microsoft Visual J++]]/[[Visual J Sharp|Microsoft Visual J#]]: Microsoft Visual J++ was [[Microsoft]]'s implementation of the [[Java (programming language)|Java]] language (with Microsoft-specific extensions) and associated language services. It was discontinued as a result of litigation from [[Sun Microsystems]], and the technology was recycled into Visual J#, Microsoft's Java compiler for .NET Framework. J# was available with Visual Studio 2005 but has been discontinued in Visual Studio 2008.

;[[Visual InterDev]]: Visual InterDev was used to create web applications using Microsoft [[Active Server Pages]] (ASP) technologies. It supports code completion and includes [[database]] server management tools. It has been replaced with Microsoft Visual Web Developer.

==Editions==
Microsoft Visual Studio is available in the following editions or [[Stock-keeping unit|SKUs]]:&lt;ref name=&quot;Visual Studio Editions&quot;&gt;{{cite web | url = http://www.microsoft.com/visualstudio/en-us/products | title = Visual Studio Editions | publisher = Microsoft| accessdate = 2010-06-22}}&lt;/ref&gt;

===Visual Studio Express===
[[Microsoft Visual Studio Express|Visual Studio Express Editions]] are a set of free lightweight individual IDEs which are provided as stripped-down versions of the Visual Studio IDE on a per-platform basis or per-language basis, i.e., it installs the development tools for the supported platforms (web, Windows, phone) or supported development languages (VB, C#) onto individual Visual Studio Shell AppIds. It includes only a small set of tools as compared to the other systems. It does not include support for plug-ins. [[x86-64|x64]] compilers are not included in the Visual Studio Express edition IDEs, but are available as part of a Windows Software Development Kit that can be installed separately.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/library/9yb4317s(v=VS.100).aspx | title = How to: Configure Visual C++ Projects to Target 64-Bit Platforms | publisher = Microsoft| accessdate = 2010-08-19}}&lt;/ref&gt; Microsoft targets the Express IDEs at students and hobbyists. Express editions do not use the full [[MSDN Library]] but use the MSDN Essentials Library. The languages available as part of the Express IDEs are:&lt;ref&gt;{{cite web | url = http://www.microsoft.com/express/ | title = Visual Studio Express | publisher = Microsoft| accessdate = 2010-06-22}}&lt;/ref&gt;
*'''Visual Basic Express'''
*'''Visual C++ Express'''
*'''Visual C# Express'''
*'''Visual Web Developer Express'''
*'''Express for Windows Phone'''

===Visual Studio LightSwitch===
Microsoft Visual Studio LightSwitch is an IDE specifically tailored for creating line-of-business applications built on existing .NET technologies and Microsoft platforms. The applications produced are architecturally [[Multitier architecture|3-tier]]: the user interface runs on [[Silverlight|Microsoft Silverlight]]; the logic and data-access tier is built on WCF RIA Services and Entity Framework, hosted in ASP.NET; and the primary data storage supports [[SQL Server Express|Microsoft SQL Server Express]], [[Microsoft SQL Server]] and [[SQL Azure|Microsoft SQL Azure]]. LightSwitch also supports other data sources including [[SharePoint|Microsoft SharePoint]]. LightSwitch includes graphical designers for designing entities and entity relationships, entity queries, and UI screens. Business logic may be written in either [[Visual Basic .NET|Visual Basic]] or [[Visual C Sharp|Visual C#]]. The tool can be installed as a stand-alone SKU or as an integrated add-in to Visual Studio 2010 Professional and higher.&lt;ref&gt;{{cite web |last=Massi |first=Beth | url = http://blogs.msdn.com/b/bethmassi/archive/2010/08/03/rapid-business-application-development-with-visual-studio-lightswitch.aspx | title = Rapid Business Application Development with Visual Studio LightSwitch | publisher = Microsoft| accessdate = 2010-08-04}}&lt;/ref&gt;

===Visual Studio Professional===
Visual Studio Professional Edition provides an IDE for all supported development languages. As of Visual Studio 2010, the Standard edition was dropped.&lt;ref name=&quot;VS 2010 Licensing Changes&quot;&gt;{{cite web |url = http://blogs.msdn.com/b/bharry/archive/2009/10/19/vs-2010-licensing-changes.aspx | title = VS 2010 Licensing Changes | publisher = Microsoft | accessdate = 2010-06-22}}&lt;/ref&gt; MSDN support is available as MSDN Essentials or the full MSDN library depending on licensing. It supports [[XML]] and [[XSLT]] editing, and can create deployment packages that only use [[ClickOnce]] and [[Windows Installer|MSI]]. It includes tools like Server Explorer and integration with [[Microsoft SQL Server]] also. Windows Mobile development support was included in Visual Studio 2005 Standard, however, with Visual Studio 2008, it is only available in Professional and higher editions. Windows Phone 7 development support was added to all editions in Visual Studio 2010. Development for [[Windows Mobile]] is no longer supported in Visual Studio 2010; it is superseded by [[Windows Phone 7]].

===Visual Studio Premium===
Visual Studio Premium Edition includes all of the tools in Visual Studio Professional and adds additional functionality such as code metrics, profiling, static code analysis, and database unit testing.

===Visual Studio Tools for Office===
[[Visual Studio Tools for Office]] is an SDK and an add-in for Visual Studio that includes tools for developing for the [[Microsoft Office]] suite. Previously (for Visual Studio .NET 2003 and Visual Studio 2005) it was a separate SKU that supported only [[Visual C Sharp|Visual C#]] and [[Visual Basic .NET|Visual Basic]] languages or was included in the Team Suite. With Visual Studio 2008, it is no longer a separate SKU but is included with Professional and higher editions. A separate runtime is required when deploying VSTO solutions.

===Visual Studio Ultimate===
Visual Studio Ultimate provides set of software and database development, collaboration, metrics, architecture, testing and reporting tools in addition to the features provided by Visual Studio Premium. As of Visual Studio 2010, the Team Suite edition was renamed to the Ultimate edition.&lt;ref name=&quot;VS 2010 Licensing Changes&quot;/&gt; Visual Studio Ultimate offers a superset of toolsets based on the [[Application Lifecycle Management]] (ALM) role it is being used for.

====Visual Studio Team System====
Prior to Visual Studio 2010, [[Visual Studio Team System]] provided four role-specific editions are:&lt;ref&gt;{{cite web |url = http://blogs.msdn.com/robcaron/archive/2007/07/26/4069573.aspx | title = A Hitchhiker's Guide to Visual Studio 2008, Part I | publisher = Microsoft | accessdate = 2010-06-22}}&lt;/ref&gt;
*'''Team Explorer''' (basic TFS client)
*'''Architecture Edition'''
*'''Database Edition'''
*'''Development Edition'''
*'''Test Edition'''
The combined functionality of the four Team System Editions is provided in a '''[[Visual Studio Team Suite|Team Suite]]''' Edition. The Database Edition, codenamed &quot;DataDude&quot;, was initially released as a separate edition after Visual Studio 2005's initial release. It is included with Visual Studio 2008 as a separate edition, but Microsoft did roll its functionality into the Premium Edition with Visual Studio 2010.&lt;ref name=&quot;guagagnochannel9&quot;&gt;{{cite web
|url=http://channel9.msdn.com/posts/Dan/Norman-Guadagno-Announcing-Visual-Studio-Team-System-2010/
|title=Norman Guadagno: Announcing Visual Studio Team System 2010
|date=September 29, 2008
|accessdate=2008-09-30
|work=[[Channel9]]
|publisher=[[Microsoft]]
}}&lt;/ref&gt;

===Test Professional===
Visual Studio Test Professional is an edition which was introduced with Visual Studio 2010. Its focus is aimed at the dedicated tester role and includes support for the management of test environments, the ability to start and report on tests and to connect to Team Foundation Server. It does not include support for development or authoring of tests.&lt;ref name=&quot;Visual Studio Editions&quot;/&gt;

===Editions feature grid===

{| class=&quot;wikitable&quot; style=&quot;font-size: smaller; text-align: center&quot;
|+ style=&quot;font-size: larger&quot; | Editions feature grid&lt;ref name=&quot;Visual Studio Editions&quot;/&gt;
|-
!Product
!Extensions
!Setup Projects
!MSDN Integration
!Debugging
!Profiling
!Static Analysis
!IntelliTrace
!Unit Test
!Code Coverage
!Coded UI Test
!Test Impact Analysis
!Load Testing
!Lab Management
!Architecture and Modelling
!Mobile Development
|-
!Express
|{{No}}
|{{Depends|Limited}}
|{{Depends|Essentials}}
|{{Yes}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{Depends|Windows Phone 7 only}}
|-
!Professional
|{{Yes}}
|{{Yes}}
|{{Depends|Essentials or Full}}
|{{Yes}}
|{{No}}
|{{No}}
|{{No}}
|{{Yes}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{Depends|Windows Phone 7 only}}
|-
!Premium
|{{Yes}}
|{{Yes}}
!{{Yes|Full}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{No}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{No}}
|{{No}}
|{{Depends|Read-only}}
|{{Depends|Windows Phone 7 only}}
|-
!Ultimate
|{{Yes}}
|{{Yes}}
!{{Yes|Full}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Yes}}
|{{Depends|Windows Phone 7 only}}
|-
!Test Professional
|{{No}}
|{{No}}
|{{Yes|Full}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{No}}
|{{Yes}}
|{{No}}
|{{Yes}}
|{{No}}
|{{No}}
|}

==Version history==

Prior to Visual Studio Version 4.0 there were Visual Basic 3, Visual C++, Visual FoxPro and Sources Safe as separate products.
{| class=&quot;wikitable&quot;
|-
! Product name !! Codename !! Internal&lt;br/ &gt;version  !! Supported .NET &lt;br /&gt;Framework versions !! Release date
|-
| Visual Studio                     || {{N/A}}               || style=&quot;text-align:center;&quot; |  4.0 || {{N/A}}                                              || Spring 1995
|-
| Visual Studio 97                  || ''Boston''            || style=&quot;text-align:center;&quot; |  5.0 || {{N/A}}                                              || 1997
|-
| Visual Studio 6.0                 || ''Aspen''             || style=&quot;text-align:center;&quot; |  6.0 || {{N/A}}                                              || 1998-06
|-
| Visual Studio .NET (2002)         || ''Rainier''           || style=&quot;text-align:center;&quot; |  7.0 || style=&quot;text-align:center;&quot; | 1.0                     || 2002-02-13
|-
| Visual Studio .NET 2003           || ''Everett''           || style=&quot;text-align:center;&quot; |  7.1 || style=&quot;text-align:center;&quot; | 1.1                     || 2003-04-24
|-
| Visual Studio 2005                || ''Whidbey''           || style=&quot;text-align:center;&quot; |  8.0 || style=&quot;text-align:center;&quot; | 2.0, 3.0                || 2005-11-07
|-
| Visual Studio 2008                || ''Orcas''             || style=&quot;text-align:center;&quot; |  9.0 || style=&quot;text-align:center;&quot; | 2.0, 3.0, 3.5           || 2007-11-19
|-
| Visual Studio 2010 /Ultimate 2010 || ''Dev10''/''Rosario'' || style=&quot;text-align:center;&quot; | 10.0 || style=&quot;text-align:center;&quot; | 2.0, 3.0, 3.5, 4.0      || 2010-04-12&lt;!--
|-
| Visual Studio 11                  ||                       || style=&quot;text-align:center;&quot; | 11.0 || style=&quot;text-align:center;&quot; | 2.0, 3.0, 3.5, 4.0, 4.5 || 2012-??-??--&gt;
|}

===Visual Studio 97===
{{or|date=March 2011}}&lt;!---- &quot;Boston&quot; was not referenced nor written down onto the Visualsss Studio 97 package; please verify authenticity of ref-tag ---&gt;
Microsoft first released Visual Studio (codenamed ''Boston'', for the [[Boston|city of the same name]], thus beginning the VS codenames related to places)&lt;ref&gt;{{cite web |url = http://windowsphonesecrets.com/2010/05/18/what-im-doing-in-redmond/ |title = website on windows CE programming |publisher = Paul Thurrott |accessdate = 2010-05-19}}&lt;/ref&gt; in 1997, bundling many of its programming tools together for the first time. Visual Studio 97 came in two editions: Visual Studio Professional and Visual Studio Enterprise, the professional edition has 3 CDs, and the enterprise on 4 CDs. It included Visual Basic 5.0, Visual C++ 5.0 -primarily for Windows programming; Visual J++ 1.1 for Java programming; Visual FoxPro 5.0 for database programming. It introduced Visual InterDev for creating dynamically generated web sites using Active Server Pages.{{citation needed|date=March 2011}} There were two companion CDs that contained the [[Microsoft Developer Network|Microsoft Developer Network library]]. 

'''Visual Studio 97''' was Microsoft's first attempt at using the same development environment for multiple languages. Visual J++, InterDev, and the [[Microsoft Developer Network|MSDN Library]] had all been using same 'environment', called Developer Studio.&lt;ref&gt;[http://support.microsoft.com/kb/192912 update &amp; help from Microsoft website]&lt;/ref&gt; Visual C++, Visual Basic and Visual FoxPro used separate environments.&lt;ref name=&quot;codefocus&quot;/&gt;

''VIsual Studio 97'' had further low budget CD versions targeting only one specific programming language at a time, such as Visual C++ v5, or Visual Basic v5.0. Each single programming language included the same Environment and lacked MSDN.

===Visual Studio 6.0 (1998)===
{{Main |Visual Basic 6}}
The next version, version 6.0 (codenamed ''Aspen'', after the [[Aspen, Colorado| ski resort ]]in Colorado),{{citation needed|date=March 2011}} was released in June 1998 and is the last version to run on the [[Windows 9x]] platform.&lt;ref&gt;{{cite web |url = http://msdn.microsoft.com/en-us/vstudio/aa700918.aspx |title = System Requirements (Visual Studio 6.0) |publisher = Microsoft Co. |accessdate = 2008-01-02}}&lt;/ref&gt; Each version of each language in part also settled to v6.0, including Visual J++ which was prior v1.1, and Visual InterDev at the 1st release. The v6 edition of Microsoft was the core environment for the next four releases to provide programmers with an integrated look-a-like platform. This led Microsoft to transition the development on the platform independent [[.NET Framework]].

Visual Studio 6.0 was the last version to include the COM-based version of plain Visual Basic language; subsequent 2002 version (in 'Visual Studio 2002' package) included Basic language using the .NET platform. It did not include Visual J++, which Microsoft removed as part of a settlement with [[Sun Microsystems]] that required Microsoft Internet Explorer to not provide support for the [[Virtual Machine|Java Virtual Machine Environment]].

Visual Studio 6.0 came in two editions: Professional and Enterprise.&lt;ref&gt;{{cite web
  | title = Features by Edition
  | publisher = Microsoft
  | url = http://msdn.microsoft.com/vstudio/previous/vs6/features/default.aspx
|archiveurl=http://web.archive.org/web/20040215012731/http://msdn.microsoft.com/vstudio/previous/vs6/features/default.aspx |archivedate=2004-02-15}}&lt;/ref&gt; The Enterprise edition contained extra features not found in Professional edition, including:

* Application Performance Explorer
* Automation Manager
* Microsoft Visual Modeler
* RemAuto Connection Manager{{citation needed|date=March 2011}}
* Visual Studio Analyzer

===Visual Studio .NET (2002)===
[[Image:MSVisual Studio.png|thumb|right|The Microsoft Visual Studio .NET logo.]]

Microsoft released Visual Studio .NET (VS.NET), codenamed ''Rainier'' (for [[Washington (U.S. state)|Washington's]] [[Mount Rainier]]), in February 2002 (the [[Development stage#Beta|beta version]] was released via [[Microsoft Developer Network]] in 2001). The biggest change was the introduction of a [[managed code]] development environment using the .NET Framework. Programs developed using .NET are not compiled to [[machine language]] (like C++ is, for example) but instead to a format called [[Microsoft Intermediate Language]] (MSIL) or [[Common Intermediate Language]] (CIL). When an CIL application executes, it is [[Just-in-time compilation|compiled while being executed]] into the appropriate machine language for the platform it is being executed on, thereby making code portable across several platforms. Programs compiled into CIL can be executed only on platforms which have an implementation of [[Common Language Infrastructure]]. It is possible to run CIL programs in [[Linux]] or [[Mac OS X]] using non-Microsoft .NET implementations like [[Mono (software)|Mono]] and [[DotGNU]].

This was the first version of Visual Studio to require an [[Windows NT|NT]]-based Windows platform.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/vstudio/aa700866.aspx | title = System Requirements (Visual Studio .NET)| publisher = [[MSDN]] | accessdate = 2008-01-02}}&lt;/ref&gt; The installer enforces this requirement.

Visual Studio .NET 2002 shipped in four editions: Academic, Professional, Enterprise Developer, and Enterprise Architect. Microsoft introduced [[C Sharp (programming language)|C#]] (C-sharp), a new programming language, that targets .NET. It also introduced the successor to Visual J++ called Visual J#. Visual J# programs use Java's language-syntax. However, unlike Visual J++ programs, Visual J# programs can only target the .NET Framework, not the [[Java Virtual Machine]] that all other Java tools target.

Visual Basic changed drastically to fit the new framework, and the new version was called Visual Basic .NET. Microsoft also added extensions to C++, called [[Managed Extensions for C++]], so that C++ programmers could create .NET programs.

Visual Studio .NET can produce applications targeting Windows (using the Windows Forms part of the .NET Framework), the Web (using ASP.NET and [[Web Services]]) and, with an add-in, portable devices (using the .NET Compact Framework).

The Visual Studio .NET environment was rewritten to partially use .NET. All languages are versions of Visual Studio, it has a cleaner interface and greater cohesiveness.{{Citation needed|date=May 2010}} It is also more customizable with tool windows that automatically hide when not in use. While Visual FoxPro 7 started out as part of Visual Studio .NET 2002, and early VS betas allowed debugging inside VFP-based DLLs, it was removed before release to follow its own development track.{{Citation needed|date=October 2010}}

The internal version number of Visual Studio .NET 2002 is version 7.0. Microsoft released Service Pack 1 for Visual Studio .NET 2002 in March, 2005.&lt;ref&gt;{{cite web | url = http://www.microsoft.com/downloads/details.aspx?FamilyID=c41d8159-b42f-4d06-a797-e510494976ee&amp;displaylang=en | title = Visual Studio .NET 2002 SP1 | publisher = [[Microsoft]] | accessdate = 2008-01-02}}&lt;/ref&gt;

===Visual Studio .NET 2003===
[[Image:Visual Studio 2003 IDE.png|thumb|The Visual Studio .NET 2003 code editor and WinForms Designer Window in VB.NET]]
In April 2003, Microsoft introduced a minor upgrade to Visual Studio .NET called Visual Studio .NET 2003, codenamed ''Everett'' (for the [[Everett, Washington|city of the same name]]). It includes an upgrade to the .NET Framework, version 1.1, and is the first release to support developing programs for mobile devices, using ASP.NET or the .NET Compact Framework. The Visual C++ compiler's standards-compliance improved, especially in the area of [[partial template specialization]]. Visual C++ Toolkit 2003 is a free version of the same C++ compiler shipped with Visual Studio .NET 2003 without the IDE, though {{as of | 2010}} it is no longer available and the Express Editions have superseded it. The internal version number of Visual Studio .NET 2003 is version 7.1 while the file format version is 8.0.&lt;ref name=&quot;hacks&quot;/&gt;

Visual Studio .NET 2003 shipped in four editions: Academic, Professional, Enterprise Developer, and Enterprise Architect. The Visual Studio .NET 2003 Enterprise Architect edition includes an implementation of [[Microsoft Visio]] 2002's modeling technologies, including tools for creating [[Unified Modeling Language]]-based visual representations of an application's architecture, and a powerful [[Object role modeling|Object-Role Modeling (ORM)]] and logical database-modeling solution. &quot;Enterprise Templates&quot; were also introduced, to help larger development teams standardize coding styles and enforce policies around component usage and property settings.

Service Pack 1 was released September 13, 2006.&lt;ref&gt;{{cite web | url = http://www.microsoft.com/downloads/details.aspx?familyid=69D2219F-CE82-46A5-8AEC-072BD4BB955E&amp;displaylang=en | title = Microsoft Visual Studio .NET 2003 Service Pack 1 | publisher = [[Microsoft]] | accessdate = 2008-01-02}}&lt;/ref&gt;

===Visual Studio 2005===
Visual Studio 2005, codenamed ''Whidbey'' (a reference to [[Whidbey Island]] in [[Puget Sound]]), was released online in October 2005 and to retail stores a few weeks later. Microsoft removed the &quot;.NET&quot; moniker from Visual Studio 2005 (as well as every other product with .NET in its name), but it still primarily targets the .NET Framework, which was upgraded to version 2.0. It is the last version available for [[Windows 2000]] and also the last version to be able to target [[Windows 98]], [[Windows Me]] and [[Windows NT 4.0]] for C++ applications.&lt;ref&gt;[http://msdn.microsoft.com/en-us/library/6sehtctf(v=VS.90).aspx How to: Modify WINVER and _WIN32_WINNT]&lt;/ref&gt;&lt;ref&gt;[http://msdn.microsoft.com/en-us/library/bb531344(v=VS.90).aspx Breaking Changes]&lt;/ref&gt;

Visual Studio 2005's internal version number is 8.0 while the file format version is 9.0.&lt;ref name=&quot;hacks&quot;&gt;{{cite web | url = http://www.ondotnet.com/pub/a/dotnet/excerpt/vshacks_chap1/index.html?page=4 | title = Hacking Visual Studio | accessdate = 2008-01-01}}&lt;/ref&gt; Microsoft released Service Pack 1 for Visual Studio 2005 on 14 December 2006.&lt;ref&gt;
{{cite web | url = http://www.microsoft.com/downloads/details.aspx?FamilyID=BB4A75AB-E2D4-4C96-B39D-37BAF6B5B1DC&amp;displaylang=en | title = Visual Studio 2005 Service Pack 1 | publisher = [[Microsoft]] | accessdate = 2008-01-01}}&lt;/ref&gt; An additional update for Service Pack 1 that offers Windows Vista compatibility was made available on 3 June 2007.&lt;ref&gt;{{cite web | url = http://www.microsoft.com/downloads/details.aspx?FamilyID=90e2942d-3ad1-4873-a2ee-4acc0aace5b6&amp;displaylang=en |title = Visual Studio Service Pack 1 Update | accessdate = 2008-01-01}}&lt;/ref&gt;

Visual Studio 2005 was upgraded to support all the new features introduced in .NET Framework 2.0, including generics and ASP.NET 2.0. The [[IntelliSense]] feature in Visual Studio was upgraded for generics and new project types were added to support ASP.NET web services. Visual Studio 2005 also includes a local web server, separate from [[Internet Information Services|IIS]], that can host ASP.NET applications during development and testing. It also supports all [[Microsoft SQL Server|SQL Server]] 2005 databases. Database designers were upgraded to support the [[ADO.NET|ADO.NET 2.0]], which is included with .NET Framework 2.0. C++ also got a similar upgrade with the addition of [[C++/CLI]] which is slated to replace the use of [[Managed Extensions for C++|Managed C++]].&lt;ref&gt;{{cite web
|url=http://msdn.microsoft.com/en-us/library/xey702bw(VS.80).aspx
|title=New Language Features in Visual C++
|work=Visual Studio 2005 Visual C++ Language Reference
|publisher=MSDN
|accessdate=2006-12-28
}}&lt;/ref&gt; Other new features of Visual Studio 2005 include the &quot;Deployment Designer&quot; which allows application designs to be validated before deployments, an improved environment for web publishing when combined with ASP.NET 2.0 and load testing to see application performance under various sorts of user loads. Starting with the 2005 edition, Visual Studio also added extensive 64-bit support. While the host development environment itself is only available as a 32-bit application, Visual C++ 2005 supports compiling for [[x86-64]] (AMD64 and Intel 64) as well as [[IA-64]] ([[Itanium]]).&lt;ref&gt;{{cite web
|url=http://blogs.msdn.com/deeptanshuv/archive/2006/04/11/573795.aspx
|title=64-bit and Visual Studio 2005
|date=April 11, 2006
|accessdate=2006-12-28
}}&lt;/ref&gt; The [[Windows SDK|Platform SDK]] included 64-bit compilers and 64-bit versions of the libraries.

Microsoft also announced [[Visual Studio Tools for Applications]] as the successor to [[Visual Basic for Applications]] (VBA) and VSA (Visual Studio for Applications). VSTA 1.0 was released to manufacturing along with [[Office 2007]]. It is included with Office 2007 and is also part of the Visual Studio 2005 SDK. VSTA consists of a customized IDE, based on the Visual Studio 2005 IDE, and a runtime that can be embedded in applications to expose its features via the .NET object model. Office 2007 applications continue to integrate with VBA, except for InfoPath 2007 which integrates with VSTA. Version 2.0 of VSTA ( based on Visual Studio 2008) was released in April, 2008.&lt;ref&gt;[http://www.microsoft.com/communities/newsgroups/en-us/default.aspx?dg=microsoft.public.office.developer.office.sdks&amp;tid=965b9d31-6310-45cb-89d3-d9948a8a10c9&amp;cat=&amp;lang=&amp;cr=&amp;sloc=&amp;p=1 VSTA vs VSTO in Software Development Kits]. ''In the latest MSDN Flash email I just received, it announces the release of Visual Studio Tools for Applications 2.0 (VSTA).''&lt;/ref&gt; It is significantly different from the first version, including features such as dynamic programming and support for [[Windows Presentation Foundation|WPF]], [[Windows Communication Foundation|WCF]], [[Windows Workflow Foundation|WF]], [[Language Integrated Query|LINQ]], and .NET 3.5 Framework.

===Visual Studio 2008===

'''Visual Studio 2008''',&lt;ref&gt;{{cite web |title=Microsoft Details Dynamic IT Strategy at Tech-Ed 2007 |url=http://www.earthtimes.org/articles/show/news_press_release,115898.shtml |accessdate=2007-06-04}}&lt;/ref&gt; and '''Visual Studio Team System 2008'''&lt;ref&gt;{{cite web |last=Beehler |first=Jeff |title=Visual Studio Team System 2008 ships! |work=Jeff Beehler's Blog |publisher=[[Microsoft Developer Network|MSDN]] Blogs |date=2007-11-19 |url=http://blogs.msdn.com/b/jeffbe/archive/2007/11/19/visual-studio-team-system-2008-ships.aspx |accessdate=2010-06-25}}&lt;/ref&gt;&lt;ref&gt;{{cite web |title=Microsoft Windows Visual Studio Team System 2008 |work=MSDN Search |publisher=MSDN Social |year=2010 |url= http://social.msdn.microsoft.com/Search/en-US?query=Microsoft%20Windows%20Visual%20Studio%20Team%20System%202008&amp;resultsLang=en-GB&amp;ac=8 |accessdate=2010-06-25}}&lt;/ref&gt; codenamed ''Orcas'' (a reference to [[Orcas Island]], also an island in [[Puget Sound]], like Whidbey for the previous 2005 release), were released to MSDN subscribers on 19 November 2007 alongside .NET Framework 3.5. The source code for the Visual Studio 2008 IDE is available under a [[shared source]] license to some of [[Microsoft]]'s partners and [[Independent software vendor|ISVs]].&lt;ref&gt;{{cite web |title=Microsoft to Give Partners More Access to Orcas IDE Code |url=http://www.eweek.com/article2/0,1895,2212505,00.asp |accessdate=2007-11-06}}&lt;/ref&gt; Microsoft released Service Pack 1 for Visual Studio 2008 on 11 August 2008.&lt;ref&gt;{{cite web |title=Download Details: Microsoft Visual Studio 2008 Service Pack 1 (exe) |url= http://www.microsoft.com/downloads/details.aspx?FamilyID=fbee1648-7106-44a7-9649-6d9f6d58056e&amp;DisplayLang=en |accessdate=2008-08-11}}&lt;/ref&gt; The internal version number of Visual Studio 2008 is version 9.0 while the file format version is 10.0. Visual Studio 2008 is the last version to support targeting [[Windows 2000]] for C++ applications.&lt;ref&gt;[http://msdn.microsoft.com/en-us/library/ws0swas0(VS.100).aspx Windows Platforms (CRT]&lt;/ref&gt;

Visual Studio 2008 is focused on development of [[Windows Vista]], 2007 Office system, and Web applications. For visual design, a new [[Windows Presentation Foundation]] visual designer and a new [[HTML]]/[[CSS]] editor influenced by [[Microsoft Expression Web]] are included. [[J Sharp|J#]] is not included. Visual Studio 2008 requires .NET 3.5 Framework and by default configures compiled assemblies to run on .NET Framework 3.5, but it also supports multi-targeting which lets the developers choose which version of the .NET Framework (out of 2.0, 3.0, 3.5, [[Silverlight|Silverlight CoreCLR]] or .NET Compact Framework) the assembly runs on. Visual Studio 2008 also includes new [[code analysis]] tools, including the new [[Code Metrics]] tool (only in Team Edition and Team Suite Edition).&lt;ref&gt;{{cite web | publisher = [[eWeek]] | accessdate = 2007-10-06 | title = Microsoft Pushes Secure, Quality Code | author = Darryl K. Taft | url = http://www.eweek.com/article2/0,1759,2192515,00.asp?kc=EWRSS03119TX1K0000594 }}&lt;/ref&gt; For [[Visual C++]], Visual Studio adds a new version of [[Microsoft Foundation Classes]] (MFC 9.0) that adds support for the visual styles and UI controls introduced with [[Windows Vista]].&lt;ref&gt;{{cite web | url = http://www.codeguru.com/cpp/controls/buttonctrl/advancedbuttons/article.php/c14407/ | title = Whats New in MFC 9.0 (Orcas) | author = Kirants | publisher = CodeGuru | accessdate = 2008-01-02}}&lt;/ref&gt; For native and managed code interoperability, Visual C++ introduces the STL/CLR, which is a port of the [[C++]] [[Standard Template Library]] (STL) containers and algorithms to [[managed code]]. STL/CLR defines STL-like containers, [[iterator]]s and algorithms that work on [[C++/CLI]] [[managed code|managed]] objects.&lt;ref&gt;{{cite web | url = http://blogs.msdn.com/nikolad/archive/2006/06/16/STLCLR-Intro.aspx | title = What Is STL/CLR? | author = Nikola Dudla | publisher = [[MSDN]] Blogs | accessdate = 2008-01-02}}&lt;/ref&gt;&lt;ref&gt;{{cite web | url = http://blogs.msdn.com/vcblog/archive/2006/08/02/686894.aspx | title = Libraries Work In Orcas | author = Visual C++ Team | publisher = [[MSDN]] Blogs | accessdate = 2008-01-02}}
&lt;/ref&gt;

Visual Studio 2008 features include an [[XAML]]-based designer (codenamed ''Cider''), [[Workflow Foundation|workflow designer]], [[Language Integrated Query|LINQ]] to [[SQL]] designer (for defining the type mappings and object encapsulation for SQL Server data), [[XSLT]] debugger, [[JavaScript]] [[Intellisense]] support, JavaScript Debugging support, support for [[User Account Control|UAC]] [[Manifest (.NET Framework)|manifests]], a [[concurrent programming|concurrent]] build system, among others.&lt;ref&gt;{{cite web | url = http://blog.csharp-online.net/?p=108 | title = Download Visual Studio 03/07 CTP | accessdate = 2007-06-14}}&lt;/ref&gt; It ships with an enhanced set of UI widgets, both for [[WinForms|Windows Forms]] and [[Windows Presentation Foundation|WPF]]. It also includes a multithreaded build engine (MSBuild) to compile multiple source files (and build the executable file) in a project across multiple [[thread (computing)|threads]] simultaneously. It also includes support for compiling [[Portable Network Graphics|PNG]] compressed [[icon (computing)|icon]] [[Resource (Windows)|resources]] introduced in Windows Vista. An updated [[XML Schema (W3C)|XML Schema]] designer will ship separately some time after the release of Visual Studio 2008.&lt;ref&gt;{{cite web |title=XSD Designer in Visual Studio |url= http://www.msdner.com/dev-archive/204/153-1021-2046403.shtm |accessdate=2008-01-01}}&lt;/ref&gt;

The [[Microsoft Visual Studio Debugger|Visual Studio debugger]] includes features targeting easier debugging of multi-threaded applications. In debugging mode, in the ''Threads'' window, which lists all the threads, hovering over a thread will display the stack trace of that thread in tooltips.&lt;ref&gt;{{cite web |author=[[S. Somasegar]] |title=Debugging and Profiling Features in VS 2008 |publisher=MSDN Blogs |url= http://blogs.msdn.com/somasegar/archive/2007/09/14/debugging-and-profiling-features-in-vs-2008.aspx |accessdate=2007-07-24}}&lt;/ref&gt; The threads can directly be named and flagged for easier identification from that window itself.&lt;ref name=&quot;johnrobbin&quot;&gt;{{cite web |url= http://www.wintellect.com/cs/blogs/jrobbins/archive/2007/08/01/neat-new-multithreaded-debugging-features-in-vs-2008.aspx |title=Neat New Multithreaded Debugging Features in VS 2008 |author=John Robbin |accessdate= 2007-09-24}}&lt;/ref&gt; In addition, in the code window, along with indicating the location of the currently executing instruction in the current thread, the currently executing instructions in other threads are also pointed out.&lt;ref name=&quot;johnrobbin&quot;/&gt;&lt;ref&gt;{{cite web |author=Scott Hanselman |title=Multi-threaded Debugging in Visual Studio 2008 |url= http://www.hanselman.com/blog/MultithreadedDebuggingInVisualStudio2008.aspx |accessdate=2007-09-24}}&lt;/ref&gt; The [[Microsoft Visual Studio Debugger|Visual Studio debugger]] supports integrated debugging of the .NET 3.5 Framework [[Base Class Library]] (BCL) which can dynamically download the BCL source code and [[debug symbol]]s and allow stepping into the BCL source during debugging.&lt;ref&gt;{{cite web |author=[[Scott Guthrie]] |title=Releasing the Source Code for the .NET Framework Libraries |url= http://weblogs.asp.net/scottgu/archive/2007/10/03/releasing-the-source-code-for-the-net-framework-libraries.aspx |accessdate=2007-10-04}}&lt;/ref&gt; {{As of | 2010}} a limited subset of the BCL source is available, with more library support planned for later.

===Visual Studio 2010 ===
[[Image:Visual Studio 2010 Logo Horizontal layout.jpg|thumb|right|The Microsoft Visual Studio 2010 logo.]]
On April 12, 2010, Microsoft released Visual Studio 2010, codenamed ''Dev10''&lt;ref&gt;[http://blogs.msdn.com/b/volkerw/archive/2009/05/18/visual-studio-2010-aka-dev10-beta-available-for-download.aspx Visual Studio 2010 aka. Dev10 Beta available for download]&lt;/ref&gt;, and [[.NET Framework 4]].&lt;ref&gt;[http://www.eweek.com/c/a/Application-Development/Microsoft-Releases-Visual-Studio-2010-NET-Framework-4-529948/ Microsoft Releases Visual Studio 2010, .NET Framework 4]&lt;/ref&gt;&lt;ref&gt;[http://www.thinkdigit.com/General/Microsoft-launches-Visual-Studio-2010-and-NET_4417.html Microsoft launches Visual Studio 2010 and .NET Framework 4]&lt;/ref&gt;

[[Image:VisualStudio2010.png|thumb|right|Visual Studio 2010 features a new UI developed using [[Windows Presentation Foundation|WPF]]]]

Visual Studio 2010 [[Integrated development environment|IDE]] has been redesigned which, according to [[Microsoft]], clears the UI organization and &quot;reduces clutter and complexity.&quot;&lt;ref name=&quot;firstlook&quot;/&gt; The new IDE better supports multiple document windows and floating tool windows,&lt;ref name=&quot;firstlook&quot;/&gt; while offering better multi-monitor support. The IDE shell has been rewritten using the [[Windows Presentation Foundation]] (WPF),&lt;ref&gt;{{cite web | url = http://www.onedotnetway.com/writing-visual-studio-2010-shell-in-wpf-reflects-confidence/ | title = Writing Visual Studio 2010 shell in WPF Reflects Confidence | publisher = One .NET Way | accessdate = 2009-04-18}}&lt;/ref&gt; whereas the internals have been redesigned using [[Managed Extensibility Framework]] (MEF) that offers more extensibility points than previous versions of the IDE that enabled add-ins to modify the behavior of the IDE.&lt;ref&gt;{{cite web | url = http://msmvps.com/blogs/carlosq/archive/2008/10/26/visual-studio-2010-extensibility-moving-beyond-add-ins-and-packages.aspx | title = Visual Studio 2010 Extensibility moving beyond add-ins and packages | author = Carlos Quintero | accessdate = 2009-04-18}}&lt;/ref&gt;

The new [[multi-paradigm programming language|multi-paradigm]] [[ML (programming language)|ML]]-variant [[F Sharp programming language|F#]] forms part of Visual Studio 2010;&lt;ref name=&quot;F#&quot;&gt;{{cite web | url = http://blogs.msdn.com/dsyme/archive/2008/12/10/fsharp-to-ship-as-part-of-visual-studio-2010.aspx | title = F# to ship as part of Visual Studio 2010 | accessdate = 2008-12-10}}&lt;/ref&gt; as do [[M (programming language)|M]], the textual modeling language, and ''Quadrant'', the visual model designer, which are a part of the [[Oslo (Microsoft)|Oslo]] initiative.&lt;ref&gt;{{cite web | url = http://www.sdtimes.com/link/32957 | title = Microsft details Oslo's modeling language, tools | publisher = SDTimes | accessdate = 2009-04-19}}
&lt;/ref&gt;

Visual Studio 2010 comes with [[.NET Framework 4]] and supports developing applications targeting [[Windows 7]].&lt;ref name=&quot;firstlook&quot;&gt;{{cite web | url = http://www.microsoft.com/visualstudio/en-us/products/2010/default.mspx | title = Visual Studio 2010 Team System First Look | publisher = [[Microsoft]] | accessdate = 2009-04-18 }}&lt;/ref&gt; It supports [[IBM DB2]] and [[Oracle Database|Oracle]] databases, in addition to [[Microsoft SQL Server]].&lt;ref name=&quot;firstlook&quot;/&gt; It has integrated support for developing [[Microsoft Silverlight]] applications, including an interactive designer.&lt;ref name=&quot;firstlook&quot;/&gt; Visual Studio 2010 offers several tools to make [[parallel programming]] simpler: in addition to the [[Parallel Extensions]] for the .NET Framework and the [[Visual C++#vc10|Parallel Patterns Library]] for [[native code]], Visual Studio 2010 includes tools for debugging parallel applications. The new tools allow the visualization of parallel [[Parallel Extensions#TPL|Tasks]] and their runtime [[Call stack|stack]]s.&lt;ref&gt;{{cite web | url = http://www.danielmoth.com/Blog/2008/11/debugging-parallel-applications-with.html | title = Debugging Parallel applications with VS2010 | author = Daniel Moth | accessdate = 2008-04-18}}&lt;/ref&gt; Tools for profiling parallel applications can be used for visualization of thread wait-times and thread migrations across processor cores.&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/magazine/cc817396.aspx | title = More support for parallelism in the next version of Visual Studio | accessdate = 2009-04-23 | publisher = [[MSDN]]}}&lt;/ref&gt; Intel and Microsoft have jointly pledged support for a new Concurrency Runtime in Visual Studio 2010&lt;ref&gt;{{cite web | url = http://www.sdtimes.com/INTEL_MICROSOFT_CONVERGE_ON_PARALLEL_COMPUTING/About_PARALLELPROGRAMMING_and_WINDOWS_and_INTEL_and_MICROSOFT/32731 | title = SD Times: Intel, Microsoft converge on parallel computing | author = David Worthington | accessdate = 2008-08-20}}
&lt;/ref&gt;
and Intel has launched parallelism support in [[Parallel Studio]] as an add-on for Visual Studio.&lt;ref&gt;{{cite web | url = http://sdtimes.com/link/33497 | title = Intel addresses development life cycle with Parallel Studio | author = David Worthington | accessdate = 2009-05-26}}&lt;/ref&gt;

The Visual Studio 2010 code editor now highlights references; whenever a symbol is selected, all other usages of the symbol are highlighted.&lt;ref name=&quot;dev10soma&quot;&gt;{{cite web | author = [[S. Somasegar]] | accessdate = 2008-04-18 | title = Code Focused Development in VS 2010 | url = http://blogs.msdn.com/somasegar/archive/2008/12/19/code-focused-development-in-vs-2010.aspx }}&lt;/ref&gt; It also offers a ''Quick Search'' feature to [[Incremental find|incrementally search]] across all symbols in C++, C# and VB.NET projects. Quick Search supports substring matches and [[camelCase]] searches.&lt;ref name=&quot;dev10soma&quot;/&gt; The ''Call Hierarchy'' feature allows the developer to see all the methods that are called from a current method as well as the methods that call the current one.&lt;ref name=&quot;dev10soma&quot;/&gt; [[IntelliSense]] in Visual Studio supports a ''consume-first'' mode which developers can opt into. In this mode, IntelliSense will not auto-complete identifiers; this allows the developer to use undefined identifiers (like variable or method names) and define those later. Visual Studio 2010 can also help in this by automatically defining them, if it can infer their types from usage.&lt;ref name=&quot;dev10soma&quot;/&gt; Current versions of Visual Studio have a known bug which makes IntelliSense unusable for projects using pure C (not C++).&lt;ref&gt;{{cite web | author = [[Medinoc]] | accessdate = 2011-08-28 | title = Bug: Intellisense believes itself in C++ while working on a C file. | url = http://social.msdn.microsoft.com/Forums/en/vcprerelease/thread/54995196-ab08-416d-9ddf-475bfb161779 }}&lt;/ref&gt;

Visual Studio 2010 features a new [[Microsoft Help Viewer|Help System]] replacing the [[MSDN Library]] viewer. The Help System is no longer based on [[Microsoft Help 2]] and does not use Microsoft Document Explorer. Dynamic help containing links to related help topics based on where the developer was in the IDE has been removed in the shipping product,&lt;ref&gt;[http://leedumond.com/blog/dynamic-help-removed-from-visual-studio-2010/ Dynamic Help Removed From Visual Studio 2010]&lt;/ref&gt; but can be added back using a download from Microsoft.&lt;ref&gt;{{cite web | accessdate = 2010-07-13 | title = Help Viewer Power Tool  | url = http://visualstudiogallery.msdn.microsoft.com/en-us/60a86afe-159b-4940-a22f-4fef055cbd63 }}&lt;/ref&gt;

Visual Studio 2010 no longer supports development for Windows Mobile prior to [[Windows Phone 7]].

====Visual Studio Ultimate 2010====
Visual Studio Ultimate 2010 (formerly Team System or Team Suite), codenamed ''Rosario''.&lt;ref&gt;{{cite web | url = http://www.microsoft.com/presspass/press/2008/sep08/09-29vs10pr.mspx | title = Microsoft Unveils Next Version of Visual Studio and .NET Framework | publisher = Microsoft | accessdate = 2011-06-17}}&lt;/ref&gt;&lt;ref&gt;{{cite web | url = http://msdn.microsoft.com/en-us/vstudio/bb725993.aspx | title = 'Visual Studio Team System Rosario' | accessdate = 2008-04-05}}&lt;/ref&gt; It includes new modeling tools,&lt;ref&gt;{{cite web | url = http://www.microsoft.com/presspass/press/2008/sep08/09-29VS10PR.mspx | title = Microsoft Unveils Next Version of Visual Studio and .NET Framework | publisher = [[Microsoft]] PressPass | accessdate = 2009-08-14}}&lt;/ref&gt; such as the ''Architecture Explorer'',  which graphically displays projects and classes and the relationships between them.&lt;ref&gt;{{cite web | url = http://visualstudiomagazine.com/columns/article.aspx?editorialsid=2583 | title = Doing Architecture with Team System Rosario | accessdate = 2009-04-18}}&lt;/ref&gt;&lt;ref name=&quot;aj&quot;&gt;{{cite web | url = http://ajdotnet.wordpress.com/2009/03/29/visual-studio-2010-architecture-edition/ | title = Visual Studio 2010 Architecture Edition | accessdate = 2009-04-18}}
&lt;/ref&gt;
It supports [[Unified Modeling Language|UML]] activity diagram, component diagram, (logical) class diagram, sequence diagram, and use case diagram.&lt;ref name=&quot;aj&quot;/&gt; Visual Studio Ultimate 2010 also includes ''Test Impact Analysis'' which provides hints on which test cases are impacted by modifications to the source code, without actually running the test cases.&lt;ref&gt;{{cite web | url = http://channel9.msdn.com/posts/VisualStudio/Historical-Debugger-and-Test-Impact-Analysis-in-Visual-Studio-Team-System-2010/ | title = Historical Debugger and Test Impact Analysis in Visual Studio Team System 2010 | publisher = [[Channel9]] | accessdate = 2009-04-18}}&lt;/ref&gt; This speeds up testing by avoiding running unnecessary test cases.

Visual Studio Ultimate 2010 also includes a ''Historical Debugger'' for [[managed code]] called ''IntelliTrace''. Unlike the current debugger, that records only the currently-active stack, IntelliTrace records all events like prior function calls, method parameters, events, exceptions etc. This allows the code execution to be rewound in case a breakpoint wasn't set where the error occurred.&lt;ref&gt;{{cite web | title = Whatâs new in Visual Studio Team System 2010: Episode 2 | url = http://blogs.msdn.com/habibh/archive/2008/10/01/what-s-new-in-visual-studio-team-system-2010-issue-2.aspx | author = Habib Heydarian | accessdate = 2008-04-18}}&lt;/ref&gt; IntelliTrace will cause the application to run slower than the current debugger, and will use more memory as additional data needs to be recorded. Microsoft allows configuration of how much data should be recorded, in effect allowing developers to balance speed of execution and resource usage. The ''Lab Management'' component of Visual Studio Ultimate 2010 uses virtualization to create a similar execution environment for testers and developers. The [[virtual machine]]s are tagged with checkpoints which can later be investigated for issues, as well as to reproduce the issue.&lt;ref&gt;{{cite web | url = http://blogs.microsoft.co.il/blogs/maordavid/archive/2008/12/22/visual-studio-2010-lab-management.aspx | title = Visual Studio 2010 Lab Management | accessdate = 2009-04-18}}&lt;/ref&gt; Visual Studio Ultimate 2010 also includes the capability to record test runs that capture the specific state of the operating environment as well as the precise steps used to run the test. These steps can then be played back to reproduce issues.&lt;ref&gt;{{cite web |title=Visual Studio 2010 to come with 'black box' |author= Ina Fried |accessdate=2009-04-18 |url=http://news.cnet.com/8301-13860_3-10052412-56.html |publisher=CBS Interactive Inc. |work=CNET News}}&lt;/ref&gt;

===Upcoming version ===
Information about the upcoming version of Visual Studio was revealed at TechEd 2011.&lt;ref name=&quot;TechEd 2011&quot;&gt;{{cite news
  |title = TechEd 2011: Visual Studio vNext Sneak Preview
  |work = The Visual Studio Blog
  |agency = [[MSDN Blogs]]
  |publisher = Microsoft Corporation
  |url=http://blogs.msdn.com/b/visualstudio/archive/2011/05/26/teched-2011-visual-studio-vnext-sneak-preview.aspx
  |date = 26 May 2011
  |accessdate = 14 October 2011
}}&lt;/ref&gt; On 16 September 2011 a complete 'Developer Preview' of Visual Studio 11 was published on Microsoft's website. Visual Studio 11 Developer Preview requires Windows 7, Windows Server 2008 R2, Windows 8, or later operating systems.&lt;ref&gt;{{Cite web
  |url = http://www.microsoft.com/download/en/details.aspx?DisplayLang=en&amp;id=27538
  |title = Visual StudioÂ® 11 Developer Preview Download
  |work = Microsoft Download Center
  |publisher = Microsoft Corporation
  |date = 16 September 2011
  |accessdate = 14 October 2011
}}&lt;/ref&gt; Versions of [[Microsoft Foundation Class Library]] (MFC) and C runtime (CRT) included with this release cannot produce software that is compatible with Windows XP except by using native multi-targeting and foregoing the newest libraries, compilers, and headers.&lt;ref&gt;{{Cite web
  |url = https://connect.microsoft.com/VisualStudio/feedback/details/690617
  |title = Bug: apps created with CRT and MFC vNext (11) cannot be used on Windows XP SP3
  |work = Microsoft Connect
  |publisher = Microsoft Corporation
  |date = 24 September 2011
  |accessdate = 14 October 2011
  |quote = This behavior is by design in MFC and CRT for Visual Studio vNext. The minimum supported operating systems are Windows Server 2008 SP2 and Windows Vista.
}}&lt;/ref&gt; 

On the 24 August 2011, a blog post by Sumit Kumar, a Program Manager on the Visual C++ team listed some of the features of the upcoming version of the Visual Studio C++ IDE:&lt;ref name=&quot;VC++ Team Blog Post&quot;&gt;{{cite news
  |last = Kumar
  |first = Sumit
  |title=First Look at the New C++ IDE Productivity Features in the Next Version of Visual Studio
  |url=http://blogs.msdn.com/b/vcblog/archive/2011/08/24/10200097.aspx
  |work = VC++ Team Blog
  |agency = MSDN Blogs
  |publisher = Microsoft Corporation
  |date = 24 August 2011
  |accessdate = 14 October 2011
}}&lt;/ref&gt;
* '''Semantic Colorization''': Improved syntax coloring, various user-defined or default colors for C++ syntax such as macros, enumerations, typenames, functions etc.&lt;ref name=&quot;VC++ Team Blog Post&quot;/&gt;
* '''Reference Highlighting''': Selection of a symbol highlights all of the references to that symbol within scope.&lt;ref name=&quot;VC++ Team Blog Post&quot;/&gt;
* '''New Solution Explorer''': New solution explorer allows for visualization of class and file hierarchies within a solution/project. Searching for calls to functions and uses of classes will be supported.&lt;ref name=&quot;VC++ Team Blog Post&quot;/&gt;
* '''Automatic Display of IntelliSense list''': IntelliSense will automatically be displayed whilst typing code, as opposed to previous versions where it had to be explicitly invoked through use of certain operators (i.e. the scope operator (::)) or shortcut keys (''Ctrl-Space'' or ''Ctrl-J'').&lt;ref name=&quot;VC++ Team Blog Post&quot;/&gt;
* '''Member List Filtering''': IntelliSense uses [[fuzzy logic]] to determine which functions/variables/types to display in the list. &lt;ref name=&quot;VC++ Team Blog Post&quot;/&gt;
* '''Code Snippets''': Code snippets are included in IntelliSense to automatically generate relevant code based on the user's parameters, custom code snippets can be created.&lt;ref name=&quot;VC++ Team Blog Post&quot;/&gt;

==Visual Studio Application Lifecycle Management==
{{Main|Visual Studio Application Lifecycle Management}}
'''Visual Studio Application Lifecycle Management''' is a collection of integrated software development tools developed by [[Microsoft]]. These tools include IDEs, source control, work items, collaboration, metrics, and reporting tools.
Visual Studio Application Lifecycle Management consists of four products:&lt;ref&gt;http://msdn.microsoft.com/library/fda2bad5(VS.100).aspx&lt;/ref&gt;
* [[Visual Studio]], which provides an IDE (Integrated Development Environment) for development and client side interfaces for the other products.
* [[Visual Studio Test Professional]], which provides an IDE for software testers to create and execute tests.
* [[Team Foundation Server]], which provides Source Code collaboration and data storage.
* [[Visual Studio Lab Management]], which provides a way for software testers to create and manage virtual environments.

==Pre-installed virtual machines==
Microsoft was (but no longer is) offering [[virtual machines]] with Visual Studio Team System 2008 and 2005 pre-installed in the documented [[VHD (file format)|Virtual Hard Disk]] format for trial use.&lt;ref&gt;{{cite web | url=http://www.microsoft.com/downloads/details.aspx?FamilyID=c7a809d8-8c9f-439f-8147-948bc6957812&amp;displaylang=en  | title=Team Suite 2008 Virtual Machine}}
&lt;/ref&gt;

==See also==
* [[Microsoft Visual Studio Express]]

==References==
{{Reflist|colwidth=30em}}

==External links==
*{{Official website|http://www.microsoft.com/visualstudio/}}
*[http://msdn.microsoft.com/vstudio/ Visual Studio Developers Center] on MSDN
*[http://blogs.msdn.com/b/jasonz/archive/2011/05/16/announcing-alm-roadmap-in-visual-studio-vnext-at-teched.aspx 2012 version announcing]

{{MS DevTools}}
{{Integrated development environments for C and C++}}
{{Integrated development environments for .NET}}
{{Microsoft}}

{{DEFAULTSORT:Visual Studio}}
&lt;!-- Please do not add [[Category:Article Feedback Pilot]]
[[Category:Microsoft development tools]] or [[Category:Integrated development environments]]. Category:Microsoft Visual Studio is already a sub-category of those categories. --&gt;
[[Category:Microsoft Visual Studio| ]]
[[Category:User interface builders]]

[[ar:ÙØ§ÙÙØ±ÙØ³ÙÙØª ÙÙØ¬ÙØ§Ù Ø³ØªÙØ¯ÙÙ]]
[[az:Microsoft Visual Studio]]
[[bn:à¦®à¦¾à¦à¦à§à¦°à§à¦¸à¦«à¦ à¦­à¦¿à¦à§à¦¯à¦¼à¦¾à¦² à¦¸à§à¦à§à¦¡à¦¿à¦]]
[[ca:Visual Studio]]
[[cs:Microsoft Visual Studio]]
[[da:Microsoft Visual Studio]]
[[de:Microsoft Visual Studio]]
[[es:Microsoft Visual Studio]]
[[fa:ÙØ§ÛÚ©Ø±ÙØ³Ø§ÙØª ÙÛÚÙØ§Ù Ø§Ø³ØªÙØ¯ÛÙ]]
[[fr:Visual Studio]]
[[gu:àª®àª¾àªàªà«àª°à«àª¸à«àª«à«àª àªµàª¿àªà«àª¯à«àªàª² àª¸à«àªà«àª¡àª¿àª¯à«]]
[[ko:ë§ì´í¬ë¡ìíí¸ ë¹ì£¼ì¼ ì¤íëì¤]]
[[hi:à¤®à¤¾à¤à¤à¥à¤°à¥à¤¸à¥à¤«à¥à¤ à¤µà¤¿à¤à¥à¤à¤² à¤¸à¥à¤à¥à¤¡à¤¿à¤¯à¥]]
[[id:Microsoft Visual Studio]]
[[it:Microsoft Visual Studio]]
[[he:×××'××× ×¡×××××]]
[[kn:à²®à³à²à³à²°à³à²¸à²¾à²«à³à²à³ à²µà²¿à²·à³à²¯à²²à³ à²¸à³à²à³à²¡à²¿à²¯à³]]
[[hu:Microsoft Visual Studio]]
[[ms:Microsoft Visual Studio]]
[[nl:Visual Studio]]
[[ja:Microsoft Visual Studio]]
[[no:Visual Studio]]
[[nn:Visual Studio]]
[[pl:Microsoft Visual Studio]]
[[pt:Microsoft Visual Studio]]
[[ro:Visual Studio]]
[[ru:Microsoft Visual Studio]]
[[sq:Microsoft Visual Studio]]
[[si:à¶¸à¶ºà·à¶à·âà¶»à·à·à·à·à·à¶§à· à·à·à·à·à·à¶½à· à·à·à¶§à·à¶©à·à¶ºà·]]
[[fi:Visual Studio]]
[[sv:Microsoft Visual Studio]]
[[tl:Microsoft Visual Studio]]
[[ta:à®®à¯à®à¯à®°à¯à®à®¾à®ªà¯à®à¯ à®µà®¿à®à¯à®µà®²à¯ à®¸à¯à®à¯à®à®¿à®¯à¯]]
[[th:à¹à¸¡à¹à¸à¸£à¸à¸­à¸à¸à¹ à¸§à¸´à¸à¸§à¸¥à¸ªà¸à¸¹à¸à¸´à¹à¸­]]
[[tr:Microsoft Visual Studio]]
[[uk:Microsoft Visual Studio]]
[[zh:Microsoft Visual Studio]]</rev></revisions></page></pages></query></api>
