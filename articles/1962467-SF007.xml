<?xml version="1.0"?><api><query><pages><page pageid="1962467" ns="0" title="Visual J++"><revisions><rev xml:space="preserve">{{about|the J++ language shipping with Microsoft Visual Studio 6.0|the J# shipping with Microsoft Visual Studio .NET|J Sharp|the virtual machine|Microsoft Java Virtual Machine}}

'''Visual J++''' ''(pronounced &quot;Jay Plus Plus&quot;)'' was [[Microsoft]]'s specific implementation of [[Java (programming language)|Java]]. [[Syntax of programming languages|Syntax]], [[Keyword (computer programming)|keywords]], and [[Formal grammar|grammatical conventions]] were the same as Java's. Microsoft discontinued support of J++ in January 2004&lt;ref&gt;http://www.informit.com/articles/article.aspx?p=101152&lt;/ref&gt;, replacing it to a certain extent with [[J Sharp|J#]] and [[C Sharp (programming language)|C#]].

== J++ compared to Sun's Java implementation ==
While J++ conformed to the Java [[Programming language specification|language specification]], [[Microsoft]] did not implement certain features of the official Sun Java implementation in its Visual J++ product line. [[Java remote method invocation|Remote Method Invocation]] (Java RMI) and [[Java Native Interface]] (JNI) are such examples&lt;ref&gt;{{cite web
| url=http://www.xent.com/FoRK-archive/july97/0491.html
| title=JFC; Microsoft declares war
| publisher=xent.com
| date=1997-08-01
| accessdate=2007-07-14}}&lt;/ref&gt;&lt;ref&gt;{{cite web
| url=http://www.javaworld.com/javaworld/jw-07-1997/jw-07-jdirect.html?page=1
| title=Microsoft's J/Direct called death of Java
| publisher=[[JavaWorld]]
| date=1997-07-01
| accessdate=2010-11-20}}&lt;/ref&gt;.

In addition, J++ implemented other extensions that were not part of Sun's Java implementation. The inclusion of [[Callback (computer science)|callbacks]] and [[Delegate (.NET)|delegates]] for [[Event handler|event handling]] further contributed to defining J++ as a completely different language merely based on an already existing design concept.

Furthermore, J++ applications did not conform to the standardized method of accessing the underlying operating system functions as any other Java application under [[Java Development Kit|Sun's Java SDK]]. In [[Microsoft]]'s implementation, an underlying [[Software framework|framework]] called [[J/Direct]] provided a base mechanism that allowed J++ applications to completely circumvent Java's [[Library (computing)|class libraries]] and [[Application programming interface|API]] media in accessing the underlying operating system. Due to this short-cut around the original [[Java collections framework|Java framework]], J++ applications were more efficient in taking advantage of [[Win32]] [[Application programming interface|API]] functions than Java applications.

J++ applications using these features could not be run on Sun's Java SDK, but the [[Kaffe]] project developed extensions which made it possible to run J++ applications with these features on their open sourced [[Java Virtual Machine|JVM]]. However, these extensions (implemented by TransVirtual under Microsoft funding) were not widely used, and J++ applications still needed to be compiled on Visual J++ before being able to be run by [[Kaffe]].&lt;ref&gt;{{cite web
| url=http://www.linuxjournal.com/article/3482
| title=Transvirtual Adopts Microsoft Java Extensions
| publisher=linuxjournal.com
| date=1999-01-10
| accessdate=2007-08-01}}&lt;/ref&gt;&lt;ref&gt;{{cite web
| url=http://developers.slashdot.org/article.pl?sid=99/06/14/1513235
| title= Java-Clone Announced
| publisher=slashdot.org
| date=1999-06-14
| accessdate=2007-08-01}}&lt;/ref&gt;

Visual J++ supported [[ActiveX]].&lt;ref name=msdvj&gt;{{cite news|title=MS debuts Visual J++|url=http://news.cnet.com/MS-debuts-Visual-J/2100-1001_3-233769.html|accessdate=31 October 2011|newspaper=CNet|date=October 1, 1996}}&lt;/ref&gt;

== The WFC ==&lt;!-- This section is linked from [[Anders Hejlsberg]] --&gt;
The Windows Foundation Classes (WFC) encapsulated the Microsoft [[Win32]] platform [[Application programming interface|API]] and [[Dynamic HTML|DHTML]] object models into a unified class library. WFC was primarily designed for creating [[graphical user interface]]s for Java applications on Windows.

== Sun's litigation against Microsoft ==
[[Sun Microsystems]] had originally licensed Java to [[Microsoft]] but later initiated litigation against Microsoft for trademark violation.  (Sun's trademark license for usage of the Java brand insists that all implementations be &quot;compatible&quot;.)

Some observers have remarked that this was deliberate from Microsoft, in an attempt to at least slow the advance of Sun's Java technology.&lt;ref&gt;{{cite news
| url=http://query.nytimes.com/gst/fullpage.html?res=9F01E2DC1638F936A15756C0A96E958260
| title=Still Another Adversary for Microsoft
| publisher=[[New York Times]]
| date=1998-05-25
| quote=''A September 1997 E-mail message, sent by a Microsoft official identified as P. Sridharan, is quoted as saying: &quot;Let's move on and steal the Java language. That said, have we ever taken a look at how long it would take Microsoft to build a cross-platform Java that did work? Naturally, we would never do it, but it would give us some idea of how much time we have to work with in killing Sun's Java.&quot;''
| accessdate=2009-03-15
| first=Steve
| last=Lohr}}&lt;/ref&gt;&lt;ref&gt;{{cite web
| url=http://www.ecis.eu/documents/Finalversion_Consumerchoicepaper.pdf
| title=Microsoft A History of Anticompetitive Behavior and Consumer Harm
| publisher=[[European Committee for Interoperable Systems]]
| date=2009-03-31
| quote=''We should just quietly grow j++ share and assume that people will take more advantage of our classes without ever realizing they are building win32-only java apps.''
| accessdate=2009-04-22}}&lt;/ref&gt;

The failure of the MSJVM to pass Sun's [[Software testing|compliance tests]] was a large factor in the initial lawsuit. On January 24, 2001, this and all other outstanding Sun-Microsoft lawsuits were settled as part of a wide-ranging agreement between Sun and Microsoft.&lt;ref&gt;{{cite web
| url=http://www.news.com/Sun-settles-with-Microsoft,-announces-layoffs/2100-1014_3-5183848.html
| title=Sun settles with Microsoft, announces layoffs
| publisher=www.news.com
| date=2004-04-02
| accessdate=2007-10-03}}&lt;/ref&gt; The settlement document outlined that Microsoft also could not advance J++ beyond its mirrored implementation of Java, version 1.1.4. This effectively ended J++ and further updates. As well, the MSJVM had to cease to be distributed and is no longer available for download. 

However, due to settlement of outstanding litigation, Microsoft was allowed further to update the MSJVM to fix [[Vulnerability (computing)|security holes]] and any problems relating to the security threat. Microsoft has since ceased support for the MSJVM on December 31, 2007.&lt;ref&gt;{{cite web
| url=http://www.microsoft.com/mscorp/java/default.mspx
| title=Microsoft Java Virtual Machine Support
| publisher=Microsoft
| date=2007-03-02
| accessdate=2007-10-09}}&lt;/ref&gt;

The technology of J++ was eventually recycled, and survived for a while, as part of the [[Microsoft .NET]] platform and the [[J Sharp|J#]] programming language.

== Visual J++ - The IDE ==

Visual J++ was also the name of the [[Integrated Development Environment]] (IDE) for J++ and provided many tools and utilities to help J++ programmers fully leverage the [[Win32]] [[API]].

Visual J++ is no longer available for distribution, but it was part of the [[Microsoft Visual Studio]] product line.  [[Microsoft Visual Studio#Visual_Studio_6.0_.281998.29|Visual Studio 6.0]] was the last release to include J++.

== Visual J# ==
[[J Sharp|Visual J#]] ''(pronounced &quot;Jay Sharp&quot;)'' is a [[Microsoft]] language whose syntax is close to Java, part of the [[.NET Framework]]. Visual J# is part of the Microsoft Visual Studio .NET product suite and is designed to help developers and programmers migrate from J++ (or Java) to the [[.NET Framework]]. 

Microsoft later developed the [[C Sharp (programming language)|C#]] (&quot;C Sharp&quot;) language as the primary language for the .NET platform, which was in many ways influenced by Java; subsequently the .NET Framework shares many ideas in common with Java. Much like Java, C# is compiled to a type of bytecode (called [[Common Intermediate Language|CIL]]), and runs on top of a virtual machine called the [[Common Language Runtime]] in .NET. Visual Studio 2005 was the last release to include J#.

==References==
{{reflist|2}}

==External links==
* [http://web.archive.org/web/20060207010919/http://msdn.microsoft.com/vjsharp/productinfo/visualj/visualj6/datasheet/features/default.aspx Product Features in Visual J++ - By Edition]
* [http://msdn.microsoft.com/vjsharp/ Microsoft Visual J#]
* [http://www.microsoft.com/mscorp/java/ Microsoft Java Web Site]
* [http://www.microsoft.com/presspass/press/2004/apr04/04-02SunAgreementPR.asp Sun's Agreement with Microsoft]

[[Category:Microsoft Visual Studio|J++]]
[[Category:Discontinued Microsoft development tools]]

[[ca:J++]]
[[es:J++]]
[[fr:Visual J++]]
[[ko:ë¹ì£¼ì¼ J++]]
[[ja:Microsoft Visual J++]]
[[it:Visual J++]]
[[pl:Visual J++]]
[[pt:Visual J++]]
[[ru:Visual J++]]
[[sv:J++]]
[[tg:Visual J++]]
[[zh:Visual J++]]</rev></revisions></page></pages></query></api>
