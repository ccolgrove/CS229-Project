<?xml version="1.0"?><api><query><redirects><r from="User-mode-linux" to="User-mode Linux" /></redirects><pages><page pageid="373697" ns="0" title="User-mode Linux"><revisions><rev xml:space="preserve">'''User-mode Linux''' (UML) enables multiple virtual [[Linux]] systems (known as guests) to run as an application within a normal Linux system (known as the host). As each guest is just a normal application running as a process in [[user space]], this approach provides the user with a way of running multiple virtual Linux machines on a single piece of hardware, offering excellent security and safety{{Citation needed|date=September 2011}} without affecting the host environment's configuration or stability.

==Applications of UML==
Numerous things become possible through the use of UML. One can run [[computer network|network]] services from a UML environment and remain totally sequestered from the main Linux system in which the UML environment runs. Administrators can use UML to set up [[honeypot (computing)|honeypot]]s, which allow one to test the security of one's computers or network. UML can serve to test and debug new software without adversely affecting the host system. UML can also be used for teaching and research, providing a realistic Linux networked environment with a high degree of safety.

In UML environments, host and guest kernel versions need not match, so it is entirely possible to test a &quot;[[bleeding edge]]&quot; version of Linux in User-mode on a system running a much older kernel. UML also allows kernel debugging to be performed on one machine, where other kernel debugging tools (such as [[kgdb]]) require two machines connected with a [[null modem]] cable.

Some [[web hosting]] providers offer UML-powered [[virtual server]]s for lower prices than true [[dedicated hosting service|dedicated servers]]. Each customer has [[Root user|root]] access on what appears to be their own system, while in reality one physical computer is shared between many people.

== Integration into the Linux kernel==
The UML guest application (a [[Linux kernel|Linux]] binary [[Executable and Linkable Format|ELF]]) was originally available as a [[patch (computing)|patch]] for some Kernel versions above 2.2.x, and the host with any kernel version above 2.2.x supported it easily in the thread mode (i.e., non-SKAS3).

As of [[Linux kernel|Linux]] 2.6.0, it is integrated into the main [[kernel (computer science)|kernel]] source tree. A method of running a separate kernel address space (SKAS) that does not require host kernel patching has been implemented. This improves performance and security over the old Traced Thread approach, in which processes running in the UML share the same address space from the host's point of view, which leads the memory inside the UML to not be protected by the [[Memory management unit]]. Unlike the current UML using SKAS, buggy or malicious software inside a UML running on a non-SKAS host could be able to read the memory space of other UML processes or even the UML kernel memory.

==Comparison with other technologies==
User-mode Linux is generally considered to have lower performance than some competing technologies, such as [[Xen]] and [[OpenVZ]]{{Citation needed|date=September 2011}}. Future work in adding support for [[x86 virtualization]] to UML may reduce this disadvantage.

Often cited as a strength of [[Xen]] (a competing technology) is support for [[Thread-local storage|Thread Local Storage]] (TLS). This is now also supported in the latest UML kernels. Xen concentrates on virtualizing the whole machine, and thus all systems running on a Xen machine are really virtual machines. In UML, the host machine is not virtualized in any way, and only guest systems are true virtual machines.

==Supported platforms==
UML was originally designed for [[X86 architecture|x86]] processors, but has also been ported to other architectures including [[IA-64]] and [[PowerPC]]; the only currently working port is to the [[x86-64]] architecture{{Citation needed|date=September 2011}}.

==See also==
*[[CoLinux]]
*[[MkLinux]]

==External links==
*[http://user-mode-linux.sourceforge.net/ User-mode Linux Kernel Home Page]
*[http://www.landley.net/code/UML.html Rob's quick and dirty UML howto]
*[http://uml.devloop.org.uk/ More recent Kernels and filesystems]
*[http://eggdrop.ch/texts/uml/ Running Debian inside of Debian with User-Mode Linux]
*[http://linuxzoo.net/ Linuxzoo] - Online free access UMLs
*Armin M. Warda: [http://www.user-mode-linux.org/~jdike/armin/Virtual-UML-Lab-Presentation.pdf Virtual Labs with User Mode Linux] 2004
*[http://www.dit.upm.es/vnuml Virtual Network User Mode Linux (VNUML)] - Virtual network scenarios based on UML
*[http://www.netkit.org NetKit] - Emulating a Virtual Network using UML
*[http://www.[[marionnet]].org Marionnet] - Another network emulator based on UML
*[http://cloonix.net Cloonix-Net] - Virtual Network emulation using UML
*[http://www.cs.mcgill.ca/~anrl/gini GINI] - Virtual network based teaching toolkit using UML

==Historical links==
These are either out of date or unavailable:
*[http://www.coherenthosting.com/prj/uml/henrique/pool_h01/ UML Kernel and Root File System Images], main mirror of [http://moreira.dnsalias.net/my_uml/pool_h01/]
*[http://uml.jfdi.org/ User-mode Linux wiki]
&lt;!--  *[http://www.user-mode-linux.org/ User-mode Linux Community Site] &lt;!-- Unreachable as of 20060817 ''(formerly www.usermodelinux.org/)'' redundant - seems to be changed to 1st link--&gt;
*[http://matrixstorm.com/matrixstorm/data/main/software/index.html recent UML SKAS3 Patches]

[[Category:Free virtualization software]]

[[ca:User-Mode Linux]]
[[de:User Mode Linux]]
[[es:User Mode Linux]]
[[fr:User Mode Linux]]
[[ja:User Mode Linux]]
[[pl:User-mode Linux]]
[[ru:User-mode Linux]]</rev></revisions></page></pages></query></api>
