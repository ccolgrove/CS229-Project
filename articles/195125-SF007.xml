<?xml version="1.0"?><api><query><pages><page pageid="195125" ns="0" title="Robocode"><revisions><rev xml:space="preserve">{{Original research|date=April 2010}}
{{Unreferenced|date=April 2010}}
{{Infobox software
| name                   = Robocode
| logo                   =
| screenshot             = [[File:Robocode-logo.png|250px|[[Splash screen]]]]
| caption                =
| collapsible            =
| author                 = Mathew Nelson
| developer              = Flemming N. Larsen
| released               = {{Start date|2001|02}}
| latest release version = 1.7.3.2
| latest release date    = {{Start date and age|2011|8|23}}
| programming language   = Java, [[.NET Framework|.NET Framework programming languages]] ([[C Sharp (programming language)|C#]], [[Visual Basic .NET|VB.NET]], etc.)
| operating system       = [[Cross-platform]] (Requires [[Java (programming language)|Java]] for core and [[.NET Framework]] for .NET)
| platform               = [[Java (programming language)|Java]]
| size                   = 5.0 MB
| language               = English
| status                 = Active
| genre                  = [[Programming game]]
| license                = [[Common Public License]]
| website                = http://robocode.sourceforge.net/
}}
'''Robocode''' is an [[open source]] [[educational game]] started by Mathew Nelson (originally provided by [[International Business Machines|IBM]]). Currently contributions are being made by various people; officially Flemming N. Larsen and Pavel Å avara are working on Robocode to keep it current and fix the bugs. The game is designed to help people learn to program in [[Java (programming language)|Java]] or, starting in version 1.7.2, [[.NET Framework|.NET Framework programming languages]] ([[C Sharp (programming language)|C#]], [[Visual Basic .NET|VB.NET]], etc.), and enjoy the experience. It is very easy to start - a simple robot can be written in just a few minutes - but perfecting a bot can take months or more.

== The game ==
Competitors write [[software]] that controls a miniature [[tank]] that fights other identically-built (but differently programmed) tanks in a playing field. Robots can move, shoot at each other, scan for each other, and hit the walls (or other robots) if they aren't careful. Though the idea of this &quot;game&quot; may seem simple, the actual strategy needed to win is not. Good robots can have thousands of lines in their code dedicated to strategy. Some of the more successful robots use techniques such as [[statistical analysis]] or attempts at [[neural network]]s in their designs.

== Safely run other peoples' bots ==
One can test a robot against many other competitors by downloading their Java [[bytecode]] or [[Common Language Runtime|CLR]] Class Library, so design competition is fierce. Robocode provides a [[Sandbox (security)|security sandbox]] (bots are restricted in what they can do on the machine they run on), which makes internet redistribution safe.

== Movement and Targeting ==
Robocode competition is all about two things:
# Avoid getting hit too much ([http://robowiki.net/wiki/Category:Movement Movement])
# Try to predict where the opponent(s) will move and hit them as much as possible ([http://robowiki.net/wiki/Category:Targeting Targeting])
Many sophisticated techniques have emerged. In particular, many top bots utilize:
* [http://robowiki.net/wiki/Wave_Surfing Wave Surfing] - Adapting your movement and trying to avoid getting hit the same way twice.
* [http://robowiki.net/wiki/Category:Statistical_Targeting Statistical Targeting] - Collect data that describes the targeting situation together with what would have been the correct decision for each situation. Use this data to make targeting decisions.
* [http://robowiki.net/wiki/GuessFactor_Targeting GuessFactor Targeting] - The best known form of Statistical Targeting where the stats for enemy robots are each expressed through a number between -1.0 and 1.0 (the &quot;[http://robowiki.net/wiki/GuessFactor GuessFactor]&quot;).
* [http://robowiki.net/wiki/Pattern_Matching Pattern Matching] - Tries to match patterns of observed behavior with previously observed patterns, and make decisions on targeting based around that.

== Sample bots ==
Several sample robots are included in Robocode to help the beginners get started. They demonstrate various basic techniques used in coding robots, from [[event-driven programming]] to writing out data to files for use later.

== Open source bots ==
The RoboWiki has an extensive list of [[open source]] robots [http://robowiki.net/wiki/Category:Open_Source_Bots].
It isn't complete, but it ''is'' extensive.

== Code size restraints ==
To force the competitors to prioritize what features to include in a bot there are four codesize categories (codesize is measured in bytes by [http://user.cs.tu-berlin.de/~lulli/codesize/ a tool]):
# [http://robowiki.net/wiki/Category:MegaBots Megabots] - no codesize restriction
# [http://robowiki.net/wiki/Category:MiniBots Minibots] - less than 1500 bytes
# [http://robowiki.net/wiki/Category:MicroBots Microbots] - less than 750 bytes
# [http://robowiki.net/wiki/Category:NanoBots Nanobots] - less than 250 bytes

There is no equivalent for .NET robot yet.

== Leagues ==
There exist (and have existed) several leagues for Robocode.

=== RoboRumble@Home ===
The main active competition is the [http://robowiki.net/wiki/RoboRumble RoboRumble@Home], a continuous league based on distributed computation in a similar way to SETI@Home. The RR@H features leagues for 1-on-1, melee (free for all with more than two bots) and teams. 1-on-1 and melee competitions are carried out for the four main code size categories.

The RR@H uses a rating system based on the average score a bot scores against all others, known as Averaged Percentage Score, or APS. There is also a ranking where only winning or losing counts, with 2 points given for a win, 1 for a tie, and 0 for a loss, known as the Premier League or PL. The name was inspired by the English soccer league of the same name, which works off of a similar ranking mechanism.

While the APS tends to be a ranking that reflects strength against weaker and stronger bots alike, the PL tends to reflect strength against the stronger bots. So while one bot may be very effective at dodging simple targeting with 90% accuracy, and thus gets a high APS score, another bot may only dodge with 70% accuracy (i.e. still winning) but be able to fight stronger bots more effectively. Thus it would get a lower APS score but a higher PL ranking.

Currently, the RoboRumble@Home only supports Java robots.

==== Current rankings ====
The current ranking for RoboRumble is available at http://darkcanuck.net/rumble.

=== Robocode Little League ===
While no longer active, the [http://robocode.yajags.com/ Robocode Little League] (a weekly competition specifically for codesize-constrained bots) still provides tables on the past tournaments run.

=== Twin Duel ===
[http://robowiki.net/wiki/TwinDuel Twin Duel] is a 2v2 weekly survivalist tournament. It has been absent for a while, but now it is active again. This tournament also brings new challenges to Robocoders. They need a good mix of both one-on-one and melee strategy in order to gain the successful around{{Clarify|date=August 2010}} this game. This is a codesize-restricted league, which only allow teams under 2,000 bytes to participated. The format of this tournament is single-elimination round-robin with an exception of the final which is best of 3 series.

=== Current international competitions ===

* Virtual Combat held by [[CodeFest]]'11, the annual international online coding festival of Computer Engineering Society, IT-BHU
* Robocode UdL held by the [[Universitat de Lleida]]
* Robocode Ireland - Robocode Ireland, Games Fleadh Game Festival
* IPL Robocode competition 2010 - Belgian Robocode Competition

== Some robots worth mentioning ==
{{Fanpov|date=May 2010}}
Many bots are worth mentioning, of course, but some are more spectacular in their performance than others, and some have influenced Robocode bot development more than others.

=== RR@H Champions ===
The current (September 29, 2009) champions of the RR@H are:
{| border=1 cellspacing=0 cellpadding=0
|-
! Codesize !! Battle type !! Bot !! Comment
|-
| ''Megabots'' || 1-on-1  || [http://robowiki.net/wiki/DrussGT DrussGT] || [[Open source]]
|-
|              || melee   || [http://robowiki.net/wiki/Diamond Diamond] || There is currently a race between [http://robowiki.net/wiki/Portia Portia], [http://robowiki.net/wiki/Diamond Diamond] and [http://robowiki.net/wiki/Shadow Shadow]. Any of those can take melee rumble throne within single updates.
|-
|              || overall || [http://robowiki.net/wiki/Shadow Shadow] || Undefeatable in 1-on-1 and melee for a very long time.
|-
| ''Minibots'' || 1-on-1  || [http://robowiki.net/wiki/CunobelinDC CunobelinDC] || First minibot to use a [[k-nearest neighbor algorithm]] (more commonly known as [http://robowiki.net/wiki/Dynamic_Clustering Dynamic Clustering] in Robocode) Also [[open source]].
|-
|              || melee   || [http://robowiki.net/wiki/GlowBlowMelee GlowBlowMelee] ||
|-
|              || overall || hard to tell  || No mini melee bot is very good at 1-on-1
|-
| ''Microbots'' || 1-on-1  || [http://robowiki.net/wiki/Toorkild Toorkild] || [[open source]]
|-
|              || melee   || [http://robowiki.net/wiki/Sprout Sprout] || [[open source]]
|-
|              || overall || hard to tell  || No micro melee bot is very good at 1-on-1
|-
| ''Nanobots'' || 1-on-1  || [http://robowiki.net/wiki/LittleBlackBook  LittleBlackBook] || First nanobot featuring a GuessFactor Targeting. Also [[open source]].
|-
|              || melee   || [http://robowiki.net/wiki/DustBunny DustBunny] || [[open source]]
|-
|              || overall || [http://robowiki.net/wiki/WeekendObsession WeekendObsession] || It isn't same version, but the same ideas.
|-
| ''Unrestricted'' || team || [http://robowiki.net/wiki/Shadow Shadow] || Great performance all the time among one-on-one, melee and team.
|-
| ''2000 bytes'' || twin duel || [http://robowiki.net/wiki/LunarTwins LunarTwins] || Great performance with nice 2v2 strategy
|}

=== Influential bots ===
*  [http://robowiki.net/wiki/SandboxDT SandboxDT] was once an unbeatable robot. It had been staying as a crown for a long time and only been dethroned twice! First time by Duelist and second time by Shadow, which ended its reign. Nowadays, it still continues to be a strong competitor, drawing in new coders and bots.
* [http://robowiki.net/wiki/Shadow Shadow], a bot which introduces Wave Surfing concept into Robocode. While isn't the king, it had been untouchable for long time. It still holds a melee crown.
* [http://robowiki.net/wiki/FloodMini FloodMini], an [[open source]] minibot featuring Statistical Targeting, had help many Robocoders into understand the concept of Statistical Targeting.
* [http://robowiki.net/wiki/CassiusClay CassiusClay], an [[open source]] top bot, has helped coders grasp advanced movement and targeting techniques.
* [http://robowiki.net/wiki/Phoenix Phoenix], the current #5 bot, has helped to demonstrate the power of graphical debugging. The code used to draw debugging information onto the screen is open-source, released as [http://davidalves.net/robocode/sample/DrawingBot.java DrawingBot].
* [http://robowiki.net/wiki/YersiniaPestis YersiniaPestis], the current #11 robot, is the first robot which managed to take the PL crown from Shadow.

== The Robocode Wiki ==
The main site for Robocode knowledge and discussions is the [http://robowiki.net/ RoboWiki]. Here you can read about techniques and strategies, browse info on many bots, find source code (both code snippets and complete competitive bots), ask for help and more. The RoboWiki also hosts the RoboRumble@Home.

Beginners in Robocode might want to start with [http://robowiki.net/wiki/Robocode/FAQ The Robocode Beginners FAQ].

== See also ==
{{Portal box|Robotics|Video games|Free software}}

* [[RoboWar]]
* [[Crobots]]

==External links==
* [http://robocode.sourceforge.net/ Official Website]
* [http://sourceforge.net/projects/robocode/ Robocode] on SourceForge.net
* [http://robowiki.net/ RoboWiki]
* [http://old.robowiki.net/ Old RoboWiki]
* [http://www.gamemakeracademy.org/robocode/ Chicago (USA) Robocode Competition]
* [http://www.robocode.ie/ Irish Robocode Competition]
* [http://www.robocode.de/ German Robocode Website]
* [http://robocode.org.ru/ Russian Robocode Community Website]
* [http://robocode.udl.cat/ Catalan Robocode Website]
* [http://jgap.sourceforge.net/ Evolving Robocode robots with JGAP (Java Genetic Algorithms and Genetic Programming Package)]
* [http://hvilela.blogspot.com/2009/02/robocode-and-genetic-algorithms.html Robocode and Genetic Algorithms]
* [http://www.pureai.com/tankai/default.aspx TankAI - C# game similar to Robocode]
* [http://www.marvinsarena.com/ Marvinâs Arena - C# game similar to Robocode]

[[Category:Programming games]]
[[Category:Programming contests]]
[[Category:Cross-platform software]]
[[Category:Multi-agent systems]]

[[bg:Robocode]]
[[ca:Robocode]]
[[cs:Robocode]]
[[de:Robocode]]
[[fr:Robocode]]
[[it:Robocode]]
[[ja:Robocode]]
[[pl:Robocode]]
[[pt:Robocode]]</rev></revisions></page></pages></query></api>
