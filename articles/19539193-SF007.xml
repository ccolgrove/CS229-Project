<?xml version="1.0"?><api><query><redirects><r from="Android SDK" to="Android software development" tofragment="Android SDK" /></redirects><pages><page pageid="31759854" ns="0" title="Android software development"><revisions><rev xml:space="preserve">[[File:Galaxy Nexus smartphone.jpg|thumb|[[Galaxy Nexus]], part of the [[Google Nexus]] series, a line of &quot;developer-friendly&quot; phones]]
'''Android software development''' is the process by which new applications are created for the [[Android (operating system)|Android operating system]]. Applications are usually developed in the [[Java (programming language)|Java]] programming language using the Android [[Software Development Kit]], but other development tools are available. As of April 2011 more than 200,000 applications have been developed for Android, with over 3 billion downloads.&lt;ref name=&quot;200,000&quot;&gt;{{cite web |title=Android App Stats|url=http://www.androlib.com/appstats.aspx|accessdate=31 December 2010}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url= http://techcrunch.com/2011/04/14/google-3-billion-android-apps-installed-up-50-percent-from-last-quarter/ |title=Google: 3 Billion Android Apps Installed; Downloads Up 50 Percent From Last Quarter |author=Leena Rao|work=Techcrunch|date=14 April 2011|accessdate=13 May 2011}}&lt;/ref&gt;. The Android platform has also grown to become a favorite among mobile developers. A June 2011 research indicated that over 67% of mobile developers used the platform, at the time of publication. &lt;ref&gt;{{cite web |url =http://www.visionmobile.com/blog/2011/06/developer-economics-2011-winners-and-losers-in-the-platform-race/ |title= Developer Economics 2011}}&lt;/ref&gt;

==Software development tools==
===Android SDK===
The Android [[software development kit]] (SDK) includes a comprehensive set of development tools.&lt;ref&gt;{{cite web |url = http://developer.android.com/guide/developing/tools/index.html |title = Tools Overview |work = Android Developers |date = 21 July 2009}}&lt;/ref&gt; These include a [[debugger]], [[Software library|libraries]], a handset [[emulator]] (based on [[QEMU]]), documentation, sample code, and tutorials. Currently supported development platforms include computers running [[Linux kernel|Linux]] (any modern desktop [[List of GNU/Linux distributions|Linux distribution]]), [[Mac OS X]] 10.4.9 or later, [[Windows XP]] or later. The officially supported [[integrated development environment]] (IDE) is [[Eclipse (software)|Eclipse]] (currently 3.5 or 3.6) using the Android Development Tools (ADT) Plugin, though developers may use any text editor to edit Java and XML files then use [[command line]] tools ([[Java Development Kit]] and [[Apache Ant]] are required) to create, build and debug Android applications as well as control attached Android devices (e.g., triggering a reboot, installing software package(s) remotely).&lt;ref&gt;{{cite web |url = http://jonwestfall.com/2009/08/backup-restore-android-apps-using-adb/ |title = Backup &amp; Restore Android Apps Using ADB |first = Jon |last = Westfall |date = 25 August 2009 |work = JonWestfall.com |accessdate =2009-12-07}}&lt;/ref&gt;

Enhancements to Android's SDK go hand in hand with the overall Android platform development. The SDK also supports older versions of the Android platform in case developers wish to target their applications at older devices. Development tools are downloadable components, so after one has downloaded the latest version and platform, older platforms and tools can also be downloaded for compatibility testing.&lt;ref&gt;{{cite web |url=http://developer.android.com/sdk/tools-notes.html |title=SDK Tools}}&lt;/ref&gt;

Android applications are packaged in [[APK (file format)|.apk]] format  and stored under &lt;code&gt;/data/app&lt;/code&gt; folder on the Android OS (the folder is accessible only to root user for security reasons). APK package contains .dex files&lt;ref&gt;{{cite web |url=http://developer.android.com/guide/appendix/glossary.html |title=Android SDK Glossary}}&lt;/ref&gt; (compiled byte code files called [[Dalvik Virtual Machine|Dalvik]] executables), resource files, etc.

===Native Development Kit===
Libraries written in [[C (programming language)|C]] and other languages can be compiled to [[ARM architecture|ARM]] or [[X86|x86]] [[native code]] and installed using the Android [[Native Development Kit]]. Native classes can be called from Java code running under the Dalvik VM using the &lt;code&gt;System.loadLibrary&lt;/code&gt; call, which is part of the standard Android Java classes.&lt;ref&gt;{{cite web |url=http://davanum.wordpress.com/2007/12/09/android-invoke-jni-based-methods-bridging-cc-and-java/ |title=Android&amp;nbsp;â Invoke JNI based methods (Bridging C/C++ and Java) |last=Srinivas |first=Davanum |date=2007-12-09 |accessdate=2008-12-13}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url=http://developer.android.com/reference/java/lang/System.html |title=java.lang.System |work=Android Developers |accessdate=2009-09-03}}&lt;/ref&gt;

Complete applications can be [[Compiler|compiled]] and installed using traditional development tools.&lt;ref name=&quot;benno&quot;&gt;{{cite web |url=http://benno.id.au/blog/2007/11/13/android-native-apps |title=Native C application for Android |date=13 November 2007|work=Benno's blog|first=Ben |last=Leslie |accessdate=2009-09-04}}&lt;/ref&gt; The ADB debugger gives a root shell under the Android Emulator which allows native [[ARM architecture|ARM code]] or [[X86|x86 code]] to be uploaded and executed. ARM or x86 code can be compiled using [[GNU Compiler Collection|GCC]] on a standard PC.&lt;ref name=&quot;benno&quot;/&gt; Running native code is complicated by the fact that Android uses a non-standard C library (libc, known as [[Bionic (software)|Bionic]]). The underlying graphics device is available as a [[framebuffer]] at ''/dev/graphics/fb0''.&lt;ref&gt;{{cite mailing list |url=http://groups.google.com/group/android-developers/msg/ace258af92fff692?dmode=source&amp;pli=1 |title=Native C *GRAPHICAL* applications now working on Android emulator |last=Cooksey |first=Tom |mailinglist=android-developers |date=2007-11-07 |accessdate=2008-12-13}}&lt;/ref&gt; The graphics library that Android uses to arbitrate and control access to this device is called the [[Skia Graphics Engine|Skia Graphics Library]] (SGL), and it has been released under an open source license.&lt;ref&gt;{{cite web|url=http://src.chromium.org/viewvc/chrome/trunk/src/skia/|title=Skia source}}&lt;/ref&gt; Skia has backends for both [[win32]] and [[Unix]], allowing the development of cross-platform applications, and it is the graphics engine underlying the [[Google Chrome]] web browser.&lt;ref&gt;{{cite web |url=http://www.atoker.com/blog/2008/09/06/skia-graphics-library-in-chrome-first-impressions/ |title=Skia graphics library in Chrome: First impressions |last=Toker |first=Alp |date=2008-09-06 |accessdate=2008-12-13}}&lt;/ref&gt;

===App Inventor for Android===
{{Main|Google App Inventor}}
On 12 July 2010 Google announced the availability of App Inventor for Android, a Web-based visual development environment for novice programmers, based on MIT's Open Blocks Java library and providing access to Android devices' GPS, accelerometer and orientation data, phone functions, text messaging, speech-to-text conversion, contact data, persistent storage, and Web services, initially including Amazon and Twitter.&lt;ref&gt;{{cite news |last=Claburn |first=Thomas |title=Google App Inventor Simplifies Android Programming |url=http://www.informationweek.com/news/smb/mobile/showArticle.jhtml?articleID=225702880&amp;subSection=News |accessdate=2010-07-12 |newspaper=Information Week |date=2010-07-12}}&lt;/ref&gt; &quot;We could only have done this because Androidâs architecture is so open,&quot; said the project director, MIT's [[Hal Abelson]].&lt;ref&gt;{{cite news |last=Lohr |first=Steve |title=Googleâs Do-It-Yourself App Creation Software |url=http://www.nytimes.com/2010/07/12/technology/12google.html?src=busln |accessdate=2010-07-12 |newspaper=New York Times |date=2010-07-11}}&lt;/ref&gt; Under development for over a year,&lt;ref&gt;{{cite news |last=Abelson |first=Hal |title=App Inventor for Android|url=http://googleresearch.blogspot.com/2009/07/app-inventor-for-android.html |accessdate=2010-07-12 |newspaper=Google Research Blog |date=2009-07-31}}&lt;/ref&gt; the block-editing tool has been taught to non-majors in computer science at Harvard, MIT, Wellesley, and the University of San Francisco, where Professor David Wolber developed an introductory computer science course and tutorial book for non-computer science students based on App Inventor for Android.&lt;ref&gt;{{cite news |last=Kim|first=Ryan |title=Google brings app-making to the masses |url=http://articles.sfgate.com/2009-12-11/business/17220628_1_computer-science-smart-phone-android |accessdate=2010-07-12 |newspaper=San Francisco Chronicle |date=2009-12-11}}&lt;/ref&gt;&lt;ref&gt;{{cite web |last=Wolber |first=David |title=AppInventor.org |url=http://www.appinventor.org/ |accessdate=2010-07-12}}&lt;/ref&gt;

===HyperNext Android Creator===
{{Main|HyperNext}}
HyperNext Android Creator (HAC) is a software development system aimed at beginner programmers that can help them create their own Android apps without knowing Java and the Android SDK. It is based on [[HyperCard]] that treated software as a stack of cards with only one card being visible at any one time and so is well suited to mobile phone applications that have only one window visible at a time. HyperNext Android Creator's main programming language is simply called [[HyperNext]] and is loosely based on Hypercard's [[HyperTalk]] language. HyperNext is an interpreted English-like language and has many features that allow creation of Android applications. It supports a growing subset of the Android SDK including its own versions of the GUI control types and automatically runs its own background service so apps can continue to run and process information while in the background.

===The Simple project===
The goal of Simple is to bring an easy to learn and use language to the Android platform.&lt;ref&gt;{{cite web |url = http://code.google.com/p/simple/ |title = Android Simple}}&lt;/ref&gt; Simple is a [[BASIC]] dialect for developing Android applications. It targets professional and non-professional programmers alike in that it allows programmers to quickly write Android applications that utilise the Android runtime components.

Similar to Microsoft Visual Basic 6, Simple programs are form definitions (which contain components) and code (which contains the program logic). The interaction between the components and the program logic happens through events triggered by the components. The program logic consists of event handlers which contain code reacting to the events.

The Simple project is not very active. The last source code update was at August 2009. A similar commercial product named Basic4android is available.&lt;ref&gt;{{cite web |url = http://www.basic4ppc.com |title = Basic4android}}&lt;/ref&gt; It is inspired from Microsoft Visual Basic 6 and Microsoft Visual Studio. Basic4android is very active and there is a strong online community of Basic4android developers.

==Android Developer Challenge==
{{Main|Android Developer Challenge}}
The Android Developer Challenge was a competition for the most innovative application for Android. Google offered prizes totaling 10 million [[US dollar]]s, distributed between ADC I and ADC II. ADC I accepted submissions from 2 January to 14 April 2008. The 50 most promising entries, announced on 12 May 2008, each received a $25,000 award to further development.&lt;ref&gt;{{cite web |url = http://android-developers.blogspot.com/2008/05/top-50-applications.html |work = Android Developers Blog |title = The Top 50 Applications |first = Jason |last = Chen |date = 12 May 2008 |accessdate = 2009-09-04}}&lt;/ref&gt;&lt;ref&gt;{{cite news |url = http://www.linuxdevices.com/news/NS3168326017.html |title = Android Developer Challenge announces first-round winners |work = Linux for Devices |first = Eric |last = Brown |date = 13 May 2008}}&lt;/ref&gt; It ended in early September with the announcement of ten teams that received $275,000 each, and ten teams that received $100,000 each.&lt;ref name=ADC&gt;{{cite web |url=http://code.google.com/android/adc/adc_gallery/ |title=ADC I Top 50 Gallery |accessdate=2009-05-19 |work=Android Developer Challenge}}&lt;/ref&gt; ADC II was announced on 27 May 2009.&lt;ref name=&quot;Challenge&quot;&gt;{{cite web |url=http://code.google.com/android/adc/ |title=Android Developer Challenge |accessdate=2008-01-11 |work=Google Code}}&lt;/ref&gt; The first round of the ADC II closed on 6 October 2009.&lt;ref&gt;{{cite web |url = http://android-developers.blogspot.com/2009/10/adc-2-round-1-scoring-complete.html |title = ADC 2 Round 1 Scoring Complete |work = Android Developers Blog |first = Eric |last = Chu |date = 6 October 2009 |accessdate =2009-11-03}}&lt;/ref&gt; The first-round winners of ADC II comprising the top 200 applications were announced on 5 November 2009. Voting for the second round also opened on the same day and ended on November 25. Google announced the top winners of ADC II on November 30, with SweetDreams, What the Doodle!? and WaveSecure being nominated the overall winners of the challenge.&lt;ref&gt;{{cite web |url = http://code.google.com/android/adc/gallery_winners.html |title = ADC 2 Overall Winners |work = Android Developer Challenge |publisher = Google |accessdate =2010-12-05}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url = http://www.businessweek.com/the_thread/techbeat/archives/2009/11/android_develop_2.html |title = Android Developer Challenge 2 Winners Announced |work = BusinessWeek |first = Olga |last = Kharif |date = 30 November 2009 |accessdate =2010-12-05}}&lt;/ref&gt;

==Community-based firmware==
There is a community of open-source enthusiasts that build and share Android-based firmware with a number of customizations and additional features, such as [[FLAC]] lossless audio support and the ability to store downloaded applications on the [[microSD]] card.&lt;ref&gt;{{cite web |url=http://forum.xda-developers.com/forumdisplay.php?f=448 |work=xda-developers forum |title=Dream android development |accessdate=2009-09-11}}&lt;/ref&gt; This usually involves [[Rooting (Android OS)|rooting]] the device. Rooting allows users root access to the operating system, enabling full control of the phone. In order to use custom firmwares the device's bootloader must be unlocked. Rooting alone does not allow the flashing of custom firmware. Modified firmwares allow users of older phones to use applications available only on newer releases.&lt;ref&gt;{{cite web |url=http://voltmobileandtech.com/blog/ |title= Android 2.1 from Motorola Droid Ported to G1 |work=[[Volt Mobile]] |date= March 10, 2010}}&lt;/ref&gt;

Those firmware packages are updated frequently, incorporate elements of Android functionality that haven't yet been officially released within a carrier-sanctioned firmware, and tend to have fewer limitations. [[CyanogenMod]] and [[VillainROM]] are two examples of such firmware.

On 24 September 2009, Google issued a [[cease and desist]] letter&lt;ref&gt;{{cite web |url = http://androidandme.com/2009/09/hacks/cyanogenmod-in-trouble/ |title = CyanogenMod in trouble? |work = Android and me |first = Taylor |last = Wimberly |date = 24 September 2009 |accessdate = 2009-09-26}}&lt;/ref&gt; to the modder Cyanogen, citing issues with the re-distribution of Google's closed-source applications&lt;ref&gt;{{cite web |url = http://android-developers.blogspot.com/2009/09/note-on-google-apps-for-android.html |title = A Note on Google Apps for Android |work = Android Developers Blog |first = Dan |last = Morrill |date = 25 September 2009 |accessdate =2009-09-26}}&lt;/ref&gt; within the custom firmware. Even though most of  Android OS is open source, phones come packaged with closed-source Google applications for functionality such as the [[Android Market]] and GPS navigation. Google has asserted that these applications can only be provided through approved distribution channels by licensed distributors. Cyanogen has complied with Google's wishes and is continuing to distribute this mod without the proprietary software. He has provided a method to back up licensed Google applications during the mod's install process and restore them when it is complete.&lt;ref&gt;{{cite web |url = http://www.cyanogenmod.com/home/the-current-state |title = The current state... |work = CyanogenMod Android Rom |first = Cyanogen |date = 27 September 2009 |accessdate =2009-09-27}}&lt;/ref&gt;

==Java Standards==
Obstacles to development include the fact that Android does not use established Java standards, i.e. [[Java SE]] and [[Java ME|ME]]. This prevents compatibility among Java applications written for those platforms and those for the Android platform. Android only reuses the Java language syntax and semantics, but does not provide the full class libraries and APIs bundled with Java SE or ME.&lt;ref&gt;{{cite web
| url=http://www.javalobby.org/nl/archive/jlnews_20071113o.html
| title=Google Android: Initial Impressions and Criticism
| date=13 November 2007
| last=van Gurp|first=Jilles
| work=Javalobby
| quote=''Frankly, I don't understand why Google intends to ignore the vast amount of existing implementation out there. It seems like a bad case of &quot;not invented here&quot; to me. Ultimately, this will slow adoption. There are already too many Java platforms for the mobile world and this is yet another one''
| accessdate=2009-03-07}}&lt;/ref&gt; However, there are multiple tools in the market from companies such as [[Myriad Group]] and UpOnTek that provide J2ME to Android conversion services.&lt;ref&gt;{{cite web
| url=http://www.myriadgroup.com/Media-Centre/News/Myriad-New-J2Android-Converter-Fuels-Android-Applications-Gold-Rush.aspx
| title=Myriad's New J2Android Converter Fuels Android Applications Gold Rush
| date=19 March 2010}}&lt;/ref&gt;&lt;ref&gt;{{cite web
| url=http://www.javaworld.com/community/node/4170
| title=J2Android hopes you don't know that Android is Java-based
| quote=''On the other hand, you might think this is kind of a scam aimed at developers who don't really understand the nature of the platform they're targeting. My biggest complaint is that you'd think that Mikael RicknÃ¤s, the IDG News Service reporter who wrote the first story linked to above (who toils for the same company that publishes JavaWorld), would have at least mentioned the relationship between Java and Android to make the oddness of this announcement clear.''
| date=23 March 2010}}&lt;/ref&gt;&lt;ref&gt;{{cite web
| url=http://www.javaworld.com/community/?q=node/4210
| title=Myriad CTO: J2Android moves MIDlets to &quot;beautiful&quot; Android framework
| quote=''We will have to wait and see exactly how much pickup J2Android actually sees. The tool isn't actually available on the open market just yet; while Schillings spoke optimistically about &quot;converting 1,000 MIDlets in an afternoon,&quot; at the moment they're working with a few providers to transform their back catalogs. So those of you out there hoping to avoid learning how to write Android code may have to wait a while.''
| date=31 March 2010}}&lt;/ref&gt;

==Fragmentation==
{{Update|type=section|date=May 2011}}
Developers had reported that it was difficult to maintain applications on multiple versions of Android, owing to compatibility issues between versions 1.5 and 1.6,&lt;ref&gt;{{cite web |url = http://blogs.zdnet.com/Greenfield/?p=481 |title = Android's Weakest Link |publisher=[[ZDNet]] |date = 2009-10-11 |accessdate = 2010-01-15}}&lt;/ref&gt; especially the different resolution ratios in use among various Android phones.
&lt;ref&gt;{{cite web |url = http://androidandme.com/2009/11/news/complications-looming-for-android-developers/ |title = Complications looming for Android developers |publisher=androidandme.com |date = 2009-11-06 |accessdate = 2010-01-15}}&lt;/ref&gt;

However, this situation appears to have improved, in that by July 2011, Google reported over 95% of android phones in service were on 2.1 variants and newer, over 60% on 2.2 variants and newer &lt;ref&gt;{{cite web |url =http://developer.android.com/resources/dashboard/platform-versions.html |title=Platform Versions |date = 2011-07-05|publisher=developer.android.com |accessdate = 2011-07-29}}&lt;/ref&gt;. A year ago, August 2010, Google reported 83% of Android phones were running the, then current, 2.x versions, with 17% still on 1.5 and 1.6.

Such problems were pointedly brought into focus as they were encountered during the ADC2 contest.&lt;ref&gt;{{cite web |url = http://www.techcrunch.com/2009/10/11/a-chink-in-androids-armor/ |title = A Chink In Android's Armor |date = 2009-10-11 |publisher=[[TechCrunch]] |quote=''And now they're faced with a landslide of new handsets, some running v.1.6 and some courageous souls even running android v.2.0. All those manufacturers/carriers are racing to release their phones by the 2009 holiday season, and want to ensure the hot applications will work on their phones. And here's the problem&amp;nbsp;â in almost every case, we hear, there are bugs and more serious problems with the apps.[...]First of all, the compatibility between versions issue may be overblown. The reported problems have been limited to an Android developer contest[...]We havenât heard of any major app developers complaining of backwards or forward compatibility problems. Also, Iâve now upgraded my phone from 1.5 to 1.6, and every application continues to work fine.'' |accessdate = 2009-10-11}}&lt;/ref&gt; Further, the rapid growth in the number of Android-based phone models with differing hardware capabilities also makes it difficult to develop applications that work on all Android-based phones.&lt;ref&gt;{{cite web |url = http://www.wired.com/gadgetlab/2009/11/android-fragmentation/ |title = Androidâs Rapid Growth Has Some Developers Worried |date = 2009-11-16 |publisher=[[Wired News]] |quote=''Faganâs concerns about the fragmentation of Android is being echoed by other developers, says Sean Galligan, vice president of business development at Flurry, a mobile app analytics company(...)&quot;You may build an app that works perfectly with all three firmwares, but then when you run it on carriersâ ROMs it completely blows up,&quot; says Fagan. &quot;So we find ourselves having to create apps that are compatible with multiple firmwares, multiple ROMs and multiple devices with different hardware.'' |accessdate = 2010-02-26}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url = http://www.javaworld.com/community/node/3704 |title = Android just reproducing Java ME's problems, now |date = 2009-11-17 |publisher=[[JavaWorld]] |accessdate = 2010-02-26}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url = http://www.businessweek.com/technology/content/oct2009/tc20091015_626136.htm |title = Android's Spread Could Become a Problem |date = 2009-10-15 |publisher=[[Bloomberg BusinessWeek|BusinessWeek]] |accessdate = 2010-02-28}}&lt;/ref&gt;&lt;ref&gt;{{cite web |url = http://infoworld.com/d/mobilize/google-androids-self-destruction-derby-begins-863 |title = Google Android's self-destruction derby begins |date = 2010-02-22 |publisher=[[InfoWorld]] |accessdate = 2010-02-28}}&lt;/ref&gt; 

==History==
[[Image:Android mobile phone platform early device.jpg|thumb|200px|Early Android device.]]
Android is created by the [[Open Handset Alliance]] which is lead by Google.&lt;ref&gt;[http://androiddevelopmenttutorial.net  Android Development Tutorial ]&lt;/ref&gt; The early feedback on developing applications for the Android platform was mixed.&lt;ref name=&quot;MixedFeedback&quot;&gt;{{cite web |url=http://arstechnica.com/news.ars/post/20071219-google-android-plagued-by-dysfunctional-development-process.html |title=Developing apps for Google Android: it's a mixed bag |accessdate=2007-12-19 |last=Paul |first=Ryan |date=2007-12-19 |work=[[Ars Technica]]}}&lt;/ref&gt; Issues cited include bugs, lack of documentation, inadequate QA infrastructure, and no public issue-tracking system. (Google announced an issue tracker on 18 January 2008.)&lt;ref&gt;{{cite web |url=http://android-developers.blogspot.com/2008/01/you-cant-rush-perfection-but-now-you.html |title=You can't rush perfection, but now you can file bugs against it |work=Android Developers Blog |first=Dan |last=Morrill |date=18 January 2008 |accessdate=2009-09-03}}&lt;/ref&gt; In December 2007, MergeLab mobile startup founder Adam MacBeth stated, ''&quot;Functionality is not there, is poorly documented or just doesn't work... It's clearly not ready for prime time.&quot;''&lt;ref name=&quot;Bugs&quot;&gt;{{cite web |url=http://online.wsj.com/article_email/SB119800856883537515-lMyQjAxMDE3OTE4ODAxMDg4Wj.html |title=Glitches Bug Google's Android Software |accessdate=2007-12-19 |last=Morrison |first=Scott |date=2007-12-19 |work=The Wall Street Journal |publisher= }}&lt;/ref&gt; Despite this, Android-targeted applications began to appear the week after the platform was announced. The first publicly available application was the [[Snake (video game)|Snake game]].&lt;ref&gt;{{cite web |url=http://www.android-freeware.org/download/snake |title=Snake |accessdate=2008-01-26 |work=Android Freeware Directory}}&lt;/ref&gt;&lt;ref name=&quot;Snake&quot;&gt;{{cite web |url=http://www.mobiles2day.com/2007/11/14/first-android-application-snake/ |title=First Android Application&amp;nbsp;â Snake |accessdate=2008-01-07 |date=2007-11-14 |work=Mobiles2day |publisher= }}&lt;/ref&gt;
The [[Android Dev Phone]] is a [[Subscriber Identity Module|SIM]]-unlocked and hardware-unlocked device that is designed for advanced developers. While developers can use regular consumer devices purchased at retail to test and use their applications, some developers may choose not to use a retail device, preferring an unlocked or no-contract device.

A preview release of the Android SDK was released on 12 November 2007. On 15 July 2008, the Android Developer Challenge Team accidentally sent an email to all entrants in the Android Developer Challenge announcing that a new release of the SDK was available in a &quot;private&quot; download area. The email was intended for winners of the first round of the Android Developer Challenge. The revelation that Google was supplying new SDK releases to some developers and not others (and keeping this arrangement private) led to widely reported frustration within the Android developer community at the time.&lt;ref&gt;{{cite web |url=http://www.theregister.co.uk/2008/07/14/android_developer_unrest/ |title=Google plays Hide and Seek with Android SDK |first=Cade |last=Metz |date=14 July 2008 |accessdate=2008-10-23 |work=[[The Register]]}}&lt;/ref&gt;

On 18 August 2008 the Android 0.9 SDK beta was released. This release provided an updated and extended API, improved development tools and an updated design for the home screen. Detailed instructions for upgrading are available to those already working with an earlier release.&lt;ref&gt;{{cite web |url=http://code.google.com/android/intro/upgrading.html |title=Android&amp;nbsp;â An Open Handset Alliance Project: Upgrading the SDK |accessdate=2008-10-24}}{{Dead link|date=September 2009}}&lt;/ref&gt; On 23 September 2008 the Android 1.0 SDK (Release 1) was released.&lt;ref&gt;{{cite web |url=http://developer.android.com/sdk/older_releases.html |title=Other SDK Releases |accessdate=2009-09-02 |work=Android Developers}}&lt;/ref&gt; According to the release notes, it included &quot;mainly bug fixes, although some smaller features were added.&quot; It also included several API changes from the 0.9 version. Multiple versions have been released since.&lt;ref&gt;{{cite web |url=http://developer.android.com/sdk/older_releases.html |title=SDK Archives}}&lt;/ref&gt;

== References ==
{{Reflist|colwidth=30em}}

==Bibliography==
{{Refbegin}}
* {{Cite book
| first1      = Burnette
| last1       = Ed
| date        = 13 July 2010
| title       = Hello, Android: Introducing Google's Mobile Development Platform
| publisher   = [[Pragmatic Bookshelf]]
| edition     = 3rd
| isbn        = 1934356562
| url         = http://pragprog.com/titles/eband3/hello-android
}}
* {{Cite book
| first1      = Frank
| last1       = Ableson
| first2      = Robi
| last2       = Sen
| first3      = Chris
| last3       = King
| date        = January 2011
| title       = Android in Action, Second Edition
| publisher   = [[Manning]]
| edition     = 2nd
| isbn        = 9781935182726
| url         = 
}}
* {{Cite book
| first1      = Shane
| last1       = Conder
| first2      = Lauren
| last2       = Darcey
| date        = September 7, 2009
| title       = Android Wireless Application Development
| publisher   = [[Addison-Wesley Professional]]
| edition     = 1st
| isbn        = 0321627091
| url         = http://www.informit.com/store/product.aspx?isbn=0321627091
}}
* {{Cite book
| first1      = Mark
| last1       = Murphy
| date        = June 26, 2009
| title       = Beginning Android
| publisher   = [[Apress]]
| edition     = 1st
| isbn        = 1430224193
| url         = http://www.apress.com/9781430224198
}}
* {{Cite book
| first1      = Reto
| last1       = Meier
| date        = March 2010
| title       = Professional Android 2 Application Development
| publisher   = [[Wrox Press]]
| edition     = 1st
| isbn        = 9780470565520
| url         = http://www.wrox.com/WileyCDA/WroxTitle/Professional-Android-Application-Development.productCd-0470565527.html
}}
* {{Cite book
| first       = Chris
| last        = Haseman
| date        = July 21, 2008
| title       = Android Essentials
| publisher   = [[Apress]]
| edition     = 1st
| isbn        = 1430210648
| url         = http://www.apress.com/9781430210641
}}
{{Refend}}

== External links ==
* [http://developer.android.com/ Android Developers]
* [http://android-developers.blogspot.com/ Android Developers Blog]
* [http://code.google.com/android Google Projects for Android] from [[Google Code]]
* [http://www.makelinux.net/android/internals/ Diagram of Android internals]
* [http://www.makelinux.net/android/classes/ Hypertext map of Android API classes]

{{Android}}
{{Table Mobile operating systems}}
{{Google Inc.}}
{{Linux}}

&lt;!--- Categories ---&gt;
[[Category:Smartphones]]
[[Category:Embedded Linux]]
[[Category:Google]]
[[Category:Mobile Linux]]
[[Category:Mobile open source]]
[[Category:Android (operating system)]]
[[Category:Android development software]]

[[sv:Programutveckling fÃ¶r Android]]</rev></revisions></page></pages></query></api>
