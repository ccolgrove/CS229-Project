<?xml version="1.0"?><api><query><pages><page pageid="432962" ns="0" title="UnionFS"><revisions><rev xml:space="preserve">{{Infobox filesystem
| name                    = UnionFS
| full_name               = Unification File System
| developer               = [[Open Source]] Community
| introduction_os         = 
| introduction_date       =
| partition_id            = 
| directory_struct        = 
| file_struct             = 
| bad_blocks_struct       = 
| max_filename_size       = 
| max_files_no            = 
| max_volume_size         = 
| max_file_size           = 
| filename_character_set  = 
| dates_recorded          = 
| date_range              = 
| date_resolution         = 
| forks_streams           = 
| attributes              = 
| file_system_permissions = [[POSIX]]
| compression             = No
| encryption              = No (provided at the block device level)
| OS                      = [[Linux]], [[FreeBSD]] and [[NetBSD]]
}}
'''UnionFS''' is a filesystem service for [[Linux]], [[FreeBSD]] and [[NetBSD]] which implements a [[union mount]] for other [[file systems]]. It allows files and directories of separate file systems, known as branches, to be transparently overlaid, forming a single coherent file system. Contents of directories which have the same path within the merged branches will be seen together in a single merged directory, within the new, virtual filesystem.

When mounting branches, the priority of one branch over the other is specified. So when both branches contain a file with the same name, one gets priority over the other.

The different branches may be both ''read-only'' and ''read-write'' file systems, so that writes to the virtual, merged copy are directed to a specific real file system. This allows a file system to appear as writeable, but without actually allowing writes to change the file system, also known as [[copy-on-write]]. This may be desirable when the media is physically read-only, such as in the case of [[Live CD]]s.

==Uses==
In [[Knoppix]], a union between the file system on the [[CD-ROM]] or [[DVD]] and a file system contained in an image file called ''knoppix.img'' on a writable drive (such as a [[USB memory stick]]) can be made, where the writable drive has priority over the read-only filesystem. This allows the user to change any of the files on the system, with the new file stored in the image and transparently used instead of the one on the CD.&lt;ref&gt;[http://www.knoppix.net/wiki/Live_CD_Tips#Persistent_Disk_Image Persistent disk image section on knoppix wiki]&lt;/ref&gt;

'''UnionFS''' can also be used to create a single common template for a number of file systems, or for security reasons. It is sometimes used as an [[ad-hoc]] [[snapshot (computer storage)|snapshot]]ting system.

==Other implementations==
[http://unionfs.filesystems.org/ Unionfs for Linux] has two versions.  Version 1.x is a standalone one that can be built as a module.  Version 2.x is a newer, redesigned, and reimplemented one. Version 2.x is the smallest implementation of unioning for Linux, it is heavily tested and inspected by many kernel developers, and it is more efficient.

[[aufs]] is an alternative version of unionfs, which began as a unionfs fork but became a different project. aufs version 1 is no longer maintained, since aufs2 is available.

[http://podgorny.cz/unionfs-fuse UnionFsFuse] is an independent project, implemented as an [[Filesystem in Userspace|user space filesystem]] program, instead of a kernel module or patch. Like UnionFS, it supports copy-on-write and read-only or read-write branches.

[[Plan 9 from Bell Labs]] [[operating system]] uses [[union mount]]s extensively to build custom [[Namespace (computer science)|namespaces]] per user/processes. The same concept, implemented as &quot;[[union mount]]&quot;, has also been available in [[Berkeley Software Distribution|BSD]], since at least 1995.&lt;ref&gt;[http://www.usenix.org/publications/library/proceedings/neworl/ USENIX 1995 Technical Conference Proceedings]&lt;/ref&gt;

The [[GNU Hurd]] has UnionFS.&lt;ref&gt;http://www.nongnu.org/hurdextras/#unionfs&lt;/ref&gt; As of January 2008, it works, but results in a read-only mountpoint.

[[mhddfs]] works like UnionFS but permits balancing files over drives with the most free space available.

[[Sun Microsystems]] introduced the first implementation of a stacked, layered file system with copy-on-write, whiteouts (hiding files in lower layers from higher layers), etc. as the [[Translucent File Service]] in [[SunOS]] 3, circa 1986.&lt;ref&gt;{{cite book
  | last = 
  | first = 
  | authorlink = 
  | coauthors = 
  | title = Sun/Release 3.0
  | publisher = Interleaf Technical Publishing
  | year = 1988
  | volume = vol. 1
  | location = 
  | pages = 15â1â18, 16â1â19
  | url = 
  | doi = 
  | id = 
  | isbn = }}&lt;/ref&gt;

[[JailbreakMe]] 3.0, a tool for [[iOS jailbreaking|jailbreaking]] iOS devices released in July 2011, uses unionfs techniques to speed up the installation process of the operating system modification.&lt;ref&gt;{{cite web |url=http://www.redmondpie.com/comex-working-on-faster-jailbreaking-process-for-jailbreakme-3.0-ipad-2-jailbreak-coming-soon/ |title= Comex Working On Faster Jailbreaking Process for JailbreakMe 3.0; iPad 2 Jailbreak Coming Soon! |author= Waisybabu |date= June 19, 2011 |work= |publisher= Redmond Pie |accessdate=September 24, 2011}}&lt;/ref&gt;

==References==
* C. P. Wright et al. (2004). &quot;[http://www.fsl.cs.sunysb.edu/docs/unionfs-tr/unionfs.pdf Versatility and Unix Semantics in a Fan-Out Unification File System] (pdf).&quot; (Discusses UnionFS implementations and semantics.)

&lt;references/&gt;

==External links==
* [http://unionfs.filesystems.org/ Official Linux Unionfs home page]
* [https://bugzilla.filesystems.org/ Bugzilla bug database] for Linux Unionfs
* [http://podgorny.cz/unionfs-fuse UnionFsFuse] [[FUSE (Linux)|FUSE]]-based alternative implementation of UnionFS
* [http://aufs.sourceforge.net/ AuFS] is an alternative unionfs for linux.
* [http://funionfs.apiou.org/ FunionFS ](Another advanced FUSE based implementation of UnionFS with log, control...)
* [http://www.linuxjournal.com/article/7714 Kernel Korner - Unionfs: Bringing Filesystems Together] - article from [http://www.linuxjournal.com LinuxJournal]
* [http://people.freebsd.org/~daichi/unionfs/ The new implementation of union fs for FreeBSD]
* [http://www.am-utils.org/docs/zen/zen.html On implementation of a union fs]
* [http://alumnus.caltech.edu/~muresan/projects/lufs_unionfs.html LUFS-based unionfs]
* [http://vserver.13thfloor.at/TBVFS/index.php?page=Linux+Implementations Linux Implementations] - excellent write-up on history of union file systems for Linux
* [ftp://ftp.sra.co.jp/pub/doc/nfs/tfs.ps.gz The Translucent File Service (white paper), David Hendricks, Sun Microsystems (gzip PostScript)]
* [http://svn.uvw.ru/mhddfs/trunk/README mhddfs]
* [http://www.denx.de/wiki/DULG/OverlayFileSystems mini_fo: overlay filesystem (rw) for read-only rootfs]
[[Category:Free special purpose file systems]]
[[Category:Linux file systems]]

[[ar:ÙÙÙÙÙÙ Ø§Ù Ø§Ø³]]
[[de:UnionFS]]
[[es:UnionFS]]
[[fr:Union File System]]
[[it:UnionFS]]
[[nl:UnionFS]]
[[ja:UnionFS]]
[[pt:UnionFS]]
[[ru:UnionFS]]</rev></revisions></page></pages></query></api>
