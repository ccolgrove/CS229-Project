<?xml version="1.0"?><api><query><pages><page pageid="277663" ns="0" title="Open-source software"><revisions><rev xml:space="preserve">{{multiple issues|refimprove=February 2010|expert=Free Software|date=September 2008}}
[[File:Opensource.svg|thumb|The logo of the [[Open Source Initiative]]]]
'''Open-source software''' ('''OSS''') is [[computer software]] that is available in source code form: the [[source code]] and certain other rights normally reserved for [[copyright]] holders are provided under a [[software license]] that permits users to study, change, improve and at times also to distribute the software.

Open source software is very often developed in a public, [[Collaborative software development model|collaborative]] manner. Open-source software is the most prominent example of [[open source|open-source]] development and often compared to (technically defined) [[user-generated content]] or (legally defined) [[open content]] movements.&lt;ref&gt;{{cite web
 |last=Verts
 |first=William T.
 |title=Open source software
 |work=[[World Book Encyclopedia|World Book]] Online Reference Center
 |date=2008-01-13
 |url=http://www.worldbookonline.com/wb/Article?id=ar751706
}}&lt;/ref&gt;

A report by the Standish Group states that adoption of open-source software models has resulted in savings of about $60&amp;nbsp;billion per year to consumers.&lt;ref&gt;{{cite web
 |url=http://www.freesoftwaremagazine.com/community_posts/creating_wealth_free_software
 |title=Creating wealth with free software
 |first=Richard
 |last=Rothwell
 |work=[[Free Software Magazine]]
 |date=2008-08-05
 |accessdate=2008-09-08
}}&lt;/ref&gt;&lt;ref&gt;{{cite press release
 |url=http://standishgroup.com/newsroom/open_source.php
 |title=Standish Newsroom - Open Source
 |date=2008-04-16
 |location=[[Boston]]
 |accessdate=2008-09-08
}}&lt;/ref&gt;

==Open Source Definition==
The '''Open Source Definition'''   is used by the [[Open Source Initiative]] to determine whether or not a software license can be considered open source.

The definition was based on the [[Debian Free Software Guidelines]], written and adapted primarily by [[Bruce Perens]].  They are by no means definitive even as applied to software. Clause 3 is the primary legal difference between [[free software]] and '''open source software''' as such, free software is stricter in interpreting 3. Clauses 5 and 6 are not a condition of any major open content license regimes, which commonly do restrict types of uses and users; for instance, [[Creative Commons]] has open content licenses that explicitly forbid commercial use.

{{quotation|'''Introduction'''

:Open source doesn't just mean access to the source code.

:The distribution terms of open-source software must comply with the following criteria:

'''1. Free Redistribution'''
:The license shall not restrict any party from selling or giving away the software as a component of an aggregate software distribution containing programs from several different sources. The license shall not require a royalty or other fee for such sale.

'''2. Source Code'''
:The program must include source code, and must allow distribution in source code as well as compiled form. Where some form of a product is not distributed with source code, there must be a well-publicized means of obtaining the source code for no more than a reasonable reproduction cost preferably, downloading via the Internet without charge. The source code must be the preferred form in which a programmer would modify the program. Deliberately obfuscated source code is not allowed. Intermediate forms such as the output of a preprocessor or translator are not allowed.

'''3. Derived Works'''
:The license must allow modifications and derived works, and must allow them to be distributed under the same terms as the license of the original software.

'''4. Integrity of the Author's Source Code'''
:The license may restrict source-code from being distributed in modified form only if the license allows the distribution of &quot;patch files&quot; with the source code for the purpose of modifying the program at build time. The license must explicitly permit distribution of software built from modified source code. The license may require derived works to carry a different name or version number from the original software.

'''5. No Discrimination Against Persons or Groups'''
:The license must not discriminate against any person or group of persons.

'''6. No Discrimination Against Fields of Endeavor.'''
:The license must not restrict anyone from making use of the program in a specific field of endeavor. For example, it may not restrict the program from being used in a business, or from being used for genetic research.

'''7. Distribution of License'''
:The rights attached to the program must apply to all to whom the program is redistributed without the need for execution of an additional license by those parties.

'''8. License Must Not Be Specific to a Product'''
:The rights attached to the program must not depend on the program's being part of a particular software distribution. If the program is extracted from that distribution and used or distributed within the terms of the program's license, all parties to whom the program is redistributed should have the same rights as those that are granted in conjunction with the original software distribution.

'''9. License Must Not Restrict Other Software'''
:The license must not place restrictions on other software that is distributed along with the licensed software. For example, the license must not insist that all other programs distributed on the same medium must be open-source software.

'''10. License Must Be Technology-Neutral'''
:No provision of the license may be predicated on any individual technology or style of interface.
|Open Source Initiative|http://opensource.org/docs/osd}}

==History==
{{Main|Open source movement}}

The [[free software movement]] was launched in 1983. In 1998, a group of individuals advocated that the term free software should be replaced by open source software (OSS) as an expression which is less ambiguous and more comfortable for the corporate world.&lt;ref&gt;{{cite web
 |url=http://www.catb.org/~esr/open-source.html
 |title=Goodbye, &quot;free software&quot;; hello, &quot;open source&quot;
 |first=Eric S.
 |last=Raymond
 |authorlink=Eric S. Raymond
 |date=1998-02-08
 |accessdate=2008-08-13
}}&lt;/ref&gt; Software developers may want to publish their software with an [[open source license]], so that anybody may also develop the same software or understand its internal functioning. Open source software generally allows anyone to create modifications of the software, port it to new operating systems and processor architectures, share it with others or, in some cases, market it.  Scholars Casson and Ryan have pointed out several policy-based reasons for adoption of open source, in particular, the heightened value proposition from open source (when compared to most proprietary formats) in the following categories:
* Security
* Affordability
* Transparency
* Perpetuity
* Interoperability
* Localisation.&lt;ref name=&quot;papers.ssrn.com&quot;&gt;[http://papers.ssrn.com/sol3/papers.cfm?abstract_id=1656616 Casson and Ryan, Open Standards, Open Source Adoption in the Public Sector, and Their Relationship to Microsoftâs Market Dominance]&lt;/ref&gt;
Particularly in the context of local governments (who make software decisions), Casson and Ryan argue that &quot;governments have an inherent responsibility and fiduciary duty to taxpayers&quot; which includes the careful analysis of these factors when deciding to purchase proprietary software or implement an open-source option.&lt;ref&gt;Id.&lt;/ref&gt;

The [[Open Source Definition]], notably, presents an open source philosophy, and further defines the terms of usage, modification and redistribution of open source software. Software licenses grant rights to users which would otherwise be reserved by copyright law to the copyright holder. Several open source software licenses have qualified within the boundaries of the Open Source Definition. The most prominent and popular example is the [[GNU General Public License]] (GPL), which âallows free distribution under the condition that further developments and applications are put under the same licenceâ â thus also free.&lt;ref name=&quot;Holtgrewe 2004 129â146&quot;&gt;{{cite journal|last=Holtgrewe|first=Ursula|title=Articulating the Speed(s) of the Internet: The Case of Open Source/Free Software.|journal=Time Society|year=2004|volume=13|pages=129â146|doi=10.1177/0961463X04040750}}&lt;/ref&gt;  While open source distribution presents a way to make the source code of a product publicly accessible, the open source licenses allow the authors to fine tune such access.

The ''open source'' label came out of a strategy session held on April 7, 1998 in [[Palo Alto, California|Palo Alto]] in reaction to [[Netscape Communications Corporation|Netscape's]] January 1998 announcement of a source code release for [[Netscape Navigator|Navigator]] (as [[Mozilla]]). A group of individuals at the session included [[Tim O'Reilly]], [[Linus Torvalds]], Tom Paquin, [[Jamie Zawinski]], [[Larry Wall]], [[Brian Behlendorf]], [[Sameer Parekh]], [[Eric Allman]], Greg Olson, [[Paul Vixie]], [[John Ousterhout]], [[Guido van Rossum]], [[Philip Zimmermann]], [[John Gilmore (activist)|John Gilmore]] and [[Eric S. Raymond]].&lt;ref&gt;{{cite web | title=Open Source Pioneers Meet in Historic Summit | date=1998-04-14 | url=http://press.oreilly.com/pub/pr/796 | accessdate=2010-08-19 }}&lt;/ref&gt; They used the opportunity before the release of Navigator's source code to clarify a potential confusion caused by the ambiguity of the word &quot;free&quot; in [[English language|English]].

Many people claimed that the birth of the [[Internet]], since 1969, started the open source movement, while others do not distinguish between open source and free software movements.&lt;ref&gt;{{cite book | title=Open Source: A Multidisciplinary Approach | first=Moreno | last=Muffatto | publisher=Imperial College Press | year=2006 | isbn=1860946658 }}&lt;/ref&gt;

The [[Free Software Foundation]] (FSF), started in 1985, intended the word &quot;free&quot; to mean ''freedom to distribute'' (or &quot;free as in free speech&quot;) and not ''freedom from cost'' (or &quot;free as in free beer&quot;). Since a great deal of free software already was (and still is) free of charge, such free software became associated with zero cost, which seemed anti-commercial.

The Open Source Initiative (OSI) was formed in February 1998 by Eric S. Raymond and Bruce Perens. With at least 20 years of evidence from case histories of closed software development versus open development already provided by the Internet developer community, the OSI presented the 'open source' case to commercial businesses, like Netscape. The OSI hoped that the usage of the label &quot;open source,&quot; a term suggested by Peterson of the [[Foresight Institute]] at the strategy session, would eliminate ambiguity, particularly for individuals who perceive &quot;free software&quot; as anti-commercial. They sought to bring a higher profile to the practical benefits of freely available source code, and they wanted to bring major software businesses and other high-tech industries into open source. Perens attempted to register &quot;open source&quot; as a [[service mark]] for the OSI, but that attempt was impractical by [[trademark]] standards. Meanwhile, due to the presentation of Raymond's paper to the upper management at NetscapeâRaymond only discovered when he read the [http://wp.netscape.com/newsref/pr/newsrelease558.html Press Release], and was called by Netscape CEO Jim Barksdale's PA later in the dayâNetscape released its Navigator source code as open source, with favorable results.

==Definitions==
{{Main|Open Source Definition}}
There are numerous groups who claim ownership of the term &quot;Open Source&quot;, but the term has not been trademarked. The [[Open Source Initiative]]'s definition is widely recognized as the standard or ''[[de facto]]'' definition.{{Citation needed|date=November 2009}}

The Open Source Initiative (OSI) was formed in February 1998 by Raymond and Perens. With about 20 years of evidence from case histories of closed and open development already provided by the Internet, the OSI continued to present the 'open source' case to commercial businesses. They sought to bring a higher profile to the practical benefits of freely available source code, and wanted to bring major software businesses and other high-tech industries into open source. Perens adapted [[Debian]]'s [[Free Software]] Guidelines to make [[Open Source#The Open Source Definition|The Open Source Definition]].&lt;ref&gt;Perens, Bruce. [http://www.oreilly.com/catalog/opensources/book/perens.html Open Sources: Voices from the Open Source Revolution]. [[O'Reilly Media]]. 1999.&lt;/ref&gt;

===The Open Source Definition===
The Open Source Definition is used by the [[Open Source Initiative]] to determine whether a software license can be considered open source. The definition was based on the Debian Free Software Guidelines, written and adapted primarily by Bruce Perens.&lt;ref&gt;{{cite book|url=http://www.oreilly.com/catalog/opensources/book/perens.html|title=''The Open Source Definition by Bruce Perens''|date= January 1999| isbn =1-56592-582-3}}&lt;/ref&gt;&lt;ref&gt;{{cite web|url=http://opensource.org/docs/osd|title=''The Open Source Definition''}}, The Open Source Definition according to the Open Source Initiative&lt;/ref&gt; Perens did not base his writing on the &quot;four freedoms&quot; of Free Software from the FSF, which were only widely available later.&lt;ref&gt;http://news.slashdot.org/comments.pl?sid=1129863&amp;cid=26875815&lt;/ref&gt;

===Perens' principles===
Under Perens' definition, open source describes a broad general type of software license that makes source code available to the general public with relaxed or non-existent copyright restrictions. The principles, as stated, say absolutely nothing about trademark or [[patent]] use and require absolutely no cooperation to ensure that any common [[audit]] or [[Software release|release]] regime applies to any derived works. It is an explicit &quot;feature&quot; of open source that it may put no restrictions on the use or distribution by any organization or user. It forbids this, in principle, to guarantee continued access to derived works even by the major original contributors.

==Proliferation of the term==
{{main|Open source}}
While the term &quot;open source&quot; applied originally only to the source code of software,&lt;ref&gt;{{cite web | url = http://www.gnu.org/philosophy/open-source-misses-the-point.html | title = Why &quot;Open Source&quot; misses the point of Free Software | accessdate = December 6, 2007 | last = Stallman | first = Richard | authorlink = Richard Stallman | date=  September 24, 2007 | work = Philosophy of the GNU Project | publisher = Free Software Foundation | quote = However, not all of the users and developers of free software agreed with the goals of the free software movement. In 1998, a part of the free software community splintered off and began campaigning in the name of âopen source.â The term was originally proposed to avoid a possible misunderstanding of the term âfree software,â but it soon became associated with philosophical views quite different from those of the free software movement.}}&lt;/ref&gt; it is now being applied to many other areas such as [[Open source ecology]],&lt;ref&gt;{{cite web | url = http://www.openfarmtech.org  | title = ''Open Source Ecology'' | quote = ...building the world's first replicable open source self-sufficient decentralized high-appropriate-tech permaculture ecovillage...}}&lt;/ref&gt; a movement to decentralize technologies so that any human can use them. However, it is often misapplied to other areas which have different and competing principles, which overlap only partially. &lt;!-- ''See [[open source (journalism)]] for the only other such definition in widespread use.''--&gt;

==Non-software use==
The principles of open source have been adapted for many forms of [[user generated content]] and technology, including [[open source hardware]].

Supporters of the open content movement advocate some restrictions of use, requirements to share changes, and [[attribution (copyright)|attribution]] to other authors of the work.

This âcultureâ or [[ideology]] takes the view that the principles apply more generally to facilitate concurrent input of different agendas, approaches and priorities, in contrast with more centralized models of development such as those typically used in commercial companies.&lt;ref name=&quot;autogenerated1&quot;&gt;Raymond, Eric S. ''[[The Cathedral and the Bazaar]]''. ed 3.0. 2000.&lt;/ref&gt;

Advocates of the open source principles often point to [[Wikipedia]] as an example, but Wikipedia has in fact often restricted certain types of use or user, and the [[GFDL]] license it has historically used makes specific requirements of all users, which technically violates the open source principles.

===Business models===
{{Main|Business models for open source software}}
There are a number of commonly recognized barriers to the adoption of open source software by enterprises. These barriers include the perception that open source licenses are [[viral license|viral]], lack of formal support and training, the velocity of change, and a lack of a long term roadmap. The majority of these barriers are risk-related. From the other side, not all proprietary projects disclose exact future plans, not all open source licenses are equally viral and many serious OSS projects (especially operating systems) actually make money from paid support and documentation.

A commonly employed [[business strategy]] of commercial open-source software firms is the [[dual-licensing|dual-license]] Strategy, as demonstrated by [[Ingres (database)|Ingres]], [[MySQL]], [[Alfresco (software)|Alfresco]], and others.

==Widely used open source products==
Open source software (OSS) projects are built and maintained by a network of volunteer programmers. Prime examples of open source products are the [[Apache HTTP Server]], the e-commerce platform [[osCommerce]] and the internet browser [[Mozilla Firefox]]. One of the most successful open source products is the [[Linux|GNU/Linux]] operating system, an open source [[Unix-like]] operating system.&lt;ref&gt;Michael J. Gallivan, âStriking a Balance Between Trust and Control in a Virtual Organization: A Content Analysis of Open Source Software Case Studiesâ, Info Systems Journal 11 (2001): 277â304&lt;/ref&gt;&lt;ref&gt;Hal Plotkin, âWhat (and Why) you should know about open-source softwareâ Harvard Management Update 12 (1998): 8-9&lt;/ref&gt; In some fields, open software is the norm, like in VoIP applications with [[Asterisk (PBX)]]. Open source standards are not, however, limited to open-source software.  For example, Microsoft has also joined the open-source discussion with the adoption of their [[OpenDocument]] format&lt;ref name=&quot;papers.ssrn.com&quot;/&gt; as well as creating another open standard, the Office Open XML formats.

==Development philosophy==
In his 1997 essay ''The Cathedral and the Bazaar'',&lt;ref name=&quot;ray2000&quot;&gt;{{cite web
 |last=Raymond
 |first=Eric S.
 |authorlink=Eric S. Raymond
 |date=2000-09-11
 |title=The Cathedral and the Bazaar
 |accessdate=2004-09-19
| url=http://www.catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/index.html
}}&lt;/ref&gt; [[open source evangelist]] Eric S. Raymond suggests a model for developing OSS known as the ''bazaar'' model. Raymond likens the development of software by traditional methodologies to building a cathedral, &quot;carefully crafted by individual wizards or small bands of mages working in splendid isolation&quot;.&lt;ref name=&quot;ray2000&quot;/&gt; He suggests that all software should be developed using the bazaar style, which he described as &quot;a great babbling bazaar of differing agendas and approaches.&quot;

In the traditional model of development, which he called the ''cathedral'' model, development takes place in a centralized way. Roles are clearly defined. Roles include people dedicated to designing (the architects), people responsible for managing the project, and people responsible for implementation. Traditional software engineering follows the cathedral model. [[Fred Brooks|Fred P. Brooks]] in his book ''[[The Mythical Man-Month]]'' advocates this model. He goes further to say that in order to preserve the architectural integrity of a system, the system design should be done by as few architects as possible.

The bazaar model, however, is different. In this model, roles are not clearly defined. Gregorio Robles&lt;ref&gt;{{cite book
 |last=Robles
 |first=Gregorio
 |year=2004
 |chapter=A Software Engineering Approach to Libre Software
 |chapterurl=http://www.opensourcejahrbuch.de/2004/pdfs/III-3-Robles.pdf
 |format=PDF
 |title=Open Source Jahrbuch 2004
 |editor=Robert A. Gehring, Bernd Lutterbeck
 |location=Berlin
 |publisher=[[Technical University of Berlin]]
 |url=http://www.opensourcejahrbuch.de
 |accessdate=2005-04-20
}}&lt;/ref&gt; suggests that software developed using the bazaar model should exhibit the following patterns:

; Users should be treated as co-developers: The users are treated like co-developers and so they should have access to the source code of the software. Furthermore users are encouraged to submit additions to the software, code fixes for the software, bug reports, documentation etc. Having more co-developers increases the rate at which the software evolves. [[Linus's law]] states, &quot;Given enough eyeballs all bugs are shallow.&quot; This means that if many users view the source code, they will eventually find all bugs and suggest how to fix them. Note that some users have advanced programming skills, and furthermore, each user's machine provides an additional testing environment. This new testing environment offers that ability to find and fix a new bug.
; Early releases: The first version of the software should be released as early as possible so as to increase one's chances of finding co-developers early.
; Frequent integration: Code changes should be integrated (merged into a shared code base) as often as possible so as to avoid the overhead of fixing a large number of bugs at the end of the project life cycle. Some open source projects have nightly builds where [[continuous integration|integration is done automatically]] on a daily basis.
; Several versions: There should be at least two versions of the software. There should be a buggier version with more features and a more stable version with fewer features. The buggy version (also called the development version) is for users who want the immediate use of the latest features, and are willing to accept the risk of using code that is not yet thoroughly tested. The users can then act as co-developers, reporting bugs and providing bug fixes.
; High modularization: The general structure of the software should be modular allowing for parallel development on independent components.
; Dynamic decision making structure: There is a need for a decision making structure, whether formal or informal, that makes strategic decisions depending on changing user requirements and other factors. Cf. [[Extreme programming]].

Data suggests, however, that OSS is not quite as democratic as the bazaar model suggests. An analysis of five billion bytes of free/open source code by 31,999 developers shows that 74% of the code was written by the most active 10% of authors. The average number of authors involved in a project was 5.1, with the median at 2.&lt;ref&gt;{{cite journal|last=Ghosh|first=R.A.|coauthors=Robles, G. and Glott, R.|title=Free/Libre and Open Source Software: Survey and Study Part V.|journal=Maastricht: International Institute of Infonomics.|year=2002}}&lt;/ref&gt;

==Licensing==
{{Unreferenced section|date=November 2007}}
{{Main|Open-source license}}

A license defines the rights and obligations that a licensor grants to a licensee. Open Source licenses grant licensees the right to copy, modify and redistribute source code (or content). These licenses may also impose obligations (e.g., modifications to the code that are distributed must be made available in source code form, an author attribution must be placed in a program/ documentation using that Open Source, etc.).

Authors initially derive a right to grant a license to their work based on the legal theory that upon creation of a work the author owns the copyright in that work. What the author/licensor is granting when they grant a license to copy, modify and redistribute their work is the right to use the authorâs copyrights. The author still retains ownership of those copyrights, the licensee simply is allowed to use those rights, as granted in the license, so long as they maintain the obligations of the license. The author does have the option to sell/assign, versus license, their exclusive right to the copyrights to their work; whereupon the new owner/assignee controls the copyrights.  The ownership of the copyright (the ârightsâ) is separate and distinct from the ownership of the work (the âthingâ) - a person can own a copy of a  piece of code (or a copy of a book) without the rights to copy, modify or redistribute copies of it.

When an author contributes code to an Open Source project (e.g., Apache.org) they do so under an explicit license (e.g., the Apache Contributor License Agreement) or an implicit license (e.g., the Open Source license under which the project is already licensing code).  Some Open Source projects do not take contributed code under a license, but actually require (joint) assignment of the authorâs copyright in order to accept code contributions into the project (e.g., OpenOffice.org and its Joint Copyright Assignment agreement).

Placing code (or content) in the public domain is a way of waiving an authorâs (or ownerâs) copyrights in that work.  No license is granted, and none is needed, to copy, modify or redistribute a work in the public domain.

Examples of [[free software license]] / open source licenses include [[Apache License]], [[BSD license]], GNU General Public License, [[GNU Lesser General Public License]], [[MIT License]], [[Eclipse Public License]] and [[Mozilla Public License]].

The proliferation of open source licenses is one of the few negative aspects of the open source movement because it is often difficult to understand the legal implications of the differences between licenses.With more than 180,000 open source projects available and its more than 1400 unique licenses, the complexity of deciding how to manage open source usage within âclosed-sourceâ
commercial enterprises have dramatically increased. Some are home-grown while others are modeled after mainstream FOSS licenses such as Berkeley Software Distribution (âBSDâ), Apache, MIT-style (Massachusetts Institute of Technology), or GNU General Public License (âGPLâ).   In view of this, open source practitioners are starting to use classification schemes in which FOSS licenses are grouped (typically based on the existence and obligations imposed by the copyleft provision; the strength of the copyleft provision).&lt;ref&gt;Andrew T. Pham, Verint Systems Inc. and Matthew B. Weinstein and Jamie L. Ryerson. â[http://www.ipo.org/AM/Template.cfm?Section=Patents&amp;Template=/CM/ContentDisplay.cfm&amp;ContentID=26682 Easy as ABC: Categorizing Open Source Licenses]â; www.IPO.org. June 2010.&lt;/ref&gt;

An important legal milestone for the open source / free software movement was passed in 2008, when the US federal appeals court ruled that [[free software licences]] definitely do set legally binding conditions on the use of copyrighted work, and they are therefore enforceable under existing copyright law. As a result, if end-users do violate the licensing conditions, their license disappears, meaning they are infringing copyright.&lt;ref&gt;{{cite news
 |url=http://news.bbc.co.uk/1/hi/technology/7561943.stm
 |title=Legal milestone for open source
 |first=Maggie
 |last=Shiels
 |date=2008-08-14
 |publisher=[[BBC News]]
 |accessdate=2008-08-15
}}&lt;/ref&gt;

==Funding==
{{See also|Commercial open source applications}}

Unlike proprietary off-the-shelf software, which comes with restrictive copyright licenses, open-source software can be given away for no charge. This means that its creators cannot require each user to pay a license fee to fund development. Instead, a number of alternative models for funding its development have emerged.

Software can be developed as a consulting project for one or more customers. The customers pay to direct the developers' efforts: to have bugs prioritized and fixed or features added. Companies or independent consultants can also charge for training, installation, [[technical support]], or customization of the software.

Another approach to funding is to provide the software freely, but sell licenses to proprietary add-ons such as data libraries. For instance, an open-source [[computer aided design|CAD]] program may require parts libraries which are sold on a subscription or flat-fee basis. Open-source software can also promote the sale of specialized hardware that it interoperates with, as in the case of the Asterisk telephony software, developed by a manufacturer of PC telephony hardware.

Many open-source software projects have begun as research projects within universities, as personal projects of students or professors, or as tools to aid scientific research. The influence of universities and research institutions on open source shows in the number of projects named after their host institutions, such as [[BSD Unix]], [[CMU Common Lisp]], or the [[NCSA HTTPd]] which evolved into [[Apache Web server|Apache]].

Companies may employ developers to work on open-source projects that are useful to the company's infrastructure: in this case, it is developed not as a product to be sold but as a sort of shared public utility. A local bug-fix or solution to a software problem, written by a developer either at a companyâs request or to make his/her own job easier, can be released as an open source contribution without costing the company anything.&lt;ref name=&quot;Holtgrewe 2004 129â146&quot;/&gt; A larger project such as the Linux kernel may have contributors from dozens of companies which use and depend upon it, as well as hobbyist and research developers.

==Comparison with closed source==
{{Unreferenced section|date=November 2007}}
{{Main|Comparison of open source and closed source}}

The debate over ''open source'' vs. ''[[closed source]]'' (alternatively called [[proprietary software]]) is sometimes heated.

One source of conflict is related to economics: Making money through traditional methods, such as sale of the use of individual copies and patent royalty payment (generally called ''licensing''), is more difficult and in many ways against the very concept of open source software.

Some closed-source advocates see open source software as damaging to the market of commercial software. This is one of the many reasons, as mentioned above, that the term ''free software'' was replaced with ''open source'' â because many company executives could not believe in a product that did not participate economically in a free-market or mixed-market economy.

The counter to this argument is the use of open source software to fuel the market for a separate product or service. For example:
* Providing support and installation services; similar to IT Security groups, Linux Distributions, and Systems companies.
* Using the software as a stepping stone to sell a higher-end product or service; e.g., [[OpenOffice.org]] vs. [[StarOffice]].
* Opensource CRM is the affordable solution for small and medium sized business. e.g./ [inspireCRM] vs. [Microsoft Dynamics]
* Cost avoidance / cost sharing: many developers need a product, so it makes sense to share development costs ([[X Window System]] and the Apache web server)

Since open source software is open, defects and security flaws are more easily found. Closed-source advocates argue that this makes it easier for a malicious person to discover security flaws. Further, that there is no incentive for an open-source product to be patched. Open-source advocates argue that this makes it easier also for a patch to be found and that the closed-source argument is [[security through obscurity]], which this form of security will eventually fail, often without anyone knowing of the failure. Further, that just because there is not an immediate financial incentive to patch a product, does not mean there is not any incentive to patch a product. Further, if the patch is that significant to the user, having the source code, the user can technically patch the problem themselves. These arguments are hard to prove. However, research indicates &lt;ref&gt;As a case in point, the study [http://www.wired.com/software/coolapps/news/2004/12/66022 Linux: Fewer Bugs Than Rivals] reports that linux source code has 0.17 bugs per 1000 lines of code while non-Open-Source commercial software generally scores 20-30 bugs per 1000 lines&lt;/ref&gt; that the open-source software - Linux - has a lower percentage of bugs than some commercial software.

==Comparison with free software==
{{Main|Alternative terms for free software}}

The main difference is that by choosing one term over the other (i.e. either &quot;open source&quot; or &quot;free software&quot;) one lets others know about what one's goals are. As [[Richard Stallman]] puts it, &quot;Open source is a development methodology; free software is a social movement.&quot;&lt;ref&gt;{{cite web |url=http://www.gnu.org/philosophy/free-software-for-freedom.html |title=Why &quot;Free Software&quot; is better than &quot;Open Source&quot; }}&lt;/ref&gt;

Critics have said that the term âopen sourceâ fosters an ambiguity of a different kind such that it confuses the mere availability of the source with the freedom to use, modify, and redistribute it. Developers have used the [[alternative terms for free software|alternative terms]] ''Free/open source Software'' ([[FOSS]]), or ''Free/Libre/open source Software'' (FLOSS), consequently, to describe open source software which is also free software.

The term âopen sourceâ was originally intended to be trademarkable; however, the term was deemed too descriptive, so no trademark exists.&lt;ref&gt;{{cite web
 |url=http://opensource.org/docs/certification_mark.html
 |title=Certification Mark
 |last=Nelson
 |first=Russell
 |authorlink=Russ Nelson
 |date=2007-03-26
 |publisher=[[Open Source Initiative]]
 |archiveurl=http://web.archive.org/web/20080206050627/http://www.opensource.org/docs/certification_mark.html
 |archivedate=2008-02-06
 |accessdate=2007-07-22
}}&lt;/ref&gt; The OSI would prefer that people treat Open Source as if it were a trademark, and use it only to describe software licensed under an OSI approved license.&lt;ref&gt;{{cite web
 |url=http://www.opensource.org/pressreleases/osi-launch.php
 |title=OSI Launch Announcement
 |last=Raymond
 |first=Eric S.
 |authorlink=Eric S. Raymond
 |date=1998-11-22
 |publisher=[[Open Source Initiative]]
 |accessdate=2007-07-22
}}&lt;/ref&gt;

'''OSI Certified''' is a trademark licensed only to people who are distributing software licensed under a license listed on the [[Open Source Initiative]]'s list.&lt;ref&gt;{{cite web
 |url=http://opensource.org/licenses
 |title=Open Source Licenses by Category
 |last=Nelson
 |first=Russell
 |authorlink=Russ Nelson
 |date=2006-09-19
 |publisher=[[Open Source Initiative]]
 |accessdate=2007-07-22
}}&lt;/ref&gt;

Open source software and free software are different terms for software which comes with certain rights, or freedoms, for the user. They describe two approaches and [[philosophy|philosophies]] towards free software. ''Open source'' and ''free software'' (or ''software libre'') both describe software which is free from onerous licensing restrictions. It may be used, copied, studied, modified and redistributed without restriction. Free software is not the same as [[freeware]], software available at zero price.

The definition of open source software was written to be almost identical to the [[free software definition]].&lt;ref name=&quot;Stallman20070616&quot;&gt;{{cite web
 |url=http://www.gnu.org/philosophy/open-source-misses-the-point.html
 |title=Why &quot;Open Source&quot; misses the point of Free Software
 |last=Stallman
 |first=Richard
 |authorlink =Richard Stallman
 |date=2007-06-16
 |work=Philosophy of the GNU Project
 |publisher=[[GNU Project]]
 |accessdate=2007-07-23
}}&lt;/ref&gt; There are very few cases of software that is free software but is not open source software, and vice versa. The difference in the terms is where they place the emphasis. âFree softwareâ is defined in terms of giving the user freedom. This reflects the goal of the free software movement. âOpen sourceâ highlights that the source code is viewable to all; proponents of the term usually emphasize the quality of the software and how this is caused by the development models which are possible and popular among free and open source software projects.

Free software licenses are not written exclusively by the FSF. The FSF and the OSI both list licenses which meet their respective definitions of free software or open source software.

The FSF believes that knowledge of the concept of freedom is an essential requirement,&lt;ref name=&quot;Stallman20070616&quot;/&gt;&lt;ref name=&quot;Stallman20070619&quot;&gt;{{cite web
 |url=http://www.gnu.org/philosophy/free-software-for-freedom.html
 |title=Why &quot;Free Software&quot; is better than &quot;Open Source&quot;
 |last=Stallman
 |first=Richard
 |authorlink=Richard Stallman
 |date=2007-06-19
 |work=Philosophy of the GNU Project
 |publisher=GNU Project
 |accessdate=2007-07-23
}}&lt;/ref&gt; insists on the use of the term ''free'',&lt;ref name=&quot;Stallman20070616&quot;/&gt;&lt;ref name=&quot;Stallman20070619&quot;/&gt; and separates itself from the open source movement.&lt;ref name=&quot;Stallman20070616&quot;/&gt;&lt;ref name=&quot;Stallman20070619&quot;/&gt;

==Open source vs. source-available==

Although the OSI definition of &quot;open source software&quot; is widely accepted, a small number of people and organizations use the term to refer to software where the source is available for viewing, but which may not legally be modified or redistributed. Such software is more often referred to as ''source-available'', or as ''[[shared source]]'', a term coined by Microsoft.

[[Michael Tiemann]], president of OSI, had criticized&lt;ref&gt;{{cite web
 |url=http://www.opensource.org/node/163
 |title=Will The Real Open Source CRM Please Stand Up?
 |first=Michael
 |last=Tiemann
 |authorlink=Michael Tiemann
 |date=2007-06-21
 |publisher=[[Open Source Initiative]]
 |accessdate=2008-01-04
}}&lt;/ref&gt; companies such as [[SugarCRM]] for promoting their software as &quot;open source&quot; when in fact it did not have an OSI-approved license. In SugarCRM's case, it was because the software is so-called &quot;[[badgeware]]&quot;&lt;ref&gt;{{cite web
 |url=http://blogs.zdnet.com/BTL/index.php?p=3430
 |date=2006-11-21
 |title=Are SugarCRM, Socialtext, Zimbra, Scalix and others abusing the term &quot;open source?&quot;
 |first=David
 |last=Berlind
 |publisher=[[ZDNet]]
 |accessdate=2008-01-04
}}&lt;/ref&gt; since it specified a &quot;badge&quot; that must be displayed in the user interface (SugarCRM has since switched to [[GPLv3]]&lt;ref&gt;{{cite news
 |last=Vance
 |first=Ashlee
 |authorlink=Ashlee Vance
 |date=2007-07-25
 |title=SugarCRM trades badgeware for GPL 3
 |publisher=[[The Register]]
 |url=http://www.regdeveloper.co.uk/2007/07/25/sugarcrm_gpl3/
 |accessdate=2008-09-08
}}&lt;/ref&gt;). Another example is [[Scilab]], which calls itself &quot;the open source platform for numerical computation&quot;&lt;ref&gt;{{cite web
 |url=http://www.scilab.org
 |title=The open source platform for numerical computation
 |publisher=[[Institut national de recherche en informatique et en automatique|INRIA]]
 |accessdate=2008-01-04
}}&lt;/ref&gt; but has a license&lt;ref&gt;{{cite web
 |url=http://www.scilab.org/legal/license.html
 |title=SCILAB License
 |publisher=INRIA
 |accessdate=2008-01-04
}}&lt;/ref&gt; that forbids commercial redistribution of modified versions. Because OSI does not have a registered trademark for the term &quot;open source&quot;, its legal ability to prevent such usage of the term is limited, but Tiemann advocates using public opinion from OSI, customers, and community members to pressure such organizations to change their license or to use a different term.

==Pros and cons for software producers==
Software experts and researchers on open source software have identified several advantages and disadvantages. The main advantage for business is that open source is a good way for business to achieve greater penetration of the market. Companies that offer open source software are able to establish an industry standard and, thus, gain competitive advantage{{Citation needed|date=August 2011}}. It has also helped build developer loyalty as developers feel empowered and have a sense of ownership of the end product.&lt;ref name=&quot;Sharma2002&quot;&gt;{{cite journal
 |first=Srinarayan
 |last=Sharma
 |coauthors=Vijayan Sugumaran and Balaji Rajagopalan
 |title=A framework for creating hybrid-open source software communities
 |journal=Info Systems Journal
 |volume=12
 |year=2002
 |pages=7â25
 |url=http://www.cin.ufpe.br/~in953/lectures/papers/ISJAFrameworkForCreatingHybrid-OpenSourceSoftwareCommunities.pdf
 |format=PDF
 |doi=10.1046/j.1365-2575.2002.00116.x
}}&lt;/ref&gt; Moreover less costs of marketing and logistical services are needed for OSS. It also helps companies to keep abreast of all technology developments. It is a good tool to promote a company's image, including its commercial products.&lt;ref&gt;{{cite journal
 |title=Profiting from Open Source
 |first=John
 |last=Landry
 |coauthors=Rajiv Gupta
 |journal=[[Harvard Business Review]]
 |month=September
 |year=2000
 |doi=10.1225/F00503}}&lt;/ref&gt; The OSS development approach has helped produce reliable, high quality software quickly and inexpensively.&lt;ref&gt;{{cite journal
 |url=http://www.jmir.org/2011/1/e24/
 |title=Open Source, Open Standards, and Health Care Information Systems
 |last=Reynolds
 |first=Carl
 |coauthors=Jeremy Wyatt
 |journal=[[JMIR]]
 |month=February
 |year=2011
 |doi=10.2196/jmir.1521
 |accessdate=2011-03-17
 |volume=13
}}&lt;/ref&gt; The term âopen sourceâ was originally intended to be trademarkable; however, the term was deemed too descriptive, so no trademark exists. Besides, it offers the potential for a more flexible technology and quicker innovation. It is said to be more reliable since it typically has thousands of independent programmers testing and fixing bugs of the software. It is flexible because modular systems allow programmers to build custom interfaces, or add new abilities to it and it is innovative since open source programs are the product of collaboration among a large number of different programmers. The mix of divergent perspectives, corporate objectives, and personal goals speeds up innovation.&lt;ref&gt;{{cite journal
 |first=Hal
 |last=Plotkin
 |title=What (and Why) you should know about open-source software
 |journal=Harvard Management Update
 |month=December
 |year=1998
 |pages=8â9
 |doi=10.1225/U9812D}}&lt;/ref&gt; Moreover free software can be developed in accord with purely technical requirements. It does not require thinking about commercial pressure that often degrades the quality of the software. Commercial pressures make traditional software developers pay more attention to customers' requirements than to security requirements, since such features are somewhat invisible to the customer.&lt;ref&gt;{{cite journal
 |first=Christian
 |last=Payne
 |title=On the Security of Open Source Software
 |journal=Info Systems Journal
 |month=February
 |year=2002
 |volume=12
 |issue=1
 |pages=61â78
 |doi=10.1046/j.1365-2575.2002.00118.x}}&lt;/ref&gt;

It is sometimes said that the open source development process may not be well defined and the stages in the development process, such as system testing and documentation may be ignored. However this is only true for small (mostly single programmer) projects. Larger, successful projects do define and enforce at least some rules as they need them to make the teamwork possible.&lt;ref&gt;http://www.gnu.org/software/classpath/docs/hacking.html&lt;/ref&gt;&lt;ref&gt;{{cite web
 |url=http://jgap.sourceforge.net/doc/codestyle.html
 |title=Brief summary of coding style and practice used in JGAP
 |first=Klaus
 |last=Meffert
 |coauthors=Neil Rotstan
 |year=2007
 |publisher=Java Genetic Algorithms Package
 |accessdate=2008-09-08
}}&lt;/ref&gt; In the most complex projects these rules may be as strict as reviewing even minor change by two independent developers.&lt;ref&gt;{{cite web
 |url=http://www.javalobby.org/java/forums/t98834.html
 |title=Classpath hackers frustrated with slow OpenJDK process
 |date=2007-07-16
 |first=Andy
 |last=Tripp
 |publisher=Javalobby
}}&lt;/ref&gt;

Not all OSS initiatives have been successful, for example, SourceXchange and Eazel.&lt;ref name=&quot;Sharma2002&quot;/&gt; Software experts and researchers who are not convinced by open sourceâs ability to produce quality systems identify the unclear process, the late defect discovery and the lack of any empirical evidence as the most important problems (collected data concerning productivity and quality).&lt;ref name=&quot;autogenerated1&quot;&gt;{{cite journal
 |first=Ioannis
 |last=Stamelos
 |coauthors=Lefteris Angelis, Apostolos Oikonomou and Georgios L. Bleris
 |title=Code Quality Analysis in Open Source Software Development
 |url=http://csdl2.computer.org/persagen/DLAbsToc.jsp?resourcePath=/dl/mags/so/&amp;toc=comp/mags/so/2007/01/s1toc.xml&amp;DOI=10.1109/MS.2007.2
 |doi=10.1109/MS.2007.2
 |format=PDF
 |journal=Info Systems Journal
 |volume=12
 |year=2002
 |pages=43â60
 |accessdate=2008-09-08
}}&lt;/ref&gt; It is also difficult to design a commercially sound business model around the open source paradigm. Consequently, only technical requirements may be satisfied and not the ones of the market.&lt;ref name=&quot;autogenerated1&quot;/&gt; In terms of security, open source may allow hackers to know about the weaknesses or loopholes of the software more easily than closed-source software. It is depended of control mechanisms in order to create effective performance of autonomous agents who participate in virtual organizations.&lt;ref&gt;{{cite journal
 |first=Michael J.
 |last=Gallivan
 |title=Striking a Balance Between Trust and Control in a Virtual Organization: A Content Analysis of Open Source Software Case Studies
 |journal=Info Systems Journal
 |volume=11
 |issue=4
 |year=2001
 |pages=277â304
 |doi=10.1111/j.1365-2575.2001.00108.x}}&lt;/ref&gt;

==Development tools==
{{Unreferenced section|date=January 2008}}
In OSS development, the participants, who are mostly volunteers, are distributed among different geographic regions, so there is need for tools to aid participants to collaborate in source code development. Often, these tools are also available as OSS.

[[Revision control]] systems such as [[Concurrent Versions System]] (CVS) and later [[Subversion (software)|Subversion]] (svn) and [[Git (software)|Git]] are examples of tools that help centrally manage the source code files and the changes to those files for a software project.

Utilities that automate testing, compiling, and bug reporting help preserve stability and support of software projects that have numerous developers but no managers, quality controller, or technical support. Building systems that report compilation errors among different platforms include [[Tinderbox (software)|Tinderbox]]. Commonly used [[bugtracker]]s include [[Bugzilla]] and [[GNATS]].

Tools such as [[mailing lists]], [[Internet Relay Chat|IRC]], and [[instant messaging]] provide means of Internet communication between developers. The Web is also a core feature of all of the above systems. Some sites centralize all the features of these tools as a [[software development management system]], including [[GNU Savannah]], [[SourceForge]], and [[BountySource]].

==Projects and organizations==
One of the benefits of open source software is that there are a wide variety of codes in oss projects for program developers. Without any blocking of this wide and diverse platform, developers create a wide range of projects and organizations. Some of the &quot;more prominent organizations&quot; involved in OSS development include the [[Apache Software Foundation]], creators of the Apache web server; a loose affiliation of developers headed by Linus Torvalds, creators of the [[Linux kernel|Linux]] operating system kernel; the [[Eclipse Foundation]], home of the [[Eclipse (software)|Eclipse]] software development platform; the Debian Project, creators of the influential Debian GNU/Linux distribution;
the [[Mozilla Foundation]], home of the Firefox web browser; and [[OW2]], European-born community developing open-source middleware. New organizations tend to have a more sophisticated governance model and their membership is often formed by legal entity members.&lt;ref&gt;[[FranÃ§ois Letellier]] (2008), [http://flet.netcipia.net/xwiki/bin/download/Main/publications%2Dfr/GEM2008%2DFLetellier%2DSubmittedPaper.pdf Open Source Software: the Role of Nonprofits in Federating Business and Innovation Ecosystems], AFME 2008.&lt;/ref&gt;

Several Open Source programs have become defining entries in their space, including the [[GIMP]] image editing system; [[Sun Microsystems|Sun's]] [[Java (programming language)|Java]] programming language and environment; the MySQL database system; the [[FreeBSD]] Unix operating system; [[Sun Microsystems|Sun's]] [[OpenOffice.org]] office productivity suite; and the [[Wireshark]] network [[packet sniffer]] and protocol analyser.

Open Source development is often performed &quot;live and in public&quot;, using services provided for free on the Internet, such as the [[Launchpad (website)|Launchpad]] and [[SourceForge.net|SourceForge]] web sites, and using tools that are themselves Open Source, including the CVS and Subversion source control systems, and the [[GNU Compiler Collection]].

[http://opensourceforamerica.org/ Open Source for America] is an effort to raise awareness in the U.S. Federal Government about the benefits of open source software. We hope to encourage the governmentâs utilization of open source software participation in open source software projects, and incorporation of open source community dynamics to enable transparency.

[http://mil-oss.org/ Mil-OSS] is a group dedicated to the advancement of OSS use and creation in the military.

==Certification==

Certification can help to build higher user confidence. Certification could be applied to the simplest component that can be used by developers to build the simplest module to a whole software system. There have been numerous institutions involving in this area of the open source software including The International Institute of Software Technology / United Nations University (http://www.iist.unu.edu). UNU/IIST is a [[non-profit]] research and education institution of The United Nations. It is currently involved in a project known as &quot;The Global Desktop Project&quot;. This project aims to build a desktop interface that every end-user is able to understand and interact with, thus crossing the language and cultural barriers. It is drawing huge attention from parties involved in areas ranging from application development to localization. Furthermore, this project will improve developing nations' access to information systems. UNU/IIST aims to achieve this without any compromise in the quality of the software. It believes a global standard can be maintained by introducing certifications and is currently organizing conferences in order to explore frontiers in the field (http://opencert.iist.unu.edu).

Alternatively, assurance models (such as [[DO178B]]) have already solved the &quot;certification&quot; approach for software.  This approach is tailorable and can be applied to OSS, but only if the requisite planning and execution, design, test and traceability artifacts are generated.

==Criticism==
{{Ref improve section|date=July 2007}}

The criticisms of the specific [[Open Source Initiative]] (OSI) principles are dealt with above as part of the definition and differentiation from other terms. The open content movement does not recognize nor endorse the OSI principles and embraces instead mutual [[Share-Alike]] agreements that require commercial use or the preparation of [[derivative work]]s.

Of the vocal critics, Richard Stallman of the FSF, flatly opposes the term âOpen Sourceâ being applied to what they refer to as âfree softwareâ. Although it is clear that legally free software does qualify as open source, Stallman considers that the category is abusive.&lt;ref&gt;{{cite web |url = http://www.gnu.org/philosophy/open-source-misses-the-point.html |title = Why &quot;Open Source&quot; misses the point of Free Software |accessdate = July 23, 2007 |last = Stallman |first = Richard |authorlink = Richard Stallman |date=  June 16, 2007 |work = Philosophy of the GNU Project |publisher = Free Software Foundation |quote = As the advocates of open source draw new users into our community, we free software activists have to work even more to bring the issue of freedom to those new users' attention. We have to say, âIt's free software and it gives you freedom!ââmore and louder than ever. Every time you say âfree softwareâ rather than âopen source,â you help our campaign. }}&lt;/ref&gt; Critics also oppose the professed pragmatism of the [[Open Source Initiative]], as they fear that the free software ideals of freedom and community are threatened by compromising on the FSF's idealistic standards for software freedom.&lt;ref&gt;{{cite web |url = http://www.gnu.org/philosophy/free-software-for-freedom.html |title = Why &quot;Free Software&quot; is better than &quot;Open Source&quot; |accessdate = July 23, 2007 |last = Stallman |first = Richard |authorlink = Richard Stallman |date=  June 19, 2007 |work = Philosophy of the GNU Project |publisher = Free Software Foundation |quote = Sooner or later these users will be invited to switch back to proprietary software for some practical advantage. Countless companies seek to offer such temptation, and why would users decline? Only if they have learned to value the freedom free software gives them, for its own sake. It is up to us to spread this ideaâand in order to do that, we have to talk about freedom. A certain amount of the âkeep quietâ approach to business can be useful for the community, but we must have plenty of freedom talk too. }}&lt;/ref&gt;&lt;ref&gt;{{cite web |url = http://www.gnu.org/philosophy/open-source-misses-the-point.html |title = Why &quot;Open Source&quot; misses the point of Free Software |accessdate = July 23, 2007 |last = Stallman |first = Richard |authorlink = Richard Stallman |date=  June 16, 2007 |work = Philosophy of the GNU Project |publisher = Free Software Foundation |quote = Under the pressure of the movie and record companies, software for individuals to use is increasingly designed specifically to restrict them. This malicious feature is known as DRM, or Digital Restrictions Management (see [http://defectivebydesign.org/ DefectiveByDesign.org]), and it is the antithesis in spirit of the freedom that free software aims to provide. [â¦] Yet some open source supporters have proposed âopen source DRMâ software. Their idea is that by publishing the source code of programs designed to restrict your access to encrypted media, and allowing others to change it, they will produce more powerful and reliable software for restricting users like you. Then it will be delivered to you in devices that do not allow you to change it. This software might be âopen source,â and use the open source development model; but it won't be free software, since it won't respect the freedom of the users that actually run it. If the open source development model succeeds in making this software more powerful and reliable for restricting you, that will make it even worse.}}&lt;/ref&gt;

Increasingly, the consensus term &quot;[[free and open-source software]]&quot; is used by the communities at large to describe the common ground between free software and open-source software.

==See also==
{{Portal|Free software}}
* [[Open source]]
* [[Free software]]
* [[Free alternatives to proprietary software]]
* [[Free software community]]
* [[List of open source software packages]]
* [[Open source advocacy]]
* [[Open Source Initiative]]
* [[Open source software security]]
* [[Open source video games]]
* [[Business models for open source software]]
* [[Shared source]]
* [[Timeline of open source software]]
* [[Open source hardware]]

==References==
{{Reflist|2}}

==Further reading==
*{{cite journal
| last=Androutsellis-Theotokis
| first=Stephanos
| last2=Spinellis
| first2=Diomidis
| authorlink2=Diomidis Spinellis
| last3=Kechagia
| first3=Maria
| last4=Gousios
| first4=Georgios
| year         = 2010
| title        = Open source software: A survey from 10,000 feet
| journal      = Foundations and Trends in Technology, Information and Operations Management
| volume       = 4
| issue        = 3-4
| pages        = 187â347
| isbn         = 978-1-60198-484-5
| doi          = 10.1561/0200000026
| url          = http://www.dmst.aueb.gr/dds/pubs/jrnl/2010-TOMS-OSS-Survey/html/ASKG10.pdf
| format       = PDF
}}
* {{cite book
| author=Fadi P. Deek and James A. M. McHugh
| title=Open Source: Technology and Policy
| publisher=Cambridge University Press
| address=Cambridge
| year=2008
| ISBN=978-0-511-36775-5
}}
* {{cite book
| title=Open Sources: Voices from the Open Source Revolution
| editor=Chris DiBona and Sam Ockman and Mark Stone
| publisher=O'Reilly
| year=1999
| ISBN=1-56592-582-3
}}
* {{cite book
| editor = Joshua Gay
| title = Free Software, Free Society: Selected Essays of Richard M. Stallman
| publisher = GNU Press, Free Software Foundation
| year = 2002
| address = Boston
| isbn = 1882114981
| url = http://www.gnu.org/philosophy/fsfs/rms-essays.pdf
}}
*Free Open Source Software Book Author &quot;[http://books.google.co.in/books?id=2JwU71HSkikC&amp;printsec=frontcover&amp;dq=k.s.sampathkumar&amp;source=bl&amp;ots=wFNsEJ7tDL&amp;sig=VJLpX2YBhdIzs6b69qGa-hpWPBo&amp;hl=en&amp;ei=AC-1TcuRFcrtrQe1wI3IDQ&amp;sa=X&amp;oi=book_result&amp;ct=result&amp;resnum=5&amp;ved=0CCkQ6AEwBA#v=onepage&amp;q&amp;f=false Understanding FOSS]&quot; '''K.S.Sampathkumar Coimbatore India'''

===Legal and economic aspects===
*[http://www.benkler.org/CoasesPenguin.PDF Benkler, Yochai (2002), âCoase's Penguin, or, Linux and The Nature of the Firm.&quot; Yale Law Journal 112.3 (Dec 2002): p367(78)] (in Adobe [[Portable Document Format|pdf]] format)
*{{cite book |last=v. Engelhardt |first=Sebastian |year=2008|url=http://ideas.repec.org/p/jrp/jrpwrp/2008-045.html |title=&quot;The Economic Properties of Software&quot;, Jena Economic Research Papers, Volume 2 (2008), Number 2008-045 |format=PDF}}
*Lerner, J. &amp; Tirole, J. (2002): âSome simple economics on open sourceâ, Journal Of Industrial Economics 50(2), p 197â234
*{{cite book |first=Mikko |last=VÃ¤limÃ¤ki |title=The Rise of Open Source Licensing: A Challenge to the Use of Intellectual Property in the Software Industry |publisher=Turre Publishing |year=2005 |url=http://pub.turre.com/openbook_valimaki.pdf |format=PDF}}
*{{cite journal |last=Polley |first=Barry |date=2007-12-11 |url=http://nzoss.org.nz/system/files/moj_oss_strategy_1.0.pdf |title=Open Source Discussion Paper â version 1.0 |publisher=New Zealand Ministry of Justice |accessdate=2007-12-12 |format=PDF}}
*Rossi, M. A. (2006): Decoding the free/open source software puzzle: A survey of theoretical and empirical contributions, in J. Bitzer P. SchrÃ¶der, eds, âThe Economics of Open Source Software Developmentâ, p 15â55.

==External links==
{{Commons category|Free software}}
{{Wikibooks|Open Source}}
*[[Computerworld]] article: [http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;taxonomyName=development&amp;articleId=9066615&amp;taxonomyId=11&amp;intsrc=kc_top Does the open-source development model work for business users?]
*The [[Open Source Initiative|Open Source Initiative's]] [http://opensource.org/docs/definition.php definition of open source]
*[http://www.oreilly.com/catalog/opensources/book/toc.html Open Sources: Voices from the Open Source Revolution] â an online book containing essays from prominent members of the open source community
*[http://opensource.mit.edu/online_papers.php Free / Open Source Research Community] â Many online research papers about Open Source
* [http://freeopensourcesoftware.org/ FreeOpenSourceSoftware.org] - Wiki on Open Source history, organizations, licenses, people, software.
*[[KDE]] developer Aaron Siego's presentation [http://video.google.com/videoplay?docid=1755108258049541143&amp;q=duration%3Along &quot;How OSS Improves Society&quot;] at the 2nd Trans-Pacific Open Source Software Conference in Honolulu, Hawaii, January 2006.
*''[http://www.oreillynet.com/pub/a/oreilly/opensource/news/scoville_0399.html Whence The Source: Untangling the Open Source/Free Software Debate]'', essay on the differences between Free Software and Open Source, by [[Thomas Scoville]]
*[http://opensource.mit.edu/papers/berry1.pdf Berry, D M (2004). The Contestation of Code: A Preliminary Investigation into the Discourse of the Free Software and Open Software Movement, Critical Discourse Studies, Volume 1(1).]
*[http://ec.europa.eu/enterprise/sectors/ict/files/2006-11-20-flossimpact_en.pdf EU study on adopting FLOSS]
*[http://www.osor.eu Open Source Observatory and Repository]
*[http://news.bbc.co.uk/1/hi/technology/7841486.stm Calls for open source government]
*http://osdir.com &quot;All things open&quot;

{{Software distribution}}
{{FOSS}}
{{Intellectual property activism}}

{{DEFAULTSORT:Open-Source Software}}
[[Category:Free software culture and documents]]
[[Category:Free software| ]]
[[Category:Software licenses]]

[[af:Oopbronsagteware]]
[[ar:Ø¨Ø±ÙØ¬ÙØ§Øª ÙÙØªÙØ­Ø© Ø§ÙÙØµØ¯Ø±]]
[[bn:à¦®à§à¦à§à¦¤ à¦¸à§à¦°à§à¦¸ à¦¸à¦«à¦à¦à¦¯à¦¼à§à¦¯à¦¾à¦°]]
[[bg:Ð¡Ð¾ÑÑÑÐµÑ Ñ Ð¾ÑÐ²Ð¾ÑÐµÐ½ ÐºÐ¾Ð´]]
[[bs:Otvoreni softver]]
[[cs:OtevÅenÃ½ software]]
[[el:ÎÎ¿Î³Î¹ÏÎ¼Î¹ÎºÏ Î±Î½Î¿Î¹ÎºÏÎ¿Ï ÎºÏÎ´Î¹ÎºÎ±]]
[[es:Software de cÃ³digo abierto]]
[[eo:Malfermitkoda programaro]]
[[fa:ÙØ±ÙâØ§ÙØ²Ø§Ø± ÙØªÙâØ¨Ø§Ø²]]
[[gl:Software de cÃ³digo aberto]]
[[ko:ì¤í ìì¤ ìíí¸ì¨ì´]]
[[hi:à¤®à¥à¤à¥à¤¤ à¤¸à¥à¤°à¥à¤¤ à¤¸à¥à¤«à¥à¤à¤µà¥à¤¯à¤°]]
[[id:Perangkat lunak sumber terbuka]]
[[lt:Atvirojo kodo programa]]
[[mr:à¤®à¥à¤à¥à¤¤ à¤¸à¥à¤°à¥à¤¤]]
[[nl:Opensourcesoftware]]
[[or:à¬à¬ªà¬¨-à¬¸à­à¬°à­à¬¸ à¬¸à¬«à­à¬à¬¬à­à¬°]]
[[pl:Otwarte oprogramowanie]]
[[ro:Software cu sursÄ deschisÄ]]
[[ru:ÐÑÐºÑÑÑÐ¾Ðµ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð¼Ð½Ð¾Ðµ Ð¾Ð±ÐµÑÐ¿ÐµÑÐµÐ½Ð¸Ðµ]]
[[si:à·à·à·à·à¶­ à¶à·à¶­ à¶¸à·à¶¯à·à¶à·à¶à¶]]
[[sk:Open-source softvÃ©r]]
[[sl:Odprtokodna programska oprema]]
[[ckb:Ø³ÛØ±ÚØ§ÙÛ Ú©Ø±Ø§ÙÛ]]
[[sr:Ð¡Ð¾ÑÑÐ²ÐµÑ Ð¾ÑÐ²Ð¾ÑÐµÐ½Ð¾Ð³ ÐºÐ¾Ð´Ð°]]
[[sh:Otvoreni softver]]
[[ta:à®¤à®¿à®±à®¨à¯à®¤ à®®à¯à®² à®®à¯à®©à¯à®ªà¯à®°à¯à®³à¯]]
[[th:à¸à¸­à¸à¸à¹à¹à¸§à¸£à¹à¹à¸­à¹à¸à¸à¸à¸­à¸£à¹à¸]]
[[uk:ÐÑÐ´ÐºÑÐ¸ÑÐµ Ð¿ÑÐ¾Ð³ÑÐ°Ð¼Ð½Ðµ Ð·Ð°Ð±ÐµÐ·Ð¿ÐµÑÐµÐ½Ð½Ñ]]
[[vi:Pháº§n má»m nguá»n má»]]
[[zh:å¼æºè½¯ä»¶]]</rev></revisions></page></pages></query></api>
