<?xml version="1.0"?><api><query><pages><page pageid="230834" ns="0" title="CAPTCHA"><revisions><rev xml:space="preserve">{{Refimprove|date=January 2011}}
[[File:Captcha.jpg|thumb|290px|Early CAPTCHAs such as these, generated by the EZ-Gimpy program, were used on [[Yahoo!]]. However technology was developed to read this type of CAPTCHA&lt;ref name=autogenerated1&gt;{{cite web |first=Mori, |last=Greg |coauthors=[[Jitendra Malik|Malik, Jitendra]] |url=http://www.cs.sfu.ca/~mori/research/gimpy/ |title=Breaking a Visual CAPTCHA |publisher=Simon Fraser University |date= |accessdate=2008-12-21}}&lt;/ref&gt;]]
[[File:Modern-captcha.jpg|thumb|290px|A modern CAPTCHA, rather than attempting to create a distorted background and high levels of warping on the text, might focus on making [[Segmentation (image processing)|segmentation]] difficult by adding an angled line]]
[[File:KCAPTCHA with crowded symbols.gif|thumb|290px|Another way to make segmentation difficult is to crowd symbols together, as in Yahoo's current CAPTCHA format.]]
&lt;!-- Deleted image removed: [[File:reCAPTCHA sample.PNG|thumb|A CAPTCHA generated by [http://www.google.com/recaptcha reCAPTCHA]. These CAPTCHAs come from old books and extremely distorted, so it is impossible for computers to recognize it.]] --&gt;

A '''''CAPTCHA''''' ({{IPAc-en|icon|Ë|k|Ã¦|p|tÊ|É}}) is a type of [[challenge-response authentication|challenge-response]] test used in [[computing]] as an attempt to ensure that the response is generated by a person. The process usually involves one computer (a [[Server (computing)|server]]) asking a user to complete a simple test which the computer is able to generate and grade. Because other computers are assumed to be unable to solve the CAPTCHA, any user entering a correct solution is presumed to be human. Thus, it is sometimes described as a [[reverse Turing test]], because it is administered by a machine and targeted at a human, in contrast to the standard [[Turing test]] that is typically administered by a human and targeted at a machine. A common type of CAPTCHA requires the user to type letters or digits from a distorted image that appears on the screen.

The term &quot;CAPTCHA&quot; was coined in 2000 by [[Luis von Ahn]], [[Manuel Blum]], Nicholas J. Hopper, and [[John Langford (computer scientist)|John Langford]] (all of [[Carnegie Mellon University]]). It is an [[acronym]] based on the word &quot;capture&quot; and standing for &quot;'''C'''ompletely '''A'''utomated '''P'''ublic '''T'''uring test to tell '''C'''omputers and '''H'''umans '''A'''part&quot;. Carnegie Mellon University attempted to trademark the term,&lt;ref&gt;{{cite news
|first= Lev
|last= Grossman
|authorlink=
|coauthors=
|title=Computer Literacy Tests: Are You Human?
|url=http://www.time.com/time/magazine/article/0,9171,1812084,00.html
|quote=The Carnegie Mellon team came back with the CAPTCHA. (It stands for &quot;completely automated public Turing test to tell computers and humans apart&quot;; no, the acronym doesn't really fit.) The point of the CAPTCHA is that reading those swirly letters is something that computers aren't very good at.
|publisher=[[Time (magazine)]]
|date= 2008-06-05
|accessdate=2008-06-12 }}&lt;/ref&gt;
but the trademark application was abandoned on 21 April 2008.&lt;ref&gt;{{cite web
|url=http://tarr.uspto.gov/servlet/tarr?regser=serial&amp;entry=78500434
|title=Latest Status of CAPTCHA Trademark Application
|publisher=USPTO
|date=2008-04-21
|accessdate=2008-12-21}}&lt;/ref&gt;

Characteristics:
A CAPTCHA is a means of automatically generating challenges which intends to:
* Provide a problem easy enough for all humans to solve.
* Prevent standard automated software from filling out a form

A check box in a form that reads &quot;check this box please&quot; is the simplest (and perhaps least effective) form of a CAPTCHA.
CAPTCHAs do not have to rely on difficult problems in artificial intelligence, although they can.



==Applications==
CAPTCHAs are used in attempts to prevent automated software from performing actions which degrade the quality of service of a given system, whether due to abuse or resource expenditure.  CAPTCHAs can be deployed to protect systems vulnerable to [[e-mail spam]], such as the [[webmail]] services of [[Gmail]], [[Hotmail]], and [[Yahoo! Mail]].

CAPTCHAs are also used to minimize automated posting to [[blog]]s, [[Internet forum|forums]] and [[wikis]], whether as a result of [[Blog spam|commercial promotion]], or [[Internet troll|harassment and vandalism]]. CAPTCHAs also serve an important function in rate limiting. Automated usage of a service might be desirable until such usage is done to excess and to the detriment of human users. In such cases, administrators can use CAPTCHA to enforce automated usage policies based on given thresholds. The article rating systems used by many news web sites are another example of an online facility vulnerable to manipulation by automated software.&lt;ref&gt;{{cite journal | author = Amrinder Arora |year=2007 | url = http://paper.ijcsns.org/07_book/200703/20070348.pdf | format = PDF | title = Statistics Hacking&amp;nbsp;â Exploiting Vulnerabilities in News Websites | journal = International Journal of Computer Science and Network Security | volume = 7 | pages = 342â347}}&lt;/ref&gt;

==Accessibility==
{{See also|Web accessibility}}
Because CAPTCHAs rely on visual perception, users unable to view a CAPTCHA due to a disability will be unable to perform the task protected by a CAPTCHA. Therefore, sites implementing CAPTCHAs may provide an audio version of the CAPTCHA in addition to the visual method. The official CAPTCHA site recommends providing an audio CAPTCHA for accessibility reasons, but it is still not usable for [[deafblind]] people or for users of some text-based web browsers. This combination is not universally adopted, with most websites (including [[Wikipedia]]) offering only the visual CAPTCHA, with or without providing the option of generating a new image if one is too difficult to read.{{Citation needed|date=July 2010}}

===Attempts at more accessible CAPTCHAs===
Even audio and visual CAPTCHAs will require manual intervention for some users, such as those who have disabilities. There have been various attempts at creating more accessible CAPTCHAs, including the use of JavaScript, mathematical questions (&quot;how much is 1+1&quot;) and common knowledge questions (&quot;what color is the sky on a clear day&quot;). However, these approaches may worsen accessibility for people with intellectual and developmental disabilities, for instance dyscalculia. Some CAPTCHAs of this kind do not meet the criteria for a successful CAPTCHA because they are not automatically generated or do not present a new problem or test for each attack.

One interesting approach to text-based CAPTCHAs is to create a central &quot;anti-bot server&quot;, used by many websites, which selects for each call one puzzle, randomly, from a very large set of many different automatically-generated puzzles, of many different kinds. Such a solution can be made useable for blind and visually impaired people who otherwise find prevalent image-based CAPTCHAs to be insurmountable obstacles to completing web forms.

==Circumvention==
There are several approaches available to defeating CAPTCHAs:
* exploiting bugs in the implementation that allow the attacker to completely bypass the CAPTCHA,
* improving character recognition software, or
* using cheap [[Human-based computation|human labor]] to process the tests (see [[#Human solvers|below]]).

===Insecure implementation===
Like any security system, design flaws in a system implementation can prevent the theoretical security from being realized. Many CAPTCHA implementations, especially those which have not been designed and reviewed by experts in the fields of security, are prone to common attacks.

Some CAPTCHA protection systems can be bypassed without using [[Optical character recognition|OCR]] simply by re-using the [[session ID]] of a known CAPTCHA image. A correctly designed CAPTCHA does not allow multiple solution attempts at one CAPTCHA. This prevents the reuse of a correct CAPTCHA solution or making a second guess after an incorrect OCR attempt.&lt;ref&gt;{{cite web | url = http://www.puremango.co.uk/cm_breaking_captcha_115.php | title = Breaking CAPTCHAs Without Using OCR | accessdate = 2006-08-22 | year = 2005 | work = Howard Yeend (pureMango.co.uk)}}&lt;/ref&gt; Other CAPTCHA implementations use a [[Cryptographic hash function|hash]] (such as an [[MD5]] hash) of the solution as a key passed to the client to validate the CAPTCHA. Often the CAPTCHA is of small enough size that this hash could be cracked.&lt;ref&gt;{{cite web|url=http://milw0rm.com/cracker/list.php |title=Online services allow MD5 hashes to be cracked| accessdate=2007-01-04}}&lt;/ref&gt; Further, the hash could assist an OCR based attempt. A more secure scheme would use an [[HMAC]]. Finally, some implementations use only a small fixed pool of CAPTCHA images. Eventually, when enough CAPTCHA image solutions have been collected by an attacker over a period of time, the CAPTCHA can be broken by simply looking up solutions in a table, based on a hash of the challenge image.

===Computer character recognition===
A number of research projects have attempted (often successfully) to beat visual CAPTCHAs by creating programs that contain the following functionality:

#[[Noise reduction|Pre-processing]]: Removal of background clutter and noise.
#[[Segmentation (image processing)|Segmentation]]: Splitting the image into regions which each contain a single character.
#Classification: Identifying the character in each region.

Steps 1 and 3 are easy tasks for computers.&lt;ref&gt;{{cite paper | author = Kumar Chellapilla, Kevin Larson, Patrice Simard, Mary Czerwinski |year=2005 | url = http://www.ceas.cc/papers-2005/160.pdf | format = PDF | title = Computers beat Humans at Single Character Recognition in Reading based Human Interaction Proofs (HIPs) | publisher = [[Microsoft Research]] | accessdate = 2006-08-02 |archiveurl = http://web.archive.org/web/20060613111749/http://www.ceas.cc/papers-2005/160.pdf &lt;!-- Bot retrieved archive --&gt; |archivedate = 2006-06-13}}&lt;/ref&gt; The only step where humans still outperform computers is segmentation. If the background clutter consists of shapes similar to letter shapes, and the letters are connected by this clutter, the segmentation becomes nearly impossible with current software. Hence, an effective CAPTCHA should focus on the segmentation.

Several research projects have broken real world CAPTCHAs, including one of Yahoo's early CAPTCHAs called &quot;EZ-Gimpy&quot;,&lt;ref name=autogenerated1 /&gt; the CAPTCHAs used by popular sites such as PayPal,&lt;ref&gt;{{cite web|first=Kurt |last=Kluever |url=http://www.kloover.com/2008/05/12/breaking-the-paypalcom-captcha/ |title=Breaking the PayPal CAPTCHA |publisher=Kloover.com |date=May 12, 2008 |accessdate=2008-12-21}}&lt;/ref&gt; LiveJournal, phpBB, the e-banking CAPTCHAs used by a lot of financial institutions,&lt;ref name=eBankingCAPTCHAs_ACSAC2010&gt;{{Cite conference | first = Shujun | last = Li | coauthors = Syed Amier Haider Shah, Muhammad Asad Usman Khan, Syed Ali Khayam, Ahmad-Reza Sadeghi and Roland Schmitz | title = Breaking e-Banking CAPTCHAs | booktitle = Proceedings of 26th Annual Computer Security Applications Conference (ACSAC 2010) | pages = 171â180 | publisher = ACM | date = 2010 | location = New York, NY, USA | url = http://www.acsac.org/2010/openconf/modules/request.php?module=oc_program&amp;action=summary.php&amp;id=53 | doi = 10.1145/1920261.1920288 }}&lt;/ref&gt; and CAPTCHAs used by other services.&lt;ref&gt;{{cite web|first=Kurt |last=Kluever |url=http://www.kloover.com/2008/02/28/breaking-the-asp-security-image-generator/ |title=Breaking ASP Security Image Generator |publisher=Kloover.com |date=February 28, 2008 |accessdate=2008-12-21}}&lt;/ref&gt;&lt;ref&gt;{{cite web |first=Sam |last=Hocevar |url=http://sam.zoy.org/pwntcha/ |title=PWNtcha - captcha decoder |publisher=Sam.zoy.org |date= |accessdate=2008-12-21}}&lt;/ref&gt;&lt;ref&gt;{{cite web |first=Kruglov |last=Sergei|url=http://www.captcha.ru/en/breakings/ |title=Defeating of some weak CAPTCHAs |publisher=Captcha.ru |date= |accessdate=2008-12-21}}&lt;/ref&gt; In January 2008 Network Security Research released their program for automated Yahoo! CAPTCHA recognition.&lt;ref&gt;{{cite web|url=http://network-security-research.blogspot.com/ |title=Network Security Research and AI |accessdate=2008-12-21}}&lt;/ref&gt; [[Windows Live Hotmail]] and [[Gmail]], the other two major free email providers, were cracked shortly after.&lt;ref&gt;{{cite news | first= | last=Dawson | coauthors= | title= Windows Live Hotmail CAPTCHA Cracked, Exploited | date=2008-04-15 | publisher=[[SourceForge]] | url =http://tech.slashdot.org/article.pl?sid=08/04/15/1941236&amp;from=rss | work =[[Slashdot]] | pages = | accessdate = 2008-04-16}}&lt;/ref&gt;&lt;ref&gt;{{cite news | first= | last=Dawson | coauthors= | title= Gmail CAPTCHA Cracked | date=2008-02-26 | publisher=[[SourceForge]] | url =http://it.slashdot.org/article.pl?sid=08/02/27/0045242 | work =[[Slashdot]] | pages = | accessdate = 2008-04-16}}&lt;/ref&gt;

In February 2008 it was reported that spammers had achieved a success rate of 30% to 35%, using a bot, in responding to CAPTCHAs for Microsoft's Live Mail service&lt;ref&gt;Gregg Keizer, [http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;articleId=9061558 &quot;Spammers' bot cracks Microsoft's CAPTCHA: Bot beats Windows Live Mail's registration test 30% to 35% of the time, says Websense&quot;], ''Computerworld&quot;', February 7, 2008&lt;/ref&gt; and a success rate of 20% against Google's Gmail CAPTCHA.&lt;ref&gt;{{cite web |first=Sumeet |last=Prasad |url=http://www.websense.com/securitylabs/blog/blog.php?BlogID=174 |title=Googleâs CAPTCHA busted in recent spammer tactics |publisher=Websense |date=2008-02-22 |accessdate=2008-12-21 |archiveurl = http://web.archive.org/web/20080822032312/http://www.websense.com/securitylabs/blog/blog.php?BlogID=174 &lt;!-- Bot retrieved archive --&gt; |archivedate = 2008-08-22}}&lt;/ref&gt; A Newcastle University research team has defeated the segmentation part of Microsoft's CAPTCHA with a 90% success rate, and claim that this could lead to a complete crack with a greater than 60% rate.&lt;ref&gt;{{cite paper |author=Jeff Yan |coauthors=Ahmad Salah El Ahmad |url=http://homepages.cs.ncl.ac.uk/jeff.yan/msn_draft.pdf |title=A Low-cost Attack on a Microsoft CAPTCHA |format=PDF |publisher=School of Computing Science, Newcastle University, UK |date=April 13, 2008 |accessdate=2008-12-21}}&lt;/ref&gt;

===Human solvers===
CAPTCHA is vulnerable to a [[relay attack]] that uses humans to solve the puzzles. One approach involves relaying the puzzles to a group of human operators who can solve CAPTCHAs. In this scheme, a computer fills out a form and when it reaches a CAPTCHA, it gives the CAPTCHA to the human operator to solve.

Spammers pay about $0.80 to $1.20 for each 1,000 solved CAPTCHAs to companies employing human solvers in Bangladesh, China, India, and many other developing nations.&lt;ref&gt;{{Cite news|url=http://www.nytimes.com/2010/04/26/technology/26captcha.html?src=me&amp;ref=technology|title=Spammers Pay Others to Answer Security Tests|author=|date=April 25, 2010|newspaper=The New York Times | first=Vikas | last=Bajaj | accessdate=2010-04-28|postscript=&lt;!--None--&gt;}}&lt;/ref&gt; Other sources cite a price tag of as low as $0.50 for each 1,000 solved.&lt;ref&gt;{{cite web|last=M. Motoyama, K. Levchenko, C. Kanich, D. McCoy,G. M. Voelker, and S. Savage|title=Re: CAPTCHAs:understanding CAPTCHA-solving services in an economic context|url=cseweb.ucsd.edu/~klevchen/mlkmvs-usesec10.pdf|publisher=University of California, San Diego|accessdate=17 March 2011}}&lt;/ref&gt; 

Another approach involves copying the CAPTCHA images and using them as CAPTCHAs for a high-traffic site owned by the attacker. With enough traffic, the attacker can get a solution to the CAPTCHA puzzle in time to relay it back to the target site.&lt;ref&gt;{{cite web | url = http://www.boingboing.net/2004/01/27/solving_and_creating.html | title = Solving and creating CAPTCHAs with free porn | accessdate = 2006-08-22 | last = Doctorow | first = Cory | authorlink = Cory Doctorow |date=2004-01-27 | work = Boing Boing}}&lt;/ref&gt; In October 2007, a piece of malware appeared in the wild which enticed users to solve CAPTCHAs in order to see progressively further into a series of striptease images.&lt;ref&gt;{{cite news |url=http://ap.google.com/article/ALeqM5jnNrQKxFzt7mPu3DZcP7_UWr8UfwD8SKE6Q80 |archiveurl=http://web.archive.org/web/20071106170737/http://ap.google.com/article/ALeqM5jnNrQKxFzt7mPu3DZcP7_UWr8UfwD8SKE6Q80 |archivedate=2007-11-06 |title=Scams Use Striptease to Break Web Traps |first=Jordan |last=Robertson |date=2007-11-01 |location=San Jose, California |agency=Associated Press}}&lt;/ref&gt;&lt;ref&gt;{{cite web|last=Vaas |first=Lisa |url=http://www.pcmag.com/article2/0,2704,2210674,00.asp |title=Striptease Used to Recruit Help in Cracking Sites |publisher=PC Magazine |date=2007-11-01|accessdate=2008-12-21}}&lt;/ref&gt;  A more recent view is that this is unlikely to work due to unavailability of high-traffic sites and competition by similar sites.&lt;ref&gt;{{cite web|url=http://www.captcha.net/ |title=Captcha.net |publisher=Captcha.net |date= |accessdate=2011-03-22}}&lt;/ref&gt;

These methods have been used by spammers to set up thousands of accounts on free email services such as Gmail and Yahoo!.&lt;ref&gt;{{cite web | url = http://www.theregister.co.uk/2008/04/10/web_mail_throttled/ | title = Spam filtering services throttle Gmail to fight spammers | accessdate = 2008-04-10 | authorlink = John Leyden | date=2008-04-10}}&lt;/ref&gt; Since Gmail and Yahoo! are unlikely to be blacklisted by anti-spam systems, spam sent through these compromised accounts is less likely to be blocked.

===Legal concerns===
The circumvention of CAPTCHAs may violate the anti-circumvention clause of the [[Digital Millennium Copyright Act]] (DMCA) in the [[United States]]. In 2007, [[Ticketmaster]] sued software maker RMG Technologies&lt;ref&gt;{{cite web
  | last =Ulanoff
  | first =Lance
  | coauthors =
  | title =Deep-Sixing CAPTCHA
  | work =PC Magazine
  | publisher =Ziff Davis Media
  | date =October 31, 2007
  | url =http://www.pcmag.com/article2/0,2704,2209782,00.asp
  | doi =
  | accessdate = 2007-12-12}}&lt;/ref&gt; for its product which circumvented the ticket seller's CAPTCHAs on the basis that it violated the anti-circumvention clause of the DMCA. In October 2007, an [[injunction]] was issued stating that Ticketmaster would likely succeed in making its case.&lt;ref&gt;{{cite web | url = http://www.scribd.com/doc/404395/ticketmaster-v-rmg |title=TicketMaster v. RMG}}&lt;/ref&gt; In June 2008, Ticketmaster filed for [[default judgment]] against RMG. The Court granted Ticketmaster the default and entered an $18.2M judgment in favor of Ticketmaster.

==Interaction with Images as Alternative to Texting (Text Typing)==
Some researchers promote interaction with images as a possible alternative for texting CAPTCHAs. Computer-based recognition algorithms require the extraction of color, texture, shape, or special point features, which cannot be correctly extracted after the designed distortions.  However, humans can still recognize the original concept depicted in the images even with these distortions.

A recent example of interacting with images CAPTCHA is to present the website visitor with a grid of random pictures and instruct the visitor to click on specific pictures to verify that they are not a bot (such as âClick on the pictures of the airplane, the boat and the clockâ).

Image interaction CAPTCHAs face many potential problems which have not been fully studied. It is difficult for a small site to acquire a large dictionary of images to which an attacker does not have access and without a means of automatically acquiring new labelled images, an image-based challenge does not usually meet the definition of a CAPTCHA. [http://thepcspy.com/read/the_cutest_humantest_kittenauth/ KittenAuth, by default, had only 42 images in its database]. Microsoft's &quot;Asirra,&quot; which it is providing as a free web service, attempts to address this by means of Microsoft Research's partnership with [[Petfinder.com]], which has provided it with more than three million images of cats and dogs, classified by people at thousands of US animal shelters.&lt;ref&gt;[http://research.microsoft.com/asirra/ Asirra] from [[Microsoft Research]] ([[Portable Document Format|PDF]])&lt;/ref&gt; Researchers claim to have written a program that can break the Microsoft Asirra CAPTCHA.&lt;ref&gt;{{cite paper |first=Philippe |last=Golle |url=http://crypto.stanford.edu/~pgolle/papers/dogcat.html |title=Machine Learning Attacks Against the Asirra CAPTCHA |publisher=Stanford Crypto |date= |accessdate=2008-12-21}}&lt;/ref&gt;  The IMAGINATION CAPTCHA, however, uses a sequence of randomized distortions on the original images to create the CAPTCHA images.  Their original images can be made public without risk of image-retrieval or image-annotation based attacks.

Human solvers are a potential weakness for strategies such as Asirra. If the database of cat and dog photos can be downloaded, paying workers $0.01 to classify each photo as of either a dog or a cat means that almost the entire database of photos can be deciphered for $30,000. Photos that are subsequently added to the Asirra database are then a relatively small data set that can be classified as they first appear. Causing minor changes to images each time they appear will not prevent a computer from recognizing a repeated image as there are robust image comparator functions (e.g., [[hash function|image hashes]], [[color histogram]]s) that are insensitive to many simple image distortions. Warping an image sufficiently to fool a computer will likely also be troublesome to a human.&lt;ref&gt;[http://research.microsoft.com/asirra/papers/CCS2007.pdf Asirra: A CAPTCHA that Exploits Interest-Aligned Manual Image Categorization] from [[Microsoft Research]] ([[Portable Document Format|PDF]])&lt;/ref&gt;

Researchers at Google used image orientation and collaborative filtering as a CAPTCHA.&lt;ref&gt;[http://www.richgossweiler.com/projects/rotcaptcha/rotcaptcha.pdf Whatâs Up CAPTCHA? A CAPTCHA Based On Image Orientation from WWW'09] by Rich Gossweiler, Maryam Kamvar, and Shumeet Baluja&lt;/ref&gt; Generally speaking, people know what &quot;up&quot; is but computers have a difficult time for a broad range of images. Images were pre-screened to be determined to be difficult to detect up (e.g. no skies, no faces, no text). Images were also collaboratively filtered by showing a &quot;candidate&quot; image along with good images for the person to rotate. If there was a large variance in answers for the candidate image, it was deemed too hard for people as well and discarded.

Many users{{Who|date=August 2010}} of the [[phpBB]] forum software (which has suffered greatly from spam) have implemented an [[open source]] image recognition CAPTCHA system in the form of an addon called KittenAuth&lt;ref name=&quot;kittenauth&quot;&gt;[http://www.thepcspy.com/articles/security/the_cutest_humantest_kittenauth The Cutest Human-Test: KittenAuth] from ThePCSpy.com&lt;/ref&gt; which in its default form presents a question requiring the user to select a stated type of animal from an array of thumbnail images of assorted animals. The images (and the challenge questions) can be customized, for example to present questions and images which would be easily answered by the forum's target userbase. Furthermore, for a time, [[RapidShare]] free users had to get past a CAPTCHA where they had to enter letters attached only to a cat, while others were attached to dogs.&lt;ref&gt;{{cite web |author=David |url=http://www.randomwire.com/2008/06/04/attached-to-a-captcha/ |title=Attached to a Captcha |publisher=randomwire.com |date=June 4, 2008 |accessdate=2008-12-21}}&lt;/ref&gt; This was later removed because (legitimate) users had trouble entering the correct letters.

==See also==
*[[Image spam]], where spammers exploit the inability of computers to read text in images to avoid junkmail filtering
*[[One-way function]]
*[[reCAPTCHA]]
*[[Web scraping]]

==References==
{{reflist|2|colwidth=30em}}
&lt;!-- See [[Wikipedia:Footnotes]] for instructions. --&gt;

==External links==
{{Commons category|Captcha}}
* {{Wiktionary-inline}}

&lt;!--======================== {{No more links}} ============================
    | PLEASE BE CAUTIOUS IN ADDING MORE LINKS TO THIS ARTICLE. Wikipedia  |
    | is not a collection of links nor should it be used for advertising. |
    |                                                                     |
    |           Excessive or inappropriate links WILL BE DELETED.         |
    | See [[Wikipedia:External links]] &amp; [[Wikipedia:Spam]] for details.  |
    |                                                                     |
    | If there are already plentiful links, please propose additions or   |
    | replacements on this article's discussion page, or submit your link |
    | to the relevant category at the Open Directory Project (dmoz.org)   |
    | and link back to that category using the {{dmoz}} template.         |
    ======================= {{No more links}} =============================--&gt;

{{DEFAULTSORT:Captcha}}
[[Category:Turing tests]]
[[Category:Access control software]]
[[Category:Internet forum terminology]]

[[ar:ÙØ§Ø¨ØªØ´Ø§]]
[[zh-min-nan:Captcha]]
[[bg:CAPTCHA]]
[[bs:CAPTCHA]]
[[ca:Test de CAPTCHA]]
[[cs:CAPTCHA]]
[[da:CAPTCHA]]
[[de:CAPTCHA]]
[[es:Captcha]]
[[eo:CAPTCHA]]
[[fa:Ú©Ù¾ÚØ§]]
[[fr:Captcha]]
[[gl:CAPTCHA]]
[[ko:CAPTCHA]]
[[hy:CAPTCHA]]
[[hr:Captcha]]
[[id:CAPTCHA]]
[[is:CAPTCHA]]
[[it:CAPTCHA]]
[[he:CAPTCHA]]
[[kk:CAPTCHA]]
[[lv:CAPTCHA]]
[[lt:CAPTCHA]]
[[hu:Captcha]]
[[ml:à´à´¾à´ªàµà´àµà´]]
[[ms:CAPTCHA]]
[[nl:Captcha]]
[[ja:CAPTCHA]]
[[no:CAPTCHA]]
[[uz:CAPTCHA]]
[[pl:CAPTCHA]]
[[pt:CAPTCHA]]
[[ro:CAPTCHA]]
[[ru:CAPTCHA]]
[[scn:CAPTCHA]]
[[simple:CAPTCHA]]
[[sr:Ð¡ÑÐ¾Ð¿ÐºÐ°]]
[[fi:Kuvavarmennus (tietotekniikka)]]
[[sv:Captcha]]
[[ta:à®à®¾à®ªà¯à®à¯à®à®¾]]
[[th:à¹à¸à¹à¸à¸à¹à¸à¸²]]
[[tr:CAPTCHA]]
[[uk:CAPTCHA]]
[[vi:CAPTCHA]]
[[zh:éªè¯ç ]]</rev></revisions></page></pages></query></api>
