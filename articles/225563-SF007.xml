<?xml version="1.0"?><api><query><pages><page pageid="225563" ns="0" title="GoboLinux"><revisions><rev xml:space="preserve">{{Infobox OS
| name                   = GoboLinux
| logo                   = 
| screenshot             = [[Image:GoboLinux.png|300px|GoboLinux.png]]
| caption                = GoboLinux [[Desktop metaphor|desktop]]
| website                = [http://www.gobolinux.org/ www.gobolinux.org]
| developer              = 
| family                 = [[Unix-like]]
| source_model           = [[Free and open source software]]
| released               = 
| latest_release_version = 014.01
| latest_release_date    = {{release date|2008|09|28}}
| latest_test_version    = 
| latest_test_date       = 
| marketing_target       = 
| language               = 
| kernel_type            = [[Monolithic kernel|Monolithic]] [[Linux kernel]]
| ui                     = [[KDE]]
| license                = [[GNU General Public License]]
| working_state          = Current
| supported_platforms    = 
| updatemodel            = 
| package_manager        = 
}}

'''GoboLinux''' is a [[free and open source software|free and open source]] [[operating system]] whose most prominent feature is a reorganization of the traditional [[Linux]] [[file system]]. Rather than following the [[Filesystem Hierarchy Standard]] like most [[Unix-like]] systems, each program in a GoboLinux system has its own [[subdirectory]] tree, where all of its files (including settings specific for that program) can be found.  Thus, a program &quot;Foo&quot; has all of its specific files and libraries in &quot;/Programs/Foo&quot;.  According to the GoboLinux developers, this results in a cleaner system based on the filelayout level.&lt;ref&gt;{{cite web | title = The Unix tree rethought: an introduction to GoboLinux | url = http://www.kuro5hin.org/story/2003/5/9/05015/62649 | author = Hisham Muhammad | date = May 9, 2003 | accessdate = 2008-03-17}}&lt;/ref&gt;

== Overview ==
The '''GoboLinux''' hierarchy is a radical departure from the filesystem hierarchy traditionally employed by most [[UNIX-like|UNIX-like operating systems]] where specific types of files are stored together in common standard subdirectories (such as &lt;tt&gt;/bin&lt;/tt&gt; for executables and &lt;tt&gt;/etc&lt;/tt&gt; for configuration files) and [[package manager]]s are used to keep track of what file belongs to which program. In GoboLinux, files from different programs are segregated under their respective subdirectories. The makers of GoboLinux say that &quot;the filesystem is the package manager&quot;, and the GoboLinux package system uses the filesystem itself as a package database.&lt;ref&gt;{{cite web|title= Simplified package management on GoboLinux - an interview with Lucas Villa Real |url= http://www.netbsd.org/gallery/pkgsrc-interviews.html#gobo-linux |author= Marc Weinem |date= 2008-03-13 |accessdate= 2008-03-31}}&lt;/ref&gt; This is said to produce a more straightforward, less cluttered directory tree. GoboLinux uses [[symlink]]s and an optional [[kernel module]] called ''GoboHide'' to achieve all this while maintaining full compatibility with the traditional Linux filesystem hierarchy.

The creators of GoboLinux stated that their design has other &quot;modernisms&quot;, such as the removal of some distinctions between similar traditional directories (such as the locations of executables &lt;tt&gt;/bin&lt;/tt&gt;, &lt;tt&gt;/usr/bin&lt;/tt&gt;, and &lt;tt&gt;/usr/local/bin&lt;/tt&gt;). GoboLinux designers claim that this results in [[shell scripts]] breaking less often than with other Linux distributions. GoboLinux also allows the user to have different versions of the same program installed concurrently (and even run them concurrently). Furthermore, it is claimed that the package management index can never get out of sync, as references to nonexisting files simply are broken links, and thus inactive. GoboLinux's filesystem changes have also allowed other innovations, such as an entirely new boot system that does not use [[init#SysV-style|System V]] or [[init#BSD-style|BSD]] style init systems.

== File hierarchy ==
[[File:Gobolinux-filesystem-bashdirectory.png|thumb|right|Screenshot of the File hierarchy]]

The design of GoboLinux is influenced by earlier systems such as [[NEXTSTEP]], [[AtheOS]] and [[BeOS]], which adopted original filesystem structures while still maintaining a considerable degree of compatibility with Unix. At the root of the GoboLinux tree, there are six directories: Programs, Users, System, Files, Mount and Depot. The contents of each are described below.

* '''/Programs/''' - This directory contains one directory for each program installed in the computer. Each program's directory, in turn, contains one or more version directories, and optionally, Settings and Variable subdirectories. Examples of paths under programs are /Programs/Bash/3.0/bin/bash and /Programs/Xorg-Server/Settings/X11/xorg.conf.
* '''/Users/''' - This directory contains users' home directories, so a userid named &quot;harley&quot; would have a home directory of &quot;/Users/harley&quot;.
* '''/System/''' - Crucial system files. Most are managed by system applications (for example, /System/Settings/passwd) and GoboLinux scripts (for example, /System/Links).
** '''/Links/''' - Contains &quot;links&quot; directories that index the files under /Programs.
*** '''Environment/''' - Links to environment files. These are compiled into a Cache file and loaded by the shell, allowing programs to register their own [[environment variable]]s.
*** '''Executables/''' - Contains links to files from the programs' bin and sbin directories.
*** '''Headers/''' - This directory contains links to files from the programs' include directories.
*** '''Libraries/''' - Links to files from the programs' lib directories.
*** '''Manuals/''' - Contents of manuals and info directories.
*** '''Shared/''' - Links to files from the programs' share directories.
*** '''Tasks/''' - Links to the programs' boot tasks from their Resources/Tasks directories.
** '''Settings/''' - Configuration files and links to files from the programs' Settings directories.
*** '''BootScripts/''' - Scripts used during system boot. This is a [[symbolic link|symlink]] to Settings/BootScripts/ under /Programs/BootScripts.
** '''Variable/''' - Multi-purpose log, temporary, transient and spool files.
*** '''tmp/''' - Temporary files.
** '''Kernel/''' - Kernel-related directories.
*** '''Boot/''' - Programs and configuration files used during operating system bootstrap. This is where the kernel image and bootloader configuration files are located.
*** '''Devices/''' - Device files (managed by Udev).
*** '''Modules/''' - Contains the various kernel modules, organized by the kernel release.
*** '''Objects/''' - Provides a view of the kernel's device tree (introduced with the sysfs filesystem in the kernel 2.6 series).
*** '''Status/''' - Kernel status files (managed by the proc filesystem ).
* '''/Files/''' - Files hold structured data that are used by programs but that are not part of the programs themselves. Those files are usually stand-alone entities, like fonts, codecs and plugins (and as such, do not require package management). Additionally, applications may define subdirectories of their own to store site-specific data â Compile, the GoboLinux package compilation front-end tool, uses it.
* '''/Mount/''' - mounting point for additional local or remote filesystems. Common subdirectories are CD-ROM, Floppy and Zip.
* '''/Depot/''' - repository for users' files. This repository is meant to be organized as the user sees fit. No subdirectories of /Depot are considered part of the standard GoboLinux hierarchy.

== &quot;Compile&quot; program==
&lt;!-- How many recipes are available? This would be a good thing to know. --&gt;
'''''Compile''''' is a program that downloads, unpacks, [[Compiler|compiles]] source code [[tar (file format)|tarballs]] and installs the resulting executable code, all with a single command (such as &quot;Compile foo&quot;) using simple compilation scripts known as &quot;recipes&quot;.&lt;ref&gt;{{cite web|title= GoboLinux's recipe for delicious package management |url= http://www.linux.com/articles/60133 |author= Mayank Sharma |date= 2007-02-14 |publisher= [[Linux.com]] |accessdate= 2009-07-19}}&lt;/ref&gt;

Compile is somewhat similar to Gentoo's [[w:Portage (software)|Portage]] system,&lt;ref&gt;{{cite web|title= GoboLinux Compile -- A Scalable Portage&amp;thinsp;? |url= http://developers.slashdot.org/article.pl?sid=04/06/05/1949213 |date= 2004-06-05 |publisher= [[Slashdot]] |accessdate= 2009-07-19}}&lt;/ref&gt; which is based on the [[FreeBSD Ports]] collection and accomplishes the above actions with scripts known as &quot;ebuilds&quot;.  But Portage is made for a traditional filesystem hierarchy, compatible with the [[Filesystem Hierarchy Standard]], while Compile extends the capability of GoboLinux's distinctive filesystem hierarchy into the area of package management. Thus, in GoboLinux, the filesystem is the package manager.&lt;ref&gt;{{cite web|title= The Ideas Behind ''Compile'' |url= http://gobolinux.org/index.php?page=doc/articles/compile |publisher= GoboLinux |accessdate= 2009-07-19}}&lt;/ref&gt;

Compile was introduced in GoboLinux version 011. Before that, there were discussions about porting Gentoo's Portage system to GoboLinux and developing the port as a SourceForge.net project under the name ''GoboPortage''.&lt;ref&gt;[http://forums.gentoo.org/viewtopic-t-241718-highlight-gobolinux.html Gentoo Forums : View topic - GoboGentoo&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;&lt;ref&gt;[http://sourceforge.net/projects/goboportage/ SourceForge.net: GoboPortage&lt;!-- Bot generated title --&gt;]&lt;/ref&gt;

Compile's other features include:
;The use of the projects' own download sites:The distribution's repository (or one of its mirrors) is only used for downloading recipes. Recipes may be downloaded on-the-fly or in batch.
;Minimalistic and declarative-oriented compilation scripts:Typical &quot;configure; make; make install&quot; software can be scripted in two lines, greatly easing maintenance.
;Support of GoboLinux-style dependencies:Software compiled &quot;by hand&quot; by the user is taken into account by the detection mechanism.
;Path-agnosticism:Also works in a rootless GoboLinux installation, ''i.e.'', inside a [[home directory]] of any other distribution.&lt;ref&gt;{{cite web|title= GoboLinux: An Interview with Lucas Villa Real |url= http://www.packtpub.com/article/GoboLinux-An-Interview-with-Lucas-Villa |author= Mayank Sharma |date= 2007-08-21 |accessdate= 2008-03-31}}&lt;/ref&gt;

== Differences from traditional distributions ==
=== File hierarchy===
In the GoboLinux hierarchy, files are grouped by their functional category in an index-like structure using symbolic links, rooted at /System/Links: all executables are accessible under /System/Links/Executables, all libraries are accessible under /System/Links/Libraries and so on.
This eliminates many traditional distinctions in the [[Filesystem Hierarchy Standard]], such as the distinction made between non-essential files stored in &lt;tt&gt;/usr&lt;/tt&gt; and essential, emergency files stored directly in subdirectories of the root directory. The developers maintain that, although these distinctions were once very useful, they are no longer necessary in their radically different, modern environment.

=== Symlinks ===
There are symbolic links relating most of the usual Unix directories to the GoboLinux tree. Therefore, one can find directories such as /etc, /var/log and /usr/bin in the expected places. These symbolic links point to the functional equivalent under /System/Links, so that crucial pathnames such as  /bin/sh and /etc/passwd are resolved correctly. These compatibility directories are concealed from view using a custom kernel modification called ''GoboHide'' â this modification, which implements support for hidden files in Linux, is used for aesthetic reasons only and is optional.

=== Superuser ===
The superuser name, traditionally as &quot;root&quot; with a UID of 0, is selectable upon installation in GoboLinux. As well, in contrast to other distributions, the superuser does not gain a /root directory as its home directory, instead using /Users/NAME as for any other user. According to developer Hisham Muhammad's article, this decision was because he never liked the notion of a separate superuser.&lt;ref&gt;http://gobolinux.org/index.php?page=doc/articles/clueless&lt;/ref&gt;

=== Boot system ===
GoboLinux uses its own initialization procedure, unlike most Linux distributions which use a [[init#BSD-style|BSD]] or a [[init#SysV-style|System V]] procedure. At /System/Settings/BootScripts are a few files that command the entire boot procedure: BootUp and Shutdown run at system boot and shutdown, respectively;  additionally, it is possible to define &quot;runlevel&quot; scripts to specify different ways the system can be initialized (for example, Single for single-user, Multi for multi-user, Graphical for boot into graphic mode, and so on) and control that from the boot loader menu. The /System/Settings/BootOptions file separate site-specific settings from the rest of the scripts. Application-specific tasks can be found at /System/Links/Tasks and called by the boot scripts.

== Releases ==

Releases are numbered using the [[octal]] base system. According to the authors, it was chosen because it keeps the typical leading zero present in many [[free software]] version numbers (since a leading zero is the indicator for octal numbers in the [[C (programming language)|C]] language), and is a play on the &quot;[[Slackware#History|version numbers race]]&quot; that happened among Linux distributions around 1999: when read as decimal numbers, octal numbers will cause a deterministic &quot;version bump&quot; each eight releases. Up to 013, GoboLinux made no &quot;point releases&quot;, to avoid the implication that some releases were more stable than others. This tradition was broken with 014.01, an update of 014 focused on [[bug fix]]es. 

* 014.01&lt;ref&gt;{{cite web | title = GoboLinux 014.01 Released | url = http://osnews.com/story/19578/GoboLinux_014.01_Released | author = Thom Holwerda | date = April 4, 2008 | accessdate = 2008-04-04}}&lt;/ref&gt; - March 30, 2008: an update of 014, featuring bug fixes and some package updates.
* 014 - December 31, 2007: new stable release, featuring package updates, bug fixes and new versions of the GoboLinux management tools.
* 013 - November 2, 2006: introduced ''Listener'', a tool for listening on filesystem events and assigning actions to be performed automatically.
* 012 - June 6, 2005: introduced ''[http://gobolinux.org/index.php?lang=en_US&amp;page=manager Manager]'', a graphical system management tool.
* 011 - June 7, 2004: introduced ''[http://gobolinux.org/index.php?page=compile Compile]'', the GoboLinux package compilation tool.
* 010 - January 7, 2004: added a graphical installer accessible through the [[live CD]] desktop environment.
* 007 - October 22, 2003: added a per-package metadata directory called Resources.
* 006 - May 9, 2003: introduced ''[http://www.gobolinux.org/?page=doc/articles/gobohide GoboHide]'', adopted [[Sandbox (software development)|sandbox]]ed installation of programs.
* 005 - 2003: first public release published online.
* Releases prior to 005 were used by the initial group of developers only.

== Ports ==
As of March 2006, Gobolinux is officially made for the [[i686]] only, and the porting to [[i386]] is domain-specific{{Clarifyme|date=January 2009}} (thus, incomplete). Ports have been made to embedded architectures, such as [[ARM architecture|ARM]] and [[SuperH]], which were easily achieved with Bootstrap{{Fact|date=January 2009}},&lt;ref&gt;[http://embedded.gobolinux.org GoboLinux Embedded]&lt;/ref&gt; a tool developed especially to automate new ports.

== References ==

{{refs|2}}

== External links ==
* [http://www.gobolinux.org/ GoboLinux website]
* {{DistroWatch|gobolinux|NAME=GoboLinux}}
* [http://www.linux.com/articles/49173?tid=127 GoboLinux review at Linux.com]

{{Linux distributions}}

{{DEFAULTSORT:Gobolinux}}
[[Category:Source-based Linux distributions]]

[[es:GoboLinux]]
[[fr:GoboLinux]]
[[it:GoboLinux]]
[[hu:GoboLinux]]
[[pl:GoboLinux]]
[[pt:GoboLinux]]
[[ro:GoboLinux]]
[[ru:GoboLinux]]
[[zh:GoboLinux]]</rev></revisions></page></pages></query></api>
