<?xml version="1.0"?><api><query><redirects><r from="Google native client" to="Google Native Client" /></redirects><pages><page pageid="20607025" ns="0" title="Google Native Client"><revisions><rev xml:space="preserve">{{Infobox software
| name                   = Google Native Client
| logo                   =
| screenshot             =&lt;!-- Deleted image removed:  [[Image:Native-client-python-repl.png|200px]] --&gt;
| caption                = A [[Python (programming language)|Python]] [[read-eval-print loop|REPL]] running under Native Client inside a web browser.
| latest release version =
| latest release date    =
| latest preview version = [http://code.google.com/chrome/nativeclient/docs/releasenotes.html 1.0]
| latest preview date    = {{start date and age|2011|10|12}}
| developer              = [[Google]], others
| programming language   = [[C++]]
| operating system       = [[Cross-platform]]: [[Microsoft Windows]], [[Linux]], [[Mac OS]], [[Google Chrome OS|Chrome OS]]
| status                 = Research
| genre                  = [[sandbox (computer security)|Sandbox]] in web browsers for native code
| license                = [[BSD licenses|New BSD license]]
| website                = {{URL|code.google.com/p/nativeclient}}
}}
{{Portal|Free software}}
'''Google Native Client''' ('''NaCl''' in an allusion to [[sodium chloride]] or common salt) is a [[sandbox (computer security)|sandboxing]] technology for running a subset of [[Intel x86]] or ARM native code using software-based fault isolation.&lt;ref&gt;[http://citeseer.ist.psu.edu/wahbe93efficient.html Efficient software-based fault isolation], Robert Wahbe, Steven Lucco, Thomas E. Anderson, Susan L. Graham, 1993&lt;/ref&gt; Currently in development, it is proposed for safely running native code from a [[web browser]], allowing web-based applications to run at near-native speeds&lt;ref name=&quot;announcement&quot;&gt;[http://google-code-updates.blogspot.com/2008/12/native-client-technology-for-running.html Native Client: A Technology for Running Native Code on the Web]&lt;/ref&gt;, which aligns well with Google's plans about [[Google Chrome OS|Chrome OS]]. It may also be used for securing browser [[Plug-in (computing)|plugins]], and in the future parts of other applications or full applications.&lt;ref name=&quot;Register&quot;&gt;{{cite web |url=http://www.theregister.co.uk/2011/09/12/google_native_client_from_all_sides/ |title= Google Native Client: The web of the future â or the past?|author= Cade Metz|date=2011-09-12|publisher=The Register|accessdate=2011-09-17 }}&lt;/ref&gt;

==Overview==
Native Client is an [[open source]] project being developed by [[Google]].&lt;ref&gt;[http://code.google.com/p/nativeclient/ Google Native Client on Google Code]&lt;/ref&gt; To date, [[Quake (video game)|Quake]], [[XaoS]] and [[MAME]] have been ported to Google Native Client Platform. Native Client was formerly available as an experimental disabled-by-default feature in the [[Google Chrome]] web browser.&lt;ref name=announcement/&gt; The feature is enabled from version 14 of Chrome; at the same time, uploading native applications to [[Chrome Web Store]] is expected to be enabled, which will be the only way to run native client applications under Chrome for the time being.&lt;ref&gt;[http://blog.chromium.org/2011/08/native-client-brings-sandboxed-native.html The Chromium Blog: Native Client Brings Sandboxed Native Code to Chrome Web Store Apps]&lt;/ref&gt;

An [[ARM architecture|ARM]] implementation was released in March 2010,&lt;ref&gt;{{cite web|url=http://www.h-online.com/open/news/item/Google-s-Native-Client-goes-ARM-and-beyond-957478.html|title=Google's Native Client goes ARM and beyond|publisher=The H|date=18 March 2010|accessdate=2010-05-19}}&lt;/ref&gt; and [[x86-64]] is also supported. However, {{as of|2011|March}}, all three implementations can only use code compiled to the host's native [[instruction set]]. [[PNaCl]] (Portable Native Client, pronounced: pinnacle) is being developed to address this issue. To run an application portably under PNaCl, it must be compiled to an architecture-agnostic version of the [[Low Level Virtual Machine|LLVM]] [[intermediate representation]] [[bytecode]].&lt;ref&gt;[http://nativeclient.googlecode.com/svn/data/site/pnacl.pdf PNaCl: Portable Native Client Executables]&lt;/ref&gt;

NaCl uses [[Software Fault Isolation]] for sandboxing on x86-64 and ARM.&lt;ref&gt;{{cite web|url=http://research.google.com/pubs/pub35649.html|title=Adapting Software Fault Isolation to Contemporary CPU Architectures|author= David Sehr, Robert Muth, Cliff L. Biffle, Victor Khimenko, Egor Pasko, Bennet Yee, Karl Schimpf, Brad Chen|year=2010|publisher= 19th USENIX Security Symposium|accessdate=July 31, 2011}}&lt;/ref&gt; The x86-32 implementation of Native Client is notable for its novel sandboxing method which makes use of the x86 architecture's rarely-used [[x86 memory segmentation|segmentation facility]].&lt;ref name=&quot;nacl_paper&quot;&gt;{{cite web|url=http://research.google.com/pubs/pub34913.html|title=Native Client: A Sandbox for Portable, Untrusted x86 Native Code|accessdate=July 31, 2011|author=Bennet Yee, David Sehr, Greg Dardyk, Brad Chen, Robert Muth, Tavis Ormandy, Shiki Okasaka, Neha Narula, Nicholas Fullagar|publisher= IEEE Symposium on Security and Privacy (Oakland'09)|year=2009}}&lt;/ref&gt; Native Client sets up x86 segments to restrict the memory range that the sandboxed code can access.  It uses a code verifier to prevent use of unsafe instructions such as those that perform system calls.  To prevent the code from jumping to an unsafe instruction hidden in the middle of a safe instruction, Native Client requires that all indirect jumps be jumps to the start of 32-byte-aligned blocks, and instructions are not allowed to straddle these blocks.&lt;ref name=nacl_paper /&gt;  Because of these constraints, [[C (programming language)|C]] code must be recompiled to run under Native Client, which provides customised versions of the [[GNU toolchain]], specifically [[GNU Compiler Collection|gcc]] and [[GNU Binutils|binutils]].

Native Client is licensed under a [[BSD licenses|BSD-style license]].

Native Client uses [[Newlib]] as its [[C standard library|C library]], but a port of [[GNU C Library|GNU libc]] is also available.&lt;ref&gt;[http://plash.beasts.org/wiki/NativeClient NativeClient: Plash Wiki]&lt;/ref&gt;

Since release 0.5, Native Client has a stable [[Application binary interface|ABI]].&lt;ref&gt;Official NaCl [http://code.google.com/intl/el-GR/chrome/nativeclient/docs/releasenotes.html Release Notes]&lt;/ref&gt; This roughly means that code compiled and running in the NaCl implementation of Google Chrome 14, will work in all future versions of Google Chrome.

==Pepper==
Pepper API is a cross-platform, open-source API for creating Native Client modules.&lt;ref&gt;[http://code.google.com/intl/hu-HU/chrome/nativeclient/docs/reference/pepperc/index.html Native Client SDK: Pepper C API]&lt;/ref&gt; Pepper Plugin API, or PPAPI&lt;ref&gt;[http://code.google.com/p/ppapi/ Pepper Plugin API project at code.google.com]&lt;/ref&gt;&lt;ref&gt;[http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/ Chrome Source: Index of /trunk/src/ppapi]&lt;/ref&gt; is a cross-platform API for Native Client-secured web browser plugins, first based on Netscape's [[NPAPI]], then rewritten from scratch. It is currently an experimental feature of [[Chromium]] and [[Google Chrome]] (there is a Chrome experiment in chrome://flags to enable the PPAPI version of [[Adobe Flash|Flash]]), though the built-in [[PDF]]-viewer already uses it&lt;ref&gt;[http://www.theregister.co.uk/2010/06/18/chrome_dev_builds_get_built_in_pdf_reader/ The Register: Google hugs Adobe harder with Chrome-PDF merge]&lt;/ref&gt;.

==Controversies==
Some groups of browser developers support the Native Client technology, but others do not. This technology is controversial with [[x86]] browser developers. 

'''Supporters''': Chad Austin (of [[IMVU]]) are praising the way Native Client can bring high-performance applications to the web (with about 5% penalty compared to native code) in a secure way, while also accelerating the evolution of client-side applications by giving a choice of the programming language used (beside [[JavaScript]]).&lt;ref&gt;[http://chadaustin.me/2011/01/in-defense-of-language-democracy/ Chad Austin: In Defense of Language Democracy (Or: Why the Browser Needs a Virtual Machine)]&lt;/ref&gt; 

'''Detractors''': Other IT professionals are more critical of this sandboxing technology as it has substantial or substantive interoperability issues. 

[[Mozilla]]'s vice president of products, [[Jay Sullivan]] said it has no intention to run native code inside the browser, as
:&quot;These native apps are just little black boxes in a webpage. [...] We really believe in HTML, and this is where we want to focus.&quot;&lt;ref&gt;[http://www.theregister.co.uk/2010/06/24/jay_sullivan_on_firefox/ The Register: Mozilla: Our browser will not run native code]&lt;/ref&gt;

[[HÃ¥kon Wium Lie]], Opera's CTO believes that
:&quot;NaCl seems to be 'yearning for the bad old days, before the web'&quot;, and that &quot;Native Client is about building a new platform â or porting an old platform into the web [...] it will bring in complexity and security issues, and it will take away focus from the web platform.&quot;&lt;ref name=&quot;Register&quot;/&gt;

[[Christopher Blizzard]], Mozilla's Open Source evangelist fears that without the source code, the pace of innovation will slow, and compares NaCl to Microsoft's [[ActiveX]] technology, plagued with [[DLL hell]]. In his views, even if it's secure, Native Client isn't a good thing.&lt;ref name=&quot;Register&quot;/&gt;

==References==
{{reflist|colwidth=30em}}

==External links==
* [http://www.gonacl.com/ GoNaCl.Com] (Native Client Developer Site)
* [http://code.google.com/p/nativeclient/ Google Native Client Project Page]
* {{Youtube|id=2xV_0pTpNj0|title=Google I/O 2009 Native Code for Compute Intensive Web Apps}} - Technical talk at [[Google I/O]] 2009
* [http://www.naclbox.com/ NaClbox]
* [http://news4geeks.net/2011/09/12/google-native-client-the-web-of-the-future-or-the-past/ News4Geeks.net: Google Native Client: The web of the future â or the past?] (a good overview)

===Examples===
* [http://www.gonacl.com/dev/demos.html Native Client Gallery]
* [http://www.naclbox.com/ NACLBox], a port of [[DOSBox]] to Native Client
* [https://chrome.google.com/webstore/detail/moehcjggbedbobepfihdamhnlneanioe SodaSynth], a synthesizer for Native Client

{{Google Inc.}}
{{Use dmy dates|date=January 2011}}

[[Category:Free software]]
[[Category:Google|Native Client]]

[[fr:Google Native Client]]
[[ko:êµ¬ê¸ ë¤ì´í°ë¸ í´ë¼ì´ì¸í¸]]
[[it:Google Native Client]]
[[hu:Google Native Client]]
[[ja:Google Native Client]]
[[ru:Native Client]]
[[zh:Google Native Client]]</rev></revisions></page></pages></query></api>
