<?xml version="1.0"?><api><query><pages><page pageid="6967890" ns="0" title="Timeline of virtualization development"><revisions><rev revid="218539719" parentid="218539528" user="SF007" timestamp="2008-06-11T02:32:59Z" comment="updated names"><diff from="218539528" to="218539719" xml:space="preserve">&lt;tr&gt;
  &lt;td colspan=&quot;2&quot; class=&quot;diff-lineno&quot;&gt;Line 102:&lt;/td&gt;
  &lt;td colspan=&quot;2&quot; class=&quot;diff-lineno&quot;&gt;Line 102:&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;==== Application virtualization ====&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;==== Application virtualization ====&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt;â&lt;/td&gt;
  &lt;td class=&quot;diff-deletedline&quot;&gt;&lt;div&gt;Application Virtualization solutions such as [[VMware ThinApp]], [http://www.softricity.com Softricity], and [http://www.trigence.com/ Trigence] attempt to separate application specific files and settings from the host operating system, thus allowing them to run in more-or-less isolated sandboxes without installation and without the memory and disk overhead of full machine virtualization.  [[Application Virtualization]] is tightly tied to the host OS and thus does not translate to other operating systems or hardware.  &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;Thinstall &lt;/span&gt;and Softricity are Intel Windows centric, while Trigence supports Linux and Solaris.  Unlike machine virtualization, Application virtualization does not use code emulation or translation so CPU related benchmarks run with no changes, though fileystem benchmarks may experience some performance degradation.  On Windows, &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;Thinstall &lt;/span&gt;and Softricity essentially work by intercepting filesystem and registry requests by an application and redirecting those requests to a preinstalled isolated sandbox, thus allowing the application to run without installation or changes to the local PC.  Though &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;Thinstall &lt;/span&gt;and Softricity both began independent development around 1998, behind the scenes &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;Thinstall &lt;/span&gt;and Softricity are implemented using different techniques:&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt;+&lt;/td&gt;
  &lt;td class=&quot;diff-addedline&quot;&gt;&lt;div&gt;Application Virtualization solutions such as [[VMware ThinApp]], [http://www.softricity.com Softricity], and [http://www.trigence.com/ Trigence] attempt to separate application specific files and settings from the host operating system, thus allowing them to run in more-or-less isolated sandboxes without installation and without the memory and disk overhead of full machine virtualization.  [[Application Virtualization]] is tightly tied to the host OS and thus does not translate to other operating systems or hardware.  &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;VMware ThinApp &lt;/span&gt;and Softricity are Intel Windows centric, while Trigence supports Linux and Solaris.  Unlike machine virtualization, Application virtualization does not use code emulation or translation so CPU related benchmarks run with no changes, though fileystem benchmarks may experience some performance degradation.  On Windows, &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;VMware ThinApp &lt;/span&gt;and Softricity essentially work by intercepting filesystem and registry requests by an application and redirecting those requests to a preinstalled isolated sandbox, thus allowing the application to run without installation or changes to the local PC.  Though &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;VMware ThinApp &lt;/span&gt;and Softricity both began independent development around 1998, behind the scenes &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;VMware ThinApp &lt;/span&gt;and Softricity are implemented using different techniques:&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt;â&lt;/td&gt;
  &lt;td class=&quot;diff-deletedline&quot;&gt;&lt;div&gt;* &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;Thinstall &lt;/span&gt;works by packaging an application into a single &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;&quot;[[thinstalled]]&quot; &lt;/span&gt;EXE which includes the runtime plus the application data files and registry.  Thinstallâs runtime is loaded by Windows as a normal Windows application, from there the runtime replaces the Windows loader, filesystem, and registry for the target application and presents a merged image of the host PC as if the application had been previously installed.  Thinstall replaces all related API functions for the host application, for example the ReadFile API supplied to the application must pass through Thinstall before it reaches the operating system.  If the application is reading a virtual file, Thinstall handles the request itself otherwise the request will be passed on to the operating system.  Because Thinstall is implemented in user-mode without device drivers and it does not have a client that is preinstalled, applications can run directly from USB Flash or network shares without previously needing elevated security privileges.&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt;+&lt;/td&gt;
  &lt;td class=&quot;diff-addedline&quot;&gt;&lt;div&gt;* &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;VMware ThinApp &lt;/span&gt;works by packaging an application into a single &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;&quot;packaged&quot; &lt;/span&gt;EXE which includes the runtime plus the application data files and registry.  Thinstallâs runtime is loaded by Windows as a normal Windows application, from there the runtime replaces the Windows loader, filesystem, and registry for the target application and presents a merged image of the host PC as if the application had been previously installed.  Thinstall replaces all related API functions for the host application, for example the ReadFile API supplied to the application must pass through Thinstall before it reaches the operating system.  If the application is reading a virtual file, Thinstall handles the request itself otherwise the request will be passed on to the operating system.  Because Thinstall is implemented in user-mode without device drivers and it does not have a client that is preinstalled, applications can run directly from USB Flash or network shares without previously needing elevated security privileges.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;* Softricity (acquired by Microsoft) operates on a similar principle using device drivers to intercept file request in ring0 at a level closer to the operating system.  Softricity installs a client in Administrator mode which can then be accessed by restricted users on the machine.  An advantage of virtualizing at the kernel level is the Windows Loader (responsible for loading EXE and DLL files) does not need to be reimplemented and greater application compatibility can be achieved with less work (Softricity claims to support most major applications).  A disadvantage for ring0 implementation is it requires elevated security privileges to be installed and crashes or security defects can occur system wide rather than being isolated to a specific application.&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;* Softricity (acquired by Microsoft) operates on a similar principle using device drivers to intercept file request in ring0 at a level closer to the operating system.  Softricity installs a client in Administrator mode which can then be accessed by restricted users on the machine.  An advantage of virtualizing at the kernel level is the Windows Loader (responsible for loading EXE and DLL files) does not need to be reimplemented and greater application compatibility can be achieved with less work (Softricity claims to support most major applications).  A disadvantage for ring0 implementation is it requires elevated security privileges to be installed and crashes or security defects can occur system wide rather than being isolated to a specific application.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;Because Application Virtualization runs all application code natively, it can only provide security guarantees as strong as the host OS is able to provide.   Unlike full machine virtualization, Application virtualization solutions currently do not work with device drivers and other code that runs at ring0 such as virus scanners.  These special applications must be installed normally on the host PC in order to function.&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;Because Application Virtualization runs all application code natively, it can only provide security guarantees as strong as the host OS is able to provide.   Unlike full machine virtualization, Application virtualization solutions currently do not work with device drivers and other code that runs at ring0 such as virus scanners.  These special applications must be installed normally on the host PC in order to function.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
</diff></rev></revisions></page></pages></query><query-continue><revisions rvstartid="218539528" /></query-continue></api>
