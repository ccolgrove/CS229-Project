<?xml version="1.0"?><api><query><pages><page pageid="585308" ns="0" title="Chroot"><revisions><rev revid="207501497" parentid="205945948" user="SF007" timestamp="2008-04-23T01:20:01Z" comment="fixed internal link"><diff from="205945948" to="207501497" xml:space="preserve">&lt;tr&gt;
  &lt;td colspan=&quot;2&quot; class=&quot;diff-lineno&quot;&gt;Line 14:&lt;/td&gt;
  &lt;td colspan=&quot;2&quot; class=&quot;diff-lineno&quot;&gt;Line 14:&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;:; Dependency control : Software can be developed, built and tested in a chroot populated only with its expected dependencies.  This can prevent some kinds of linkage skew that can result from developers building projects with different sets of program libraries installed.&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;:; Dependency control : Software can be developed, built and tested in a chroot populated only with its expected dependencies.  This can prevent some kinds of linkage skew that can result from developers building projects with different sets of program libraries installed.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;:; Compatibility : Legacy software or software using a different [[application binary interface|ABI]] must sometimes be run in a chroot because their supporting libraries or data files may otherwise clash in name or linkage with those of the host system.&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;:; Compatibility : Legacy software or software using a different [[application binary interface|ABI]] must sometimes be run in a chroot because their supporting libraries or data files may otherwise clash in name or linkage with those of the host system.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt;â&lt;/td&gt;
  &lt;td class=&quot;diff-deletedline&quot;&gt;&lt;div&gt;:; Recovery : Should a system be rendered unbootable, a chroot can be used to move back into the damaged environment after bootstrapping from an alternate root file system (such as from installation media, or a &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;[[LiveCD]]).&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt;+&lt;/td&gt;
  &lt;td class=&quot;diff-addedline&quot;&gt;&lt;div&gt;:; Recovery : Should a system be rendered unbootable, a chroot can be used to move back into the damaged environment after bootstrapping from an alternate root file system (such as from installation media, or a &lt;span class=&quot;diffchange diffchange-inline&quot;&gt;[[Live CD]]).&lt;/span&gt;&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;:; Privilege separation : Chroots are often used as a pre-emptive way of containing a security breach by preventing an ''unprivileged'' attacker from doing any damage or probing the host system with a compromised program.  An attacker with root privileges, however, may trivially defeat this separation because the chroot does not bar system calls, shield processes outside the chroot from tracing or disallow access to block devices.&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;:; Privilege separation : Chroots are often used as a pre-emptive way of containing a security breach by preventing an ''unprivileged'' attacker from doing any damage or probing the host system with a compromised program.  An attacker with root privileges, however, may trivially defeat this separation because the chroot does not bar system calls, shield processes outside the chroot from tracing or disallow access to block devices.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;:; [[Honeypot (computing)|Honeypotting]] : A chroot can be populated so as to simulate a real system running network services.  However, as chroot does not virtualize system calls, access to block devices or virtual file systems (such as &amp;lt;tt&amp;gt;/proc&amp;lt;/tt&amp;gt; and &amp;lt;tt&amp;gt;/sys&amp;lt;/tt&amp;gt; on Linux), it may still be possible for an attacker in the honeypot to detect the presence of the honeypot and the system outside the chroot.&lt;/div&gt;&lt;/td&gt;
  &lt;td class=&quot;diff-marker&quot;&gt; &lt;/td&gt;
  &lt;td class=&quot;diff-context&quot;&gt;&lt;div&gt;:; [[Honeypot (computing)|Honeypotting]] : A chroot can be populated so as to simulate a real system running network services.  However, as chroot does not virtualize system calls, access to block devices or virtual file systems (such as &amp;lt;tt&amp;gt;/proc&amp;lt;/tt&amp;gt; and &amp;lt;tt&amp;gt;/sys&amp;lt;/tt&amp;gt; on Linux), it may still be possible for an attacker in the honeypot to detect the presence of the honeypot and the system outside the chroot.&lt;/div&gt;&lt;/td&gt;
&lt;/tr&gt;
</diff></rev></revisions></page></pages></query><query-continue><revisions rvstartid="205945948" /></query-continue></api>
